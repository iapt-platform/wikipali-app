id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: AeLa.EasyFeedback
  commentId: N:AeLa.EasyFeedback
  language: CSharp
  name:
    CSharp: AeLa.EasyFeedback
    VB: AeLa.EasyFeedback
  nameWithType:
    CSharp: AeLa.EasyFeedback
    VB: AeLa.EasyFeedback
  qualifiedName:
    CSharp: AeLa.EasyFeedback
    VB: AeLa.EasyFeedback
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AeLa.EasyFeedback.FeedbackForm
    commentId: T:AeLa.EasyFeedback.FeedbackForm
    language: CSharp
    name:
      CSharp: FeedbackForm
      VB: FeedbackForm
    nameWithType:
      CSharp: FeedbackForm
      VB: FeedbackForm
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FeedbackForm
      VB: AeLa.EasyFeedback.FeedbackForm
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: FeedbackForm
      path: ''
      startLine: 134
    syntax:
      content:
        CSharp: 'public class FeedbackForm : MonoBehaviour'
        VB: >-
          Public Class FeedbackForm

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FeedbackForm.Config
      commentId: F:AeLa.EasyFeedback.FeedbackForm.Config
      language: CSharp
      name:
        CSharp: Config
        VB: Config
      nameWithType:
        CSharp: FeedbackForm.Config
        VB: FeedbackForm.Config
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Config
        VB: AeLa.EasyFeedback.FeedbackForm.Config
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Config
        path: ''
        startLine: 140
      syntax:
        content:
          CSharp: public EFConfig Config
          VB: Public Config As EFConfig
        return:
          type: AeLa.EasyFeedback.EFConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.FeedbackKey
      commentId: F:AeLa.EasyFeedback.FeedbackForm.FeedbackKey
      language: CSharp
      name:
        CSharp: FeedbackKey
        VB: FeedbackKey
      nameWithType:
        CSharp: FeedbackForm.FeedbackKey
        VB: FeedbackForm.FeedbackKey
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.FeedbackKey
        VB: AeLa.EasyFeedback.FeedbackForm.FeedbackKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: FeedbackKey
        path: ''
        startLine: 143
      syntax:
        content:
          CSharp: public KeyCode FeedbackKey
          VB: Public FeedbackKey As KeyCode
        return:
          type: KeyCode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.IncludeScreenshot
      commentId: F:AeLa.EasyFeedback.FeedbackForm.IncludeScreenshot
      language: CSharp
      name:
        CSharp: IncludeScreenshot
        VB: IncludeScreenshot
      nameWithType:
        CSharp: FeedbackForm.IncludeScreenshot
        VB: FeedbackForm.IncludeScreenshot
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.IncludeScreenshot
        VB: AeLa.EasyFeedback.FeedbackForm.IncludeScreenshot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: IncludeScreenshot
        path: ''
        startLine: 146
      syntax:
        content:
          CSharp: public bool IncludeScreenshot
          VB: Public IncludeScreenshot As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.ResizeLargeScreenshots
      commentId: F:AeLa.EasyFeedback.FeedbackForm.ResizeLargeScreenshots
      language: CSharp
      name:
        CSharp: ResizeLargeScreenshots
        VB: ResizeLargeScreenshots
      nameWithType:
        CSharp: FeedbackForm.ResizeLargeScreenshots
        VB: FeedbackForm.ResizeLargeScreenshots
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.ResizeLargeScreenshots
        VB: AeLa.EasyFeedback.FeedbackForm.ResizeLargeScreenshots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: ResizeLargeScreenshots
        path: ''
        startLine: 152
      summary: "\nResizes screenshots larger than 1080p to help with Trello&apos;s filesize limit.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ResizeLargeScreenshots
          VB: Public ResizeLargeScreenshots As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.Form
      commentId: F:AeLa.EasyFeedback.FeedbackForm.Form
      language: CSharp
      name:
        CSharp: Form
        VB: Form
      nameWithType:
        CSharp: FeedbackForm.Form
        VB: FeedbackForm.Form
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Form
        VB: AeLa.EasyFeedback.FeedbackForm.Form
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Form
        path: ''
        startLine: 154
      syntax:
        content:
          CSharp: public Transform Form
          VB: Public Form As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnFormOpened
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnFormOpened
      language: CSharp
      name:
        CSharp: OnFormOpened
        VB: OnFormOpened
      nameWithType:
        CSharp: FeedbackForm.OnFormOpened
        VB: FeedbackForm.OnFormOpened
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnFormOpened
        VB: AeLa.EasyFeedback.FeedbackForm.OnFormOpened
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnFormOpened
        path: ''
        startLine: 160
      summary: "\nCalled when the form is first opened, right before it is shown on screen\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnFormOpened
          VB: Public OnFormOpened As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnFormSubmitted
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnFormSubmitted
      language: CSharp
      name:
        CSharp: OnFormSubmitted
        VB: OnFormSubmitted
      nameWithType:
        CSharp: FeedbackForm.OnFormSubmitted
        VB: FeedbackForm.OnFormSubmitted
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnFormSubmitted
        VB: AeLa.EasyFeedback.FeedbackForm.OnFormSubmitted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnFormSubmitted
        path: ''
        startLine: 167
      summary: "\nCalled right before the report is sent to Trello,\nso additional information may be added.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnFormSubmitted
          VB: Public OnFormSubmitted As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnFormClosed
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnFormClosed
      language: CSharp
      name:
        CSharp: OnFormClosed
        VB: OnFormClosed
      nameWithType:
        CSharp: FeedbackForm.OnFormClosed
        VB: FeedbackForm.OnFormClosed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnFormClosed
        VB: AeLa.EasyFeedback.FeedbackForm.OnFormClosed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnFormClosed
        path: ''
        startLine: 173
      summary: "\nCalled when the form is closed, whether or not it was submitted\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnFormClosed
          VB: Public OnFormClosed As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnSubmissionError
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnSubmissionError
      language: CSharp
      name:
        CSharp: OnSubmissionError
        VB: OnSubmissionError
      nameWithType:
        CSharp: FeedbackForm.OnSubmissionError
        VB: FeedbackForm.OnSubmissionError
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnSubmissionError
        VB: AeLa.EasyFeedback.FeedbackForm.OnSubmissionError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnSubmissionError
        path: ''
        startLine: 179
      summary: "\nCalled to notify of any errors during submission\n"
      example: []
      syntax:
        content:
          CSharp: public FeedbackForm.SubmissionMessageEvent OnSubmissionError
          VB: Public OnSubmissionError As FeedbackForm.SubmissionMessageEvent
        return:
          type: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnSubmissionSucceeded
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnSubmissionSucceeded
      language: CSharp
      name:
        CSharp: OnSubmissionSucceeded
        VB: OnSubmissionSucceeded
      nameWithType:
        CSharp: FeedbackForm.OnSubmissionSucceeded
        VB: FeedbackForm.OnSubmissionSucceeded
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnSubmissionSucceeded
        VB: AeLa.EasyFeedback.FeedbackForm.OnSubmissionSucceeded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnSubmissionSucceeded
        path: ''
        startLine: 185
      summary: "\nCalled when the submission has successfully completed\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnSubmissionSucceeded
          VB: Public OnSubmissionSucceeded As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.OnSubmissionFailed
      commentId: F:AeLa.EasyFeedback.FeedbackForm.OnSubmissionFailed
      language: CSharp
      name:
        CSharp: OnSubmissionFailed
        VB: OnSubmissionFailed
      nameWithType:
        CSharp: FeedbackForm.OnSubmissionFailed
        VB: FeedbackForm.OnSubmissionFailed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.OnSubmissionFailed
        VB: AeLa.EasyFeedback.FeedbackForm.OnSubmissionFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: OnSubmissionFailed
        path: ''
        startLine: 191
      summary: "\nCalled if the submission fails\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent OnSubmissionFailed
          VB: Public OnSubmissionFailed As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.CurrentReport
      commentId: F:AeLa.EasyFeedback.FeedbackForm.CurrentReport
      language: CSharp
      name:
        CSharp: CurrentReport
        VB: CurrentReport
      nameWithType:
        CSharp: FeedbackForm.CurrentReport
        VB: FeedbackForm.CurrentReport
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.CurrentReport
        VB: AeLa.EasyFeedback.FeedbackForm.CurrentReport
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: CurrentReport
        path: ''
        startLine: 205
      summary: "\nThe current report being built.\nWill be sent as next report\n"
      example: []
      syntax:
        content:
          CSharp: public Report CurrentReport
          VB: Public CurrentReport As Report
        return:
          type: AeLa.EasyFeedback.Report
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.IsOpen
      commentId: P:AeLa.EasyFeedback.FeedbackForm.IsOpen
      language: CSharp
      name:
        CSharp: IsOpen
        VB: IsOpen
      nameWithType:
        CSharp: FeedbackForm.IsOpen
        VB: FeedbackForm.IsOpen
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.IsOpen
        VB: AeLa.EasyFeedback.FeedbackForm.IsOpen
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: IsOpen
        path: ''
        startLine: 224
      summary: "\nWhether or not the form is currently being displayed\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsOpen { get; }
          VB: Public ReadOnly Property IsOpen As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AeLa.EasyFeedback.FeedbackForm.IsOpen*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AeLa.EasyFeedback.FeedbackForm.Awake
      commentId: M:AeLa.EasyFeedback.FeedbackForm.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: FeedbackForm.Awake()
        VB: FeedbackForm.Awake()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Awake()
        VB: AeLa.EasyFeedback.FeedbackForm.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Awake
        path: ''
        startLine: 227
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: AeLa.EasyFeedback.FeedbackForm.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI
      commentId: M:AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI
      language: CSharp
      name:
        CSharp: InitTrelloAPI()
        VB: InitTrelloAPI()
      nameWithType:
        CSharp: FeedbackForm.InitTrelloAPI()
        VB: FeedbackForm.InitTrelloAPI()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI()
        VB: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: InitTrelloAPI
        path: ''
        startLine: 252
      syntax:
        content:
          CSharp: public void InitTrelloAPI()
          VB: Public Sub InitTrelloAPI
      overload: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.Show
      commentId: M:AeLa.EasyFeedback.FeedbackForm.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: FeedbackForm.Show()
        VB: FeedbackForm.Show()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Show()
        VB: AeLa.EasyFeedback.FeedbackForm.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Show
        path: ''
        startLine: 269
      summary: "\nTakes a screenshot, then opens the form\n"
      example: []
      syntax:
        content:
          CSharp: public void Show()
          VB: Public Sub Show
      overload: AeLa.EasyFeedback.FeedbackForm.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.Submit
      commentId: M:AeLa.EasyFeedback.FeedbackForm.Submit
      language: CSharp
      name:
        CSharp: Submit()
        VB: Submit()
      nameWithType:
        CSharp: FeedbackForm.Submit()
        VB: FeedbackForm.Submit()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Submit()
        VB: AeLa.EasyFeedback.FeedbackForm.Submit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Submit
        path: ''
        startLine: 278
      summary: "\nCalled by the submit button, submits the form.\n"
      example: []
      syntax:
        content:
          CSharp: public void Submit()
          VB: Public Sub Submit
      overload: AeLa.EasyFeedback.FeedbackForm.Submit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.DisableForm
      commentId: M:AeLa.EasyFeedback.FeedbackForm.DisableForm
      language: CSharp
      name:
        CSharp: DisableForm()
        VB: DisableForm()
      nameWithType:
        CSharp: FeedbackForm.DisableForm()
        VB: FeedbackForm.DisableForm()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.DisableForm()
        VB: AeLa.EasyFeedback.FeedbackForm.DisableForm()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: DisableForm
        path: ''
        startLine: 400
      summary: "\nDisables all the Selectable elements on the form.\n"
      example: []
      syntax:
        content:
          CSharp: public void DisableForm()
          VB: Public Sub DisableForm
      overload: AeLa.EasyFeedback.FeedbackForm.DisableForm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.EnableForm
      commentId: M:AeLa.EasyFeedback.FeedbackForm.EnableForm
      language: CSharp
      name:
        CSharp: EnableForm()
        VB: EnableForm()
      nameWithType:
        CSharp: FeedbackForm.EnableForm()
        VB: FeedbackForm.EnableForm()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.EnableForm()
        VB: AeLa.EasyFeedback.FeedbackForm.EnableForm()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: EnableForm
        path: ''
        startLine: 412
      summary: "\nEnables all the Selectable elements on the form.\n"
      example: []
      syntax:
        content:
          CSharp: public void EnableForm()
          VB: Public Sub EnableForm
      overload: AeLa.EasyFeedback.FeedbackForm.EnableForm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackForm.Hide
      commentId: M:AeLa.EasyFeedback.FeedbackForm.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: FeedbackForm.Hide()
        VB: FeedbackForm.Hide()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackForm.Hide()
        VB: AeLa.EasyFeedback.FeedbackForm.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Hide
        path: ''
        startLine: 424
      summary: "\nHides the form, called by the Close button.\n"
      example: []
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: AeLa.EasyFeedback.FeedbackForm.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
    commentId: T:AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
    language: CSharp
    name:
      CSharp: FeedbackForm.SubmissionMessageEvent
      VB: FeedbackForm.SubmissionMessageEvent
    nameWithType:
      CSharp: FeedbackForm.SubmissionMessageEvent
      VB: FeedbackForm.SubmissionMessageEvent
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
      VB: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: SubmissionMessageEvent
      path: ''
      startLine: 196
    summary: "\nA submission event including a message\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SubmissionMessageEvent : UnityEvent<string>'
        VB: >-
          Public Class SubmissionMessageEvent

              Inherits UnityEvent(Of String)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AeLa.EasyFeedback.ReportSection
    commentId: T:AeLa.EasyFeedback.ReportSection
    language: CSharp
    name:
      CSharp: ReportSection
      VB: ReportSection
    nameWithType:
      CSharp: ReportSection
      VB: ReportSection
    qualifiedName:
      CSharp: AeLa.EasyFeedback.ReportSection
      VB: AeLa.EasyFeedback.ReportSection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: ReportSection
      path: ''
      startLine: 504
    syntax:
      content:
        CSharp: public class ReportSection
        VB: Public Class ReportSection
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.ReportSection.Title
      commentId: F:AeLa.EasyFeedback.ReportSection.Title
      language: CSharp
      name:
        CSharp: Title
        VB: Title
      nameWithType:
        CSharp: ReportSection.Title
        VB: ReportSection.Title
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.Title
        VB: AeLa.EasyFeedback.ReportSection.Title
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Title
        path: ''
        startLine: 509
      summary: "\nThe title of this section\n"
      example: []
      syntax:
        content:
          CSharp: public string Title
          VB: Public Title As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.SortOrder
      commentId: F:AeLa.EasyFeedback.ReportSection.SortOrder
      language: CSharp
      name:
        CSharp: SortOrder
        VB: SortOrder
      nameWithType:
        CSharp: ReportSection.SortOrder
        VB: ReportSection.SortOrder
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.SortOrder
        VB: AeLa.EasyFeedback.ReportSection.SortOrder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: SortOrder
        path: ''
        startLine: 516
      summary: "\nThe order of this element in the report (lowest first)\n"
      example: []
      syntax:
        content:
          CSharp: public int SortOrder
          VB: Public SortOrder As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.#ctor(System.String,System.Int32)
      commentId: M:AeLa.EasyFeedback.ReportSection.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: ReportSection(String, Int32)
        VB: ReportSection(String, Int32)
      nameWithType:
        CSharp: ReportSection.ReportSection(String, Int32)
        VB: ReportSection.ReportSection(String, Int32)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.ReportSection(System.String, System.Int32)
        VB: AeLa.EasyFeedback.ReportSection.ReportSection(System.String, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: .ctor
        path: ''
        startLine: 523
      summary: "\nCreates a new report section with the specified title and sort order\n"
      example: []
      syntax:
        content:
          CSharp: public ReportSection(string title, int sortOrder = 0)
          VB: Public Sub New(title As String, sortOrder As Integer = 0)
        parameters:
        - id: title
          type: System.String
          description: ''
        - id: sortOrder
          type: System.Int32
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.#ctor(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.ReportSection.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: ReportSection(String, String)
        VB: ReportSection(String, String)
      nameWithType:
        CSharp: ReportSection.ReportSection(String, String)
        VB: ReportSection.ReportSection(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.ReportSection(System.String, System.String)
        VB: AeLa.EasyFeedback.ReportSection.ReportSection(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: .ctor
        path: ''
        startLine: 535
      summary: "\nCreates a new report section with the specified title and text\n"
      example: []
      syntax:
        content:
          CSharp: public ReportSection(string title, string text)
          VB: Public Sub New(title As String, text As String)
        parameters:
        - id: title
          type: System.String
          description: ''
        - id: text
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.Append(System.String)
      commentId: M:AeLa.EasyFeedback.ReportSection.Append(System.String)
      language: CSharp
      name:
        CSharp: Append(String)
        VB: Append(String)
      nameWithType:
        CSharp: ReportSection.Append(String)
        VB: ReportSection.Append(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.Append(System.String)
        VB: AeLa.EasyFeedback.ReportSection.Append(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Append
        path: ''
        startLine: 545
      summary: "\nAppends text to the section text\n"
      example: []
      syntax:
        content:
          CSharp: public void Append(string text)
          VB: Public Sub Append(text As String)
        parameters:
        - id: text
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.Append*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.AppendLine(System.String)
      commentId: M:AeLa.EasyFeedback.ReportSection.AppendLine(System.String)
      language: CSharp
      name:
        CSharp: AppendLine(String)
        VB: AppendLine(String)
      nameWithType:
        CSharp: ReportSection.AppendLine(String)
        VB: ReportSection.AppendLine(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.AppendLine(System.String)
        VB: AeLa.EasyFeedback.ReportSection.AppendLine(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AppendLine
        path: ''
        startLine: 554
      summary: "\nAppends a line to the section text\n"
      example: []
      syntax:
        content:
          CSharp: public void AppendLine(string line)
          VB: Public Sub AppendLine(line As String)
        parameters:
        - id: line
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.AppendLine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.SetText(System.String)
      commentId: M:AeLa.EasyFeedback.ReportSection.SetText(System.String)
      language: CSharp
      name:
        CSharp: SetText(String)
        VB: SetText(String)
      nameWithType:
        CSharp: ReportSection.SetText(String)
        VB: ReportSection.SetText(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.SetText(System.String)
        VB: AeLa.EasyFeedback.ReportSection.SetText(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: SetText
        path: ''
        startLine: 563
      summary: "\nReplaces the existing section text with specified text\n"
      example: []
      syntax:
        content:
          CSharp: public void SetText(string text)
          VB: Public Sub SetText(text As String)
        parameters:
        - id: text
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.SetText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.ReportSection.ToString
      commentId: M:AeLa.EasyFeedback.ReportSection.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ReportSection.ToString()
        VB: ReportSection.ToString()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.ReportSection.ToString()
        VB: AeLa.EasyFeedback.ReportSection.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: ToString
        path: ''
        startLine: 572
      summary: "\nReturns the section in markdown formatting for Trello\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.ReportSection.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: AeLa.EasyFeedback.Report
    commentId: T:AeLa.EasyFeedback.Report
    language: CSharp
    name:
      CSharp: Report
      VB: Report
    nameWithType:
      CSharp: Report
      VB: Report
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Report
      VB: AeLa.EasyFeedback.Report
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: Report
      path: ''
      startLine: 594
    syntax:
      content:
        CSharp: public class Report
        VB: Public Class Report
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.Report.Labels
      commentId: F:AeLa.EasyFeedback.Report.Labels
      language: CSharp
      name:
        CSharp: Labels
        VB: Labels
      nameWithType:
        CSharp: Report.Labels
        VB: Report.Labels
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.Labels
        VB: AeLa.EasyFeedback.Report.Labels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Labels
        path: ''
        startLine: 602
      summary: "\nLabels to add to the card on Trello\n"
      example: []
      syntax:
        content:
          CSharp: public readonly List<Label> Labels
          VB: Public ReadOnly Labels As List(Of Label)
        return:
          type: List{Label}
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: AeLa.EasyFeedback.Report.List
      commentId: F:AeLa.EasyFeedback.Report.List
      language: CSharp
      name:
        CSharp: List
        VB: List
      nameWithType:
        CSharp: Report.List
        VB: Report.List
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.List
        VB: AeLa.EasyFeedback.Report.List
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: List
        path: ''
        startLine: 612
      summary: "\nTrello list this report will be added to\n"
      example: []
      syntax:
        content:
          CSharp: public List List
          VB: Public List As List
        return:
          type: List
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.Title
      commentId: F:AeLa.EasyFeedback.Report.Title
      language: CSharp
      name:
        CSharp: Title
        VB: Title
      nameWithType:
        CSharp: Report.Title
        VB: Report.Title
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.Title
        VB: AeLa.EasyFeedback.Report.Title
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Title
        path: ''
        startLine: 617
      summary: "\nThe title of the card on Trello\n"
      example: []
      syntax:
        content:
          CSharp: public string Title
          VB: Public Title As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.Attachments
      commentId: P:AeLa.EasyFeedback.Report.Attachments
      language: CSharp
      name:
        CSharp: Attachments
        VB: Attachments
      nameWithType:
        CSharp: Report.Attachments
        VB: Report.Attachments
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.Attachments
        VB: AeLa.EasyFeedback.Report.Attachments
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Attachments
        path: ''
        startLine: 625
      summary: "\nAdditional files attached to this report\n"
      remarks: "\nPrivate to enforce Trello attachment limit (100)\n"
      example: []
      syntax:
        content:
          CSharp: public List<FileAttachment> Attachments { get; }
          VB: Public ReadOnly Property Attachments As List(Of FileAttachment)
        parameters: []
        return:
          type: List{FileAttachment}
      overload: AeLa.EasyFeedback.Report.Attachments*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AeLa.EasyFeedback.Report.Item(System.String)
      commentId: P:AeLa.EasyFeedback.Report.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: Report.Item[String]
        VB: Report.Item(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.Item[System.String]
        VB: AeLa.EasyFeedback.Report.Item(System.String)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: this[]
        path: ''
        startLine: 632
      summary: "\nReturns a section in the report by title\n"
      example: []
      syntax:
        content:
          CSharp: public ReportSection this[string sectionTitle] { get; set; }
          VB: Public Property Item(sectionTitle As String) As ReportSection
        parameters:
        - id: sectionTitle
          type: System.String
          description: ''
        return:
          type: AeLa.EasyFeedback.ReportSection
          description: ''
      overload: AeLa.EasyFeedback.Report.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.#ctor
      commentId: M:AeLa.EasyFeedback.Report.#ctor
      language: CSharp
      name:
        CSharp: Report()
        VB: Report()
      nameWithType:
        CSharp: Report.Report()
        VB: Report.Report()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.Report()
        VB: AeLa.EasyFeedback.Report.Report()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: .ctor
        path: ''
        startLine: 657
      syntax:
        content:
          CSharp: public Report()
          VB: Public Sub New
      overload: AeLa.EasyFeedback.Report.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AddSection(System.String,System.Int32)
      commentId: M:AeLa.EasyFeedback.Report.AddSection(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: AddSection(String, Int32)
        VB: AddSection(String, Int32)
      nameWithType:
        CSharp: Report.AddSection(String, Int32)
        VB: Report.AddSection(String, Int32)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AddSection(System.String, System.Int32)
        VB: AeLa.EasyFeedback.Report.AddSection(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AddSection
        path: ''
        startLine: 671
      summary: "\nAdds a new empty section to the report\n"
      example: []
      syntax:
        content:
          CSharp: public void AddSection(string title, int sortOrder = 0)
          VB: Public Sub AddSection(title As String, sortOrder As Integer = 0)
        parameters:
        - id: title
          type: System.String
          description: The title of the section
        - id: sortOrder
          type: System.Int32
          description: The order of the section on the report (lowest first)
      overload: AeLa.EasyFeedback.Report.AddSection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AddSection(AeLa.EasyFeedback.ReportSection)
      commentId: M:AeLa.EasyFeedback.Report.AddSection(AeLa.EasyFeedback.ReportSection)
      language: CSharp
      name:
        CSharp: AddSection(ReportSection)
        VB: AddSection(ReportSection)
      nameWithType:
        CSharp: Report.AddSection(ReportSection)
        VB: Report.AddSection(ReportSection)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AddSection(AeLa.EasyFeedback.ReportSection)
        VB: AeLa.EasyFeedback.Report.AddSection(AeLa.EasyFeedback.ReportSection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AddSection
        path: ''
        startLine: 680
      summary: "\nAdds a new section to the report\n"
      example: []
      syntax:
        content:
          CSharp: public void AddSection(ReportSection section)
          VB: Public Sub AddSection(section As ReportSection)
        parameters:
        - id: section
          type: AeLa.EasyFeedback.ReportSection
          description: ''
      overload: AeLa.EasyFeedback.Report.AddSection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.RemoveSection(System.String)
      commentId: M:AeLa.EasyFeedback.Report.RemoveSection(System.String)
      language: CSharp
      name:
        CSharp: RemoveSection(String)
        VB: RemoveSection(String)
      nameWithType:
        CSharp: Report.RemoveSection(String)
        VB: Report.RemoveSection(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.RemoveSection(System.String)
        VB: AeLa.EasyFeedback.Report.RemoveSection(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: RemoveSection
        path: ''
        startLine: 696
      syntax:
        content:
          CSharp: public void RemoveSection(string title)
          VB: Public Sub RemoveSection(title As String)
        parameters:
        - id: title
          type: System.String
      overload: AeLa.EasyFeedback.Report.RemoveSection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.HasSection(System.String)
      commentId: M:AeLa.EasyFeedback.Report.HasSection(System.String)
      language: CSharp
      name:
        CSharp: HasSection(String)
        VB: HasSection(String)
      nameWithType:
        CSharp: Report.HasSection(String)
        VB: Report.HasSection(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.HasSection(System.String)
        VB: AeLa.EasyFeedback.Report.HasSection(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: HasSection
        path: ''
        startLine: 715
      summary: "\nChecks whether the report already has a section\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasSection(string title)
          VB: Public Function HasSection(title As String) As Boolean
        parameters:
        - id: title
          type: System.String
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: AeLa.EasyFeedback.Report.HasSection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.ToString
      commentId: M:AeLa.EasyFeedback.Report.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Report.ToString()
        VB: Report.ToString()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.ToString()
        VB: AeLa.EasyFeedback.Report.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: ToString
        path: ''
        startLine: 724
      summary: "\nReturns the report formatted in markdown for Trello\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.Report.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: AeLa.EasyFeedback.Report.GetLocalFileText
      commentId: M:AeLa.EasyFeedback.Report.GetLocalFileText
      language: CSharp
      name:
        CSharp: GetLocalFileText()
        VB: GetLocalFileText()
      nameWithType:
        CSharp: Report.GetLocalFileText()
        VB: Report.GetLocalFileText()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.GetLocalFileText()
        VB: AeLa.EasyFeedback.Report.GetLocalFileText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: GetLocalFileText
        path: ''
        startLine: 739
      syntax:
        content:
          CSharp: public string GetLocalFileText()
          VB: Public Function GetLocalFileText As String
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Report.GetLocalFileText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AttachFile(FileAttachment)
      commentId: M:AeLa.EasyFeedback.Report.AttachFile(FileAttachment)
      language: CSharp
      name:
        CSharp: AttachFile(FileAttachment)
        VB: AttachFile(FileAttachment)
      nameWithType:
        CSharp: Report.AttachFile(FileAttachment)
        VB: Report.AttachFile(FileAttachment)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AttachFile(FileAttachment)
        VB: AeLa.EasyFeedback.Report.AttachFile(FileAttachment)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AttachFile
        path: ''
        startLine: 764
      summary: "\nAttach a file to the report\n"
      example: []
      syntax:
        content:
          CSharp: public void AttachFile(FileAttachment file)
          VB: Public Sub AttachFile(file As FileAttachment)
        parameters:
        - id: file
          type: FileAttachment
          description: ''
      overload: AeLa.EasyFeedback.Report.AttachFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AttachFile(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Report.AttachFile(System.String,System.String)
      language: CSharp
      name:
        CSharp: AttachFile(String, String)
        VB: AttachFile(String, String)
      nameWithType:
        CSharp: Report.AttachFile(String, String)
        VB: Report.AttachFile(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AttachFile(System.String, System.String)
        VB: AeLa.EasyFeedback.Report.AttachFile(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AttachFile
        path: ''
        startLine: 783
      summary: "\nAttach a file to the report\n"
      example: []
      syntax:
        content:
          CSharp: public void AttachFile(string name, string filePath)
          VB: Public Sub AttachFile(name As String, filePath As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the file
        - id: filePath
          type: System.String
          description: The path to the file
      overload: AeLa.EasyFeedback.Report.AttachFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AttachFile(System.String,System.Byte[])
      commentId: M:AeLa.EasyFeedback.Report.AttachFile(System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: AttachFile(String, Byte[])
        VB: AttachFile(String, Byte())
      nameWithType:
        CSharp: Report.AttachFile(String, Byte[])
        VB: Report.AttachFile(String, Byte())
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AttachFile(System.String, System.Byte[])
        VB: AeLa.EasyFeedback.Report.AttachFile(System.String, System.Byte())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AttachFile
        path: ''
        startLine: 793
      summary: "\nAttach a file to the report\n"
      example: []
      syntax:
        content:
          CSharp: public void AttachFile(string name, byte[] data)
          VB: Public Sub AttachFile(name As String, data As Byte())
        parameters:
        - id: name
          type: System.String
          description: The name of the file
        - id: data
          type: System.Byte[]
          description: The file data
      overload: AeLa.EasyFeedback.Report.AttachFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.AddLabel(Label)
      commentId: M:AeLa.EasyFeedback.Report.AddLabel(Label)
      language: CSharp
      name:
        CSharp: AddLabel(Label)
        VB: AddLabel(Label)
      nameWithType:
        CSharp: Report.AddLabel(Label)
        VB: Report.AddLabel(Label)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.AddLabel(Label)
        VB: AeLa.EasyFeedback.Report.AddLabel(Label)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: AddLabel
        path: ''
        startLine: 801
      summary: "\nAdds a label to the report.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddLabel(Label label)
          VB: Public Sub AddLabel(label As Label)
        parameters:
        - id: label
          type: Label
      overload: AeLa.EasyFeedback.Report.AddLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Report.HasLabel(Label)
      commentId: M:AeLa.EasyFeedback.Report.HasLabel(Label)
      language: CSharp
      name:
        CSharp: HasLabel(Label)
        VB: HasLabel(Label)
      nameWithType:
        CSharp: Report.HasLabel(Label)
        VB: Report.HasLabel(Label)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Report.HasLabel(Label)
        VB: AeLa.EasyFeedback.Report.HasLabel(Label)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: HasLabel
        path: ''
        startLine: 817
      summary: "\nChecks if the report already has a label.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasLabel(Label label)
          VB: Public Function HasLabel(label As Label) As Boolean
        parameters:
        - id: label
          type: Label
        return:
          type: System.Boolean
      overload: AeLa.EasyFeedback.Report.HasLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.FormField
    commentId: T:AeLa.EasyFeedback.FormField
    language: CSharp
    name:
      CSharp: FormField
      VB: FormField
    nameWithType:
      CSharp: FormField
      VB: FormField
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FormField
      VB: AeLa.EasyFeedback.FormField
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: FormField
      path: ''
      startLine: 827
    summary: "\nManages a field on the <xref href=\"AeLa.EasyFeedback.FeedbackForm\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class FormField : FormElement'
        VB: >-
          Public MustInherit Class FormField

              Inherits FormElement
    inheritance:
    - System.Object
    - AeLa.EasyFeedback.FormElement
    inheritedMembers:
    - AeLa.EasyFeedback.FormElement.Form
    - AeLa.EasyFeedback.FormElement.FormOpened
    - AeLa.EasyFeedback.FormElement.FormSubmitted
    - AeLa.EasyFeedback.FormElement.FormClosed
    - AeLa.EasyFeedback.FormElement.Awake
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: AeLa.EasyFeedback.FormField.SectionTitle
      commentId: F:AeLa.EasyFeedback.FormField.SectionTitle
      language: CSharp
      name:
        CSharp: SectionTitle
        VB: SectionTitle
      nameWithType:
        CSharp: FormField.SectionTitle
        VB: FormField.SectionTitle
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormField.SectionTitle
        VB: AeLa.EasyFeedback.FormField.SectionTitle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: SectionTitle
        path: ''
        startLine: 833
      summary: "\nThe title of this field&apos;s section on the report\n"
      example: []
      syntax:
        content:
          CSharp: public string SectionTitle
          VB: Public SectionTitle As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FormField.SortOrder
      commentId: F:AeLa.EasyFeedback.FormField.SortOrder
      language: CSharp
      name:
        CSharp: SortOrder
        VB: SortOrder
      nameWithType:
        CSharp: FormField.SortOrder
        VB: FormField.SortOrder
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormField.SortOrder
        VB: AeLa.EasyFeedback.FormField.SortOrder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: SortOrder
        path: ''
        startLine: 839
      summary: "\nOrder of the section in the report (lowest first)\n"
      example: []
      syntax:
        content:
          CSharp: public int SortOrder
          VB: Public SortOrder As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      AeLa.EasyFeedback.FeedbackForm: 
  - id: AeLa.EasyFeedback.FeedbackText
    commentId: T:AeLa.EasyFeedback.FeedbackText
    language: CSharp
    name:
      CSharp: FeedbackText
      VB: FeedbackText
    nameWithType:
      CSharp: FeedbackText
      VB: FeedbackText
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FeedbackText
      VB: AeLa.EasyFeedback.FeedbackText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: FeedbackText
      path: ''
      startLine: 851
    syntax:
      content:
        CSharp: 'public class FeedbackText : MonoBehaviour'
        VB: >-
          Public Class FeedbackText

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FeedbackText.Message
      commentId: F:AeLa.EasyFeedback.FeedbackText.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: FeedbackText.Message
        VB: FeedbackText.Message
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackText.Message
        VB: AeLa.EasyFeedback.FeedbackText.Message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Message
        path: ''
        startLine: 853
      syntax:
        content:
          CSharp: public string Message
          VB: Public Message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackText.Form
      commentId: F:AeLa.EasyFeedback.FeedbackText.Form
      language: CSharp
      name:
        CSharp: Form
        VB: Form
      nameWithType:
        CSharp: FeedbackText.Form
        VB: FeedbackText.Form
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackText.Form
        VB: AeLa.EasyFeedback.FeedbackText.Form
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Form
        path: ''
        startLine: 854
      syntax:
        content:
          CSharp: public FeedbackForm Form
          VB: Public Form As FeedbackForm
        return:
          type: AeLa.EasyFeedback.FeedbackForm
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.FormElement
    commentId: T:AeLa.EasyFeedback.FormElement
    language: CSharp
    name:
      CSharp: FormElement
      VB: FormElement
    nameWithType:
      CSharp: FormElement
      VB: FormElement
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FormElement
      VB: AeLa.EasyFeedback.FormElement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: FormElement
      path: ''
      startLine: 886
    summary: "\nParent class for any element that responds to the\nbasic <xref href=\"AeLa.EasyFeedback.FeedbackForm\" data-throw-if-not-resolved=\"false\"></xref> events.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class FormElement : MonoBehaviour'
        VB: >-
          Public MustInherit Class FormElement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: AeLa.EasyFeedback.FormElement.Form
      commentId: F:AeLa.EasyFeedback.FormElement.Form
      language: CSharp
      name:
        CSharp: Form
        VB: Form
      nameWithType:
        CSharp: FormElement.Form
        VB: FormElement.Form
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElement.Form
        VB: AeLa.EasyFeedback.FormElement.Form
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Form
        path: ''
        startLine: 891
      summary: "\nThe feedback form this component is a part of\n"
      example: []
      syntax:
        content:
          CSharp: protected FeedbackForm Form
          VB: Protected Form As FeedbackForm
        return:
          type: AeLa.EasyFeedback.FeedbackForm
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.FormElement.FormOpened
      commentId: M:AeLa.EasyFeedback.FormElement.FormOpened
      language: CSharp
      name:
        CSharp: FormOpened()
        VB: FormOpened()
      nameWithType:
        CSharp: FormElement.FormOpened()
        VB: FormElement.FormOpened()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElement.FormOpened()
        VB: AeLa.EasyFeedback.FormElement.FormOpened()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: FormOpened
        path: ''
        startLine: 896
      summary: "\nCalled when the form is first opened, right before it is shown on screen\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void FormOpened()
          VB: Protected MustOverride Sub FormOpened
      overload: AeLa.EasyFeedback.FormElement.FormOpened*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: AeLa.EasyFeedback.FormElement.FormSubmitted
      commentId: M:AeLa.EasyFeedback.FormElement.FormSubmitted
      language: CSharp
      name:
        CSharp: FormSubmitted()
        VB: FormSubmitted()
      nameWithType:
        CSharp: FormElement.FormSubmitted()
        VB: FormElement.FormSubmitted()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElement.FormSubmitted()
        VB: AeLa.EasyFeedback.FormElement.FormSubmitted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: FormSubmitted
        path: ''
        startLine: 904
      summary: "\nCalled right before the report is sent to Trello\n"
      remarks: "\nAdd user-provided data to your report here\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void FormSubmitted()
          VB: Protected MustOverride Sub FormSubmitted
      overload: AeLa.EasyFeedback.FormElement.FormSubmitted*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: AeLa.EasyFeedback.FormElement.FormClosed
      commentId: M:AeLa.EasyFeedback.FormElement.FormClosed
      language: CSharp
      name:
        CSharp: FormClosed()
        VB: FormClosed()
      nameWithType:
        CSharp: FormElement.FormClosed()
        VB: FormElement.FormClosed()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElement.FormClosed()
        VB: AeLa.EasyFeedback.FormElement.FormClosed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: FormClosed
        path: ''
        startLine: 909
      summary: "\nCalled when the form is closed, whether or not it was submitted\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void FormClosed()
          VB: Protected MustOverride Sub FormClosed
      overload: AeLa.EasyFeedback.FormElement.FormClosed*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: AeLa.EasyFeedback.FormElement.Awake
      commentId: M:AeLa.EasyFeedback.FormElement.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: FormElement.Awake()
        VB: FormElement.Awake()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElement.Awake()
        VB: AeLa.EasyFeedback.FormElement.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Awake
        path: ''
        startLine: 911
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: AeLa.EasyFeedback.FormElement.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    references:
      AeLa.EasyFeedback.FeedbackForm: 
  - id: AeLa.EasyFeedback.EFConfig
    commentId: T:AeLa.EasyFeedback.EFConfig
    language: CSharp
    name:
      CSharp: EFConfig
      VB: EFConfig
    nameWithType:
      CSharp: EFConfig
      VB: EFConfig
    qualifiedName:
      CSharp: AeLa.EasyFeedback.EFConfig
      VB: AeLa.EasyFeedback.EFConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: EFConfig
      path: ''
      startLine: 938
    summary: "\nConfiguration information for Easy Feedback\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EFConfig : ScriptableObject'
        VB: >-
          Public Class EFConfig

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.EFConfig.StoreLocal
      commentId: F:AeLa.EasyFeedback.EFConfig.StoreLocal
      language: CSharp
      name:
        CSharp: StoreLocal
        VB: StoreLocal
      nameWithType:
        CSharp: EFConfig.StoreLocal
        VB: EFConfig.StoreLocal
      qualifiedName:
        CSharp: AeLa.EasyFeedback.EFConfig.StoreLocal
        VB: AeLa.EasyFeedback.EFConfig.StoreLocal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: StoreLocal
        path: ''
        startLine: 941
      syntax:
        content:
          CSharp: public bool StoreLocal
          VB: Public StoreLocal As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.EFConfig.Token
      commentId: F:AeLa.EasyFeedback.EFConfig.Token
      language: CSharp
      name:
        CSharp: Token
        VB: Token
      nameWithType:
        CSharp: EFConfig.Token
        VB: EFConfig.Token
      qualifiedName:
        CSharp: AeLa.EasyFeedback.EFConfig.Token
        VB: AeLa.EasyFeedback.EFConfig.Token
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Token
        path: ''
        startLine: 942
      syntax:
        content:
          CSharp: public string Token
          VB: Public Token As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.EFConfig.Board
      commentId: F:AeLa.EasyFeedback.EFConfig.Board
      language: CSharp
      name:
        CSharp: Board
        VB: Board
      nameWithType:
        CSharp: EFConfig.Board
        VB: EFConfig.Board
      qualifiedName:
        CSharp: AeLa.EasyFeedback.EFConfig.Board
        VB: AeLa.EasyFeedback.EFConfig.Board
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Board
        path: ''
        startLine: 943
      syntax:
        content:
          CSharp: public FeedbackBoard Board
          VB: Public Board As FeedbackBoard
        return:
          type: AeLa.EasyFeedback.FeedbackBoard
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.EFConfig.#ctor
      commentId: M:AeLa.EasyFeedback.EFConfig.#ctor
      language: CSharp
      name:
        CSharp: EFConfig()
        VB: EFConfig()
      nameWithType:
        CSharp: EFConfig.EFConfig()
        VB: EFConfig.EFConfig()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.EFConfig.EFConfig()
        VB: AeLa.EasyFeedback.EFConfig.EFConfig()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: .ctor
        path: ''
        startLine: 945
      syntax:
        content:
          CSharp: public EFConfig()
          VB: Public Sub New
      overload: AeLa.EasyFeedback.EFConfig.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.FeedbackBoard
    commentId: T:AeLa.EasyFeedback.FeedbackBoard
    language: CSharp
    name:
      CSharp: FeedbackBoard
      VB: FeedbackBoard
    nameWithType:
      CSharp: FeedbackBoard
      VB: FeedbackBoard
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FeedbackBoard
      VB: AeLa.EasyFeedback.FeedbackBoard
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback
    source:
      id: FeedbackBoard
      path: ''
      startLine: 954
    syntax:
      content:
        CSharp: public class FeedbackBoard
        VB: Public Class FeedbackBoard
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FeedbackBoard.Id
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: FeedbackBoard.Id
        VB: FeedbackBoard.Id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.Id
        VB: AeLa.EasyFeedback.FeedbackBoard.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Id
        path: ''
        startLine: 957
      syntax:
        content:
          CSharp: public string Id
          VB: Public Id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackBoard.ListNames
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.ListNames
      language: CSharp
      name:
        CSharp: ListNames
        VB: ListNames
      nameWithType:
        CSharp: FeedbackBoard.ListNames
        VB: FeedbackBoard.ListNames
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.ListNames
        VB: AeLa.EasyFeedback.FeedbackBoard.ListNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: ListNames
        path: ''
        startLine: 959
      syntax:
        content:
          CSharp: public string[] ListNames
          VB: Public ListNames As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackBoard.ListIds
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.ListIds
      language: CSharp
      name:
        CSharp: ListIds
        VB: ListIds
      nameWithType:
        CSharp: FeedbackBoard.ListIds
        VB: FeedbackBoard.ListIds
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.ListIds
        VB: AeLa.EasyFeedback.FeedbackBoard.ListIds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: ListIds
        path: ''
        startLine: 960
      syntax:
        content:
          CSharp: public string[] ListIds
          VB: Public ListIds As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackBoard.CategoryNames
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.CategoryNames
      language: CSharp
      name:
        CSharp: CategoryNames
        VB: CategoryNames
      nameWithType:
        CSharp: FeedbackBoard.CategoryNames
        VB: FeedbackBoard.CategoryNames
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.CategoryNames
        VB: AeLa.EasyFeedback.FeedbackBoard.CategoryNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: CategoryNames
        path: ''
        startLine: 962
      syntax:
        content:
          CSharp: public string[] CategoryNames
          VB: Public CategoryNames As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackBoard.CategoryIds
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.CategoryIds
      language: CSharp
      name:
        CSharp: CategoryIds
        VB: CategoryIds
      nameWithType:
        CSharp: FeedbackBoard.CategoryIds
        VB: FeedbackBoard.CategoryIds
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.CategoryIds
        VB: AeLa.EasyFeedback.FeedbackBoard.CategoryIds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: CategoryIds
        path: ''
        startLine: 963
      syntax:
        content:
          CSharp: public string[] CategoryIds
          VB: Public CategoryIds As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.FeedbackBoard.Labels
      commentId: F:AeLa.EasyFeedback.FeedbackBoard.Labels
      language: CSharp
      name:
        CSharp: Labels
        VB: Labels
      nameWithType:
        CSharp: FeedbackBoard.Labels
        VB: FeedbackBoard.Labels
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FeedbackBoard.Labels
        VB: AeLa.EasyFeedback.FeedbackBoard.Labels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback
      source:
        id: Labels
        path: ''
        startLine: 965
      syntax:
        content:
          CSharp: public Label[] Labels
          VB: Public Labels As Label()
        return:
          type: Label[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: AeLa.EasyFeedback.UI.Toaster
  commentId: N:AeLa.EasyFeedback.UI.Toaster
  language: CSharp
  name:
    CSharp: AeLa.EasyFeedback.UI.Toaster
    VB: AeLa.EasyFeedback.UI.Toaster
  nameWithType:
    CSharp: AeLa.EasyFeedback.UI.Toaster
    VB: AeLa.EasyFeedback.UI.Toaster
  qualifiedName:
    CSharp: AeLa.EasyFeedback.UI.Toaster
    VB: AeLa.EasyFeedback.UI.Toaster
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AeLa.EasyFeedback.UI.Toaster.Toaster
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster
    language: CSharp
    name:
      CSharp: Toaster
      VB: Toaster
    nameWithType:
      CSharp: Toaster
      VB: Toaster
    qualifiedName:
      CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster
      VB: AeLa.EasyFeedback.UI.Toaster.Toaster
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.UI.Toaster
    source:
      id: Toaster
      path: ''
      startLine: 1192
    summary: "\nDisplays <xref href=\"AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Toaster : MonoBehaviour'
        VB: >-
          Public Class Toaster

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastPrefab
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastPrefab
      language: CSharp
      name:
        CSharp: ToastPrefab
        VB: ToastPrefab
      nameWithType:
        CSharp: Toaster.ToastPrefab
        VB: Toaster.ToastPrefab
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastPrefab
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: ToastPrefab
        path: ''
        startLine: 1200
      summary: "\nThe toast prefab object\n"
      example: []
      syntax:
        content:
          CSharp: protected Toast ToastPrefab
          VB: Protected ToastPrefab As Toast
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toast
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ViewportAnchor
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ViewportAnchor
      language: CSharp
      name:
        CSharp: ViewportAnchor
        VB: ViewportAnchor
      nameWithType:
        CSharp: Toaster.ViewportAnchor
        VB: Toaster.ViewportAnchor
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ViewportAnchor
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ViewportAnchor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: ViewportAnchor
        path: ''
        startLine: 1208
      summary: "\nWhere the toast will appear on screen\n"
      example: []
      syntax:
        content:
          CSharp: protected Toaster.ToastAnchor ViewportAnchor
          VB: Protected ViewportAnchor As Toaster.ToastAnchor
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopupDirection
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.PopupDirection
      language: CSharp
      name:
        CSharp: PopupDirection
        VB: PopupDirection
      nameWithType:
        CSharp: Toaster.PopupDirection
        VB: Toaster.PopupDirection
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopupDirection
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopupDirection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: PopupDirection
        path: ''
        startLine: 1216
      summary: "\nDirection the toast will move when it appears\n"
      example: []
      syntax:
        content:
          CSharp: protected Toaster.PopoutDirection PopupDirection
          VB: Protected PopupDirection As Toaster.PopoutDirection
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.Duration
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.Duration
      language: CSharp
      name:
        CSharp: Duration
        VB: Duration
      nameWithType:
        CSharp: Toaster.Duration
        VB: Toaster.Duration
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.Duration
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.Duration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Duration
        path: ''
        startLine: 1224
      summary: "\nHow long (seconds) a message remains on screen\n"
      example: []
      syntax:
        content:
          CSharp: protected float Duration
          VB: Protected Duration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.AnimationDuration
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.AnimationDuration
      language: CSharp
      name:
        CSharp: AnimationDuration
        VB: AnimationDuration
      nameWithType:
        CSharp: Toaster.AnimationDuration
        VB: Toaster.AnimationDuration
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.AnimationDuration
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.AnimationDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: AnimationDuration
        path: ''
        startLine: 1232
      summary: "\nHow long (seconds) the slide in/out animation takes\n"
      example: []
      syntax:
        content:
          CSharp: protected float AnimationDuration
          VB: Protected AnimationDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)
      commentId: M:AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)
      language: CSharp
      name:
        CSharp: Toast(String)
        VB: Toast(String)
      nameWithType:
        CSharp: Toaster.Toast(String)
        VB: Toaster.Toast(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Toast
        path: ''
        startLine: 1243
      summary: "\nDisplays a toast with the provided message\n"
      example: []
      syntax:
        content:
          CSharp: public void Toast(string message)
          VB: Public Sub Toast(message As String)
        parameters:
        - id: message
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String): 
  - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
    language: CSharp
    name:
      CSharp: Toaster.PopoutDirection
      VB: Toaster.PopoutDirection
    nameWithType:
      CSharp: Toaster.PopoutDirection
      VB: Toaster.PopoutDirection
    qualifiedName:
      CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.UI.Toaster
    source:
      id: PopoutDirection
      path: ''
      startLine: 1376
    syntax:
      content:
        CSharp: public enum PopoutDirection
        VB: Public Enum PopoutDirection
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Up
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Up
      language: CSharp
      name:
        CSharp: Up
        VB: Up
      nameWithType:
        CSharp: Toaster.PopoutDirection.Up
        VB: Toaster.PopoutDirection.Up
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Up
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Up
        path: ''
        startLine: 1378
      syntax:
        content:
          CSharp: Up = 0
          VB: Up = 0
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Down
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Down
      language: CSharp
      name:
        CSharp: Down
        VB: Down
      nameWithType:
        CSharp: Toaster.PopoutDirection.Down
        VB: Toaster.PopoutDirection.Down
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Down
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Down
        path: ''
        startLine: 1379
      syntax:
        content:
          CSharp: Down = 1
          VB: Down = 1
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Right
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: Toaster.PopoutDirection.Right
        VB: Toaster.PopoutDirection.Right
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Right
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Right
        path: ''
        startLine: 1380
      syntax:
        content:
          CSharp: Right = 2
          VB: Right = 2
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Left
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Left
      language: CSharp
      name:
        CSharp: Left
        VB: Left
      nameWithType:
        CSharp: Toaster.PopoutDirection.Left
        VB: Toaster.PopoutDirection.Left
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Left
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection.Left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Left
        path: ''
        startLine: 1381
      syntax:
        content:
          CSharp: Left = 3
          VB: Left = 3
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
    language: CSharp
    name:
      CSharp: Toaster.ToastAnchor
      VB: Toaster.ToastAnchor
    nameWithType:
      CSharp: Toaster.ToastAnchor
      VB: Toaster.ToastAnchor
    qualifiedName:
      CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.UI.Toaster
    source:
      id: ToastAnchor
      path: ''
      startLine: 1384
    syntax:
      content:
        CSharp: public enum ToastAnchor
        VB: Public Enum ToastAnchor
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopLeft
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopLeft
      language: CSharp
      name:
        CSharp: TopLeft
        VB: TopLeft
      nameWithType:
        CSharp: Toaster.ToastAnchor.TopLeft
        VB: Toaster.ToastAnchor.TopLeft
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopLeft
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: TopLeft
        path: ''
        startLine: 1386
      syntax:
        content:
          CSharp: TopLeft = 0
          VB: TopLeft = 0
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopRight
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopRight
      language: CSharp
      name:
        CSharp: TopRight
        VB: TopRight
      nameWithType:
        CSharp: Toaster.ToastAnchor.TopRight
        VB: Toaster.ToastAnchor.TopRight
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopRight
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.TopRight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: TopRight
        path: ''
        startLine: 1387
      syntax:
        content:
          CSharp: TopRight = 1
          VB: TopRight = 1
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomRight
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomRight
      language: CSharp
      name:
        CSharp: BottomRight
        VB: BottomRight
      nameWithType:
        CSharp: Toaster.ToastAnchor.BottomRight
        VB: Toaster.ToastAnchor.BottomRight
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomRight
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomRight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: BottomRight
        path: ''
        startLine: 1388
      syntax:
        content:
          CSharp: BottomRight = 2
          VB: BottomRight = 2
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomLeft
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomLeft
      language: CSharp
      name:
        CSharp: BottomLeft
        VB: BottomLeft
      nameWithType:
        CSharp: Toaster.ToastAnchor.BottomLeft
        VB: Toaster.ToastAnchor.BottomLeft
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomLeft
        VB: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor.BottomLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: BottomLeft
        path: ''
        startLine: 1389
      syntax:
        content:
          CSharp: BottomLeft = 3
          VB: BottomLeft = 3
        return:
          type: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.UI.Toaster.Toast
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toast
    language: CSharp
    name:
      CSharp: Toast
      VB: Toast
    nameWithType:
      CSharp: Toast
      VB: Toast
    qualifiedName:
      CSharp: AeLa.EasyFeedback.UI.Toaster.Toast
      VB: AeLa.EasyFeedback.UI.Toaster.Toast
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.UI.Toaster
    source:
      id: Toast
      path: ''
      startLine: 1399
    syntax:
      content:
        CSharp: 'public class Toast : MonoBehaviour'
        VB: >-
          Public Class Toast

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.UI.Toaster.Toast.Text
      commentId: F:AeLa.EasyFeedback.UI.Toaster.Toast.Text
      language: CSharp
      name:
        CSharp: Text
        VB: Text
      nameWithType:
        CSharp: Toast.Text
        VB: Toast.Text
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toast.Text
        VB: AeLa.EasyFeedback.UI.Toaster.Toast.Text
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Text
        path: ''
        startLine: 1403
      syntax:
        content:
          CSharp: protected GameObject Text
          VB: Protected Text As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AeLa.EasyFeedback.UI.Toaster.Toast.Message
      commentId: P:AeLa.EasyFeedback.UI.Toaster.Toast.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: Toast.Message
        VB: Toast.Message
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toast.Message
        VB: AeLa.EasyFeedback.UI.Toaster.Toast.Message
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: Message
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public string Message { get; set; }
          VB: Public Property Message As String
        parameters: []
        return:
          type: System.String
      overload: AeLa.EasyFeedback.UI.Toaster.Toast.Message*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
      commentId: P:AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
      language: CSharp
      name:
        CSharp: RectTransform
        VB: RectTransform
      nameWithType:
        CSharp: Toast.RectTransform
        VB: Toast.RectTransform
      qualifiedName:
        CSharp: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
        VB: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.UI.Toaster
      source:
        id: RectTransform
        path: ''
        startLine: 1413
      syntax:
        content:
          CSharp: public RectTransform RectTransform { get; }
          VB: Public ReadOnly Property RectTransform As RectTransform
        parameters: []
        return:
          type: RectTransform
      overload: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: AeLa.EasyFeedback.APIs
  commentId: N:AeLa.EasyFeedback.APIs
  language: CSharp
  name:
    CSharp: AeLa.EasyFeedback.APIs
    VB: AeLa.EasyFeedback.APIs
  nameWithType:
    CSharp: AeLa.EasyFeedback.APIs
    VB: AeLa.EasyFeedback.APIs
  qualifiedName:
    CSharp: AeLa.EasyFeedback.APIs
    VB: AeLa.EasyFeedback.APIs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AeLa.EasyFeedback.APIs.Board
    commentId: T:AeLa.EasyFeedback.APIs.Board
    language: CSharp
    name:
      CSharp: Board
      VB: Board
    nameWithType:
      CSharp: Board
      VB: Board
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Board
      VB: AeLa.EasyFeedback.APIs.Board
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Board
      path: ''
      startLine: 1557
    summary: "\nBoard data returned from Trello API\n"
    example: []
    syntax:
      content:
        CSharp: public struct Board
        VB: Public Structure Board
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.Board.id
      commentId: F:AeLa.EasyFeedback.APIs.Board.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Board.id
        VB: Board.id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.id
        VB: AeLa.EasyFeedback.APIs.Board.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: id
        path: ''
        startLine: 1560
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.name
      commentId: F:AeLa.EasyFeedback.APIs.Board.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Board.name
        VB: Board.name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.name
        VB: AeLa.EasyFeedback.APIs.Board.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: name
        path: ''
        startLine: 1560
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.desc
      commentId: F:AeLa.EasyFeedback.APIs.Board.desc
      language: CSharp
      name:
        CSharp: desc
        VB: desc
      nameWithType:
        CSharp: Board.desc
        VB: Board.desc
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.desc
        VB: AeLa.EasyFeedback.APIs.Board.desc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: desc
        path: ''
        startLine: 1560
      syntax:
        content:
          CSharp: public string desc
          VB: Public desc As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.descData
      commentId: F:AeLa.EasyFeedback.APIs.Board.descData
      language: CSharp
      name:
        CSharp: descData
        VB: descData
      nameWithType:
        CSharp: Board.descData
        VB: Board.descData
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.descData
        VB: AeLa.EasyFeedback.APIs.Board.descData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: descData
        path: ''
        startLine: 1561
      syntax:
        content:
          CSharp: public object descData
          VB: Public descData As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.closed
      commentId: F:AeLa.EasyFeedback.APIs.Board.closed
      language: CSharp
      name:
        CSharp: closed
        VB: closed
      nameWithType:
        CSharp: Board.closed
        VB: Board.closed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.closed
        VB: AeLa.EasyFeedback.APIs.Board.closed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: closed
        path: ''
        startLine: 1562
      syntax:
        content:
          CSharp: public bool closed
          VB: Public closed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.idOrganization
      commentId: F:AeLa.EasyFeedback.APIs.Board.idOrganization
      language: CSharp
      name:
        CSharp: idOrganization
        VB: idOrganization
      nameWithType:
        CSharp: Board.idOrganization
        VB: Board.idOrganization
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.idOrganization
        VB: AeLa.EasyFeedback.APIs.Board.idOrganization
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idOrganization
        path: ''
        startLine: 1563
      syntax:
        content:
          CSharp: public string idOrganization
          VB: Public idOrganization As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.pinned
      commentId: F:AeLa.EasyFeedback.APIs.Board.pinned
      language: CSharp
      name:
        CSharp: pinned
        VB: pinned
      nameWithType:
        CSharp: Board.pinned
        VB: Board.pinned
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.pinned
        VB: AeLa.EasyFeedback.APIs.Board.pinned
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: pinned
        path: ''
        startLine: 1564
      syntax:
        content:
          CSharp: public bool pinned
          VB: Public pinned As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.url
      commentId: F:AeLa.EasyFeedback.APIs.Board.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: Board.url
        VB: Board.url
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.url
        VB: AeLa.EasyFeedback.APIs.Board.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: url
        path: ''
        startLine: 1565
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.shortUrl
      commentId: F:AeLa.EasyFeedback.APIs.Board.shortUrl
      language: CSharp
      name:
        CSharp: shortUrl
        VB: shortUrl
      nameWithType:
        CSharp: Board.shortUrl
        VB: Board.shortUrl
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.shortUrl
        VB: AeLa.EasyFeedback.APIs.Board.shortUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: shortUrl
        path: ''
        startLine: 1565
      syntax:
        content:
          CSharp: public string shortUrl
          VB: Public shortUrl As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.prefs
      commentId: F:AeLa.EasyFeedback.APIs.Board.prefs
      language: CSharp
      name:
        CSharp: prefs
        VB: prefs
      nameWithType:
        CSharp: Board.prefs
        VB: Board.prefs
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.prefs
        VB: AeLa.EasyFeedback.APIs.Board.prefs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: prefs
        path: ''
        startLine: 1566
      syntax:
        content:
          CSharp: public Prefs prefs
          VB: Public prefs As Prefs
        return:
          type: AeLa.EasyFeedback.APIs.Prefs
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Board.labelNames
      commentId: F:AeLa.EasyFeedback.APIs.Board.labelNames
      language: CSharp
      name:
        CSharp: labelNames
        VB: labelNames
      nameWithType:
        CSharp: Board.labelNames
        VB: Board.labelNames
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Board.labelNames
        VB: AeLa.EasyFeedback.APIs.Board.labelNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: labelNames
        path: ''
        startLine: 1567
      syntax:
        content:
          CSharp: public LabelNames labelNames
          VB: Public labelNames As LabelNames
        return:
          type: AeLa.EasyFeedback.APIs.LabelNames
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.BoardCollection
    commentId: T:AeLa.EasyFeedback.APIs.BoardCollection
    language: CSharp
    name:
      CSharp: BoardCollection
      VB: BoardCollection
    nameWithType:
      CSharp: BoardCollection
      VB: BoardCollection
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.BoardCollection
      VB: AeLa.EasyFeedback.APIs.BoardCollection
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: BoardCollection
      path: ''
      startLine: 1570
    syntax:
      content:
        CSharp: public struct BoardCollection
        VB: Public Structure BoardCollection
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.BoardCollection.boards
      commentId: F:AeLa.EasyFeedback.APIs.BoardCollection.boards
      language: CSharp
      name:
        CSharp: boards
        VB: boards
      nameWithType:
        CSharp: BoardCollection.boards
        VB: BoardCollection.boards
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.BoardCollection.boards
        VB: AeLa.EasyFeedback.APIs.BoardCollection.boards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: boards
        path: ''
        startLine: 1573
      syntax:
        content:
          CSharp: public Board[] boards
          VB: Public boards As Board()
        return:
          type: AeLa.EasyFeedback.APIs.Board[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Prefs
    commentId: T:AeLa.EasyFeedback.APIs.Prefs
    language: CSharp
    name:
      CSharp: Prefs
      VB: Prefs
    nameWithType:
      CSharp: Prefs
      VB: Prefs
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Prefs
      VB: AeLa.EasyFeedback.APIs.Prefs
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Prefs
      path: ''
      startLine: 1579
    summary: "\nBoard preferences\n"
    example: []
    syntax:
      content:
        CSharp: public struct Prefs
        VB: Public Structure Prefs
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.Prefs.background
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.background
      language: CSharp
      name:
        CSharp: background
        VB: background
      nameWithType:
        CSharp: Prefs.background
        VB: Prefs.background
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.background
        VB: AeLa.EasyFeedback.APIs.Prefs.background
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: background
        path: ''
        startLine: 1582
      syntax:
        content:
          CSharp: public string background
          VB: Public background As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.backgroundImage
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.backgroundImage
      language: CSharp
      name:
        CSharp: backgroundImage
        VB: backgroundImage
      nameWithType:
        CSharp: Prefs.backgroundImage
        VB: Prefs.backgroundImage
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.backgroundImage
        VB: AeLa.EasyFeedback.APIs.Prefs.backgroundImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: backgroundImage
        path: ''
        startLine: 1583
      syntax:
        content:
          CSharp: public object backgroundImage
          VB: Public backgroundImage As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.backgroundImageScaled
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.backgroundImageScaled
      language: CSharp
      name:
        CSharp: backgroundImageScaled
        VB: backgroundImageScaled
      nameWithType:
        CSharp: Prefs.backgroundImageScaled
        VB: Prefs.backgroundImageScaled
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.backgroundImageScaled
        VB: AeLa.EasyFeedback.APIs.Prefs.backgroundImageScaled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: backgroundImageScaled
        path: ''
        startLine: 1583
      syntax:
        content:
          CSharp: public object backgroundImageScaled
          VB: Public backgroundImageScaled As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.backgroundBrightness
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.backgroundBrightness
      language: CSharp
      name:
        CSharp: backgroundBrightness
        VB: backgroundBrightness
      nameWithType:
        CSharp: Prefs.backgroundBrightness
        VB: Prefs.backgroundBrightness
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.backgroundBrightness
        VB: AeLa.EasyFeedback.APIs.Prefs.backgroundBrightness
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: backgroundBrightness
        path: ''
        startLine: 1584
      syntax:
        content:
          CSharp: public string backgroundBrightness
          VB: Public backgroundBrightness As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.backgroundColor
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.backgroundColor
      language: CSharp
      name:
        CSharp: backgroundColor
        VB: backgroundColor
      nameWithType:
        CSharp: Prefs.backgroundColor
        VB: Prefs.backgroundColor
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.backgroundColor
        VB: AeLa.EasyFeedback.APIs.Prefs.backgroundColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: backgroundColor
        path: ''
        startLine: 1584
      syntax:
        content:
          CSharp: public string backgroundColor
          VB: Public backgroundColor As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.backgroundTile
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.backgroundTile
      language: CSharp
      name:
        CSharp: backgroundTile
        VB: backgroundTile
      nameWithType:
        CSharp: Prefs.backgroundTile
        VB: Prefs.backgroundTile
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.backgroundTile
        VB: AeLa.EasyFeedback.APIs.Prefs.backgroundTile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: backgroundTile
        path: ''
        startLine: 1585
      syntax:
        content:
          CSharp: public bool? backgroundTile
          VB: Public backgroundTile As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.calendarFeedEnabled
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.calendarFeedEnabled
      language: CSharp
      name:
        CSharp: calendarFeedEnabled
        VB: calendarFeedEnabled
      nameWithType:
        CSharp: Prefs.calendarFeedEnabled
        VB: Prefs.calendarFeedEnabled
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.calendarFeedEnabled
        VB: AeLa.EasyFeedback.APIs.Prefs.calendarFeedEnabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: calendarFeedEnabled
        path: ''
        startLine: 1586
      syntax:
        content:
          CSharp: public bool? calendarFeedEnabled
          VB: Public calendarFeedEnabled As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.canBePublic
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.canBePublic
      language: CSharp
      name:
        CSharp: canBePublic
        VB: canBePublic
      nameWithType:
        CSharp: Prefs.canBePublic
        VB: Prefs.canBePublic
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.canBePublic
        VB: AeLa.EasyFeedback.APIs.Prefs.canBePublic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: canBePublic
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public bool? canBePublic
          VB: Public canBePublic As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.canBeOrg
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.canBeOrg
      language: CSharp
      name:
        CSharp: canBeOrg
        VB: canBeOrg
      nameWithType:
        CSharp: Prefs.canBeOrg
        VB: Prefs.canBeOrg
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.canBeOrg
        VB: AeLa.EasyFeedback.APIs.Prefs.canBeOrg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: canBeOrg
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public bool? canBeOrg
          VB: Public canBeOrg As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.canBePrivate
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.canBePrivate
      language: CSharp
      name:
        CSharp: canBePrivate
        VB: canBePrivate
      nameWithType:
        CSharp: Prefs.canBePrivate
        VB: Prefs.canBePrivate
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.canBePrivate
        VB: AeLa.EasyFeedback.APIs.Prefs.canBePrivate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: canBePrivate
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public bool? canBePrivate
          VB: Public canBePrivate As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.canInvite
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.canInvite
      language: CSharp
      name:
        CSharp: canInvite
        VB: canInvite
      nameWithType:
        CSharp: Prefs.canInvite
        VB: Prefs.canInvite
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.canInvite
        VB: AeLa.EasyFeedback.APIs.Prefs.canInvite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: canInvite
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public bool? canInvite
          VB: Public canInvite As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.cardAging
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.cardAging
      language: CSharp
      name:
        CSharp: cardAging
        VB: cardAging
      nameWithType:
        CSharp: Prefs.cardAging
        VB: Prefs.cardAging
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.cardAging
        VB: AeLa.EasyFeedback.APIs.Prefs.cardAging
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: cardAging
        path: ''
        startLine: 1588
      syntax:
        content:
          CSharp: public CardAgeMode? cardAging
          VB: Public cardAging As CardAgeMode?
        return:
          type: System.Nullable{AeLa.EasyFeedback.APIs.CardAgeMode}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.invitations
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.invitations
      language: CSharp
      name:
        CSharp: invitations
        VB: invitations
      nameWithType:
        CSharp: Prefs.invitations
        VB: Prefs.invitations
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.invitations
        VB: AeLa.EasyFeedback.APIs.Prefs.invitations
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: invitations
        path: ''
        startLine: 1589
      syntax:
        content:
          CSharp: public Invitations? invitations
          VB: Public invitations As Invitations?
        return:
          type: System.Nullable{AeLa.EasyFeedback.APIs.Invitations}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.permissionLevel
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.permissionLevel
      language: CSharp
      name:
        CSharp: permissionLevel
        VB: permissionLevel
      nameWithType:
        CSharp: Prefs.permissionLevel
        VB: Prefs.permissionLevel
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.permissionLevel
        VB: AeLa.EasyFeedback.APIs.Prefs.permissionLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: permissionLevel
        path: ''
        startLine: 1590
      syntax:
        content:
          CSharp: public PermissionLevel? permissionLevel
          VB: Public permissionLevel As PermissionLevel?
        return:
          type: System.Nullable{AeLa.EasyFeedback.APIs.PermissionLevel}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.selfJoin
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.selfJoin
      language: CSharp
      name:
        CSharp: selfJoin
        VB: selfJoin
      nameWithType:
        CSharp: Prefs.selfJoin
        VB: Prefs.selfJoin
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.selfJoin
        VB: AeLa.EasyFeedback.APIs.Prefs.selfJoin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: selfJoin
        path: ''
        startLine: 1591
      syntax:
        content:
          CSharp: public bool? selfJoin
          VB: Public selfJoin As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.cardCovers
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.cardCovers
      language: CSharp
      name:
        CSharp: cardCovers
        VB: cardCovers
      nameWithType:
        CSharp: Prefs.cardCovers
        VB: Prefs.cardCovers
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.cardCovers
        VB: AeLa.EasyFeedback.APIs.Prefs.cardCovers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: cardCovers
        path: ''
        startLine: 1591
      syntax:
        content:
          CSharp: public bool? cardCovers
          VB: Public cardCovers As Boolean?
        return:
          type: System.Nullable{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.voting
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.voting
      language: CSharp
      name:
        CSharp: voting
        VB: voting
      nameWithType:
        CSharp: Prefs.voting
        VB: Prefs.voting
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.voting
        VB: AeLa.EasyFeedback.APIs.Prefs.voting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: voting
        path: ''
        startLine: 1592
      syntax:
        content:
          CSharp: public AccessibilityLevel? voting
          VB: Public voting As AccessibilityLevel?
        return:
          type: System.Nullable{AeLa.EasyFeedback.APIs.AccessibilityLevel}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Prefs.comments
      commentId: F:AeLa.EasyFeedback.APIs.Prefs.comments
      language: CSharp
      name:
        CSharp: comments
        VB: comments
      nameWithType:
        CSharp: Prefs.comments
        VB: Prefs.comments
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Prefs.comments
        VB: AeLa.EasyFeedback.APIs.Prefs.comments
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: comments
        path: ''
        startLine: 1592
      syntax:
        content:
          CSharp: public AccessibilityLevel? comments
          VB: Public comments As AccessibilityLevel?
        return:
          type: System.Nullable{AeLa.EasyFeedback.APIs.AccessibilityLevel}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.LabelNames
    commentId: T:AeLa.EasyFeedback.APIs.LabelNames
    language: CSharp
    name:
      CSharp: LabelNames
      VB: LabelNames
    nameWithType:
      CSharp: LabelNames
      VB: LabelNames
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.LabelNames
      VB: AeLa.EasyFeedback.APIs.LabelNames
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: LabelNames
      path: ''
      startLine: 1595
    syntax:
      content:
        CSharp: public struct LabelNames
        VB: Public Structure LabelNames
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.LabelNames.green
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.green
      language: CSharp
      name:
        CSharp: green
        VB: green
      nameWithType:
        CSharp: LabelNames.green
        VB: LabelNames.green
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.green
        VB: AeLa.EasyFeedback.APIs.LabelNames.green
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: green
        path: ''
        startLine: 1598
      syntax:
        content:
          CSharp: public string green
          VB: Public green As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.yellow
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.yellow
      language: CSharp
      name:
        CSharp: yellow
        VB: yellow
      nameWithType:
        CSharp: LabelNames.yellow
        VB: LabelNames.yellow
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.yellow
        VB: AeLa.EasyFeedback.APIs.LabelNames.yellow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: yellow
        path: ''
        startLine: 1599
      syntax:
        content:
          CSharp: public string yellow
          VB: Public yellow As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.orange
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.orange
      language: CSharp
      name:
        CSharp: orange
        VB: orange
      nameWithType:
        CSharp: LabelNames.orange
        VB: LabelNames.orange
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.orange
        VB: AeLa.EasyFeedback.APIs.LabelNames.orange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: orange
        path: ''
        startLine: 1600
      syntax:
        content:
          CSharp: public string orange
          VB: Public orange As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.red
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.red
      language: CSharp
      name:
        CSharp: red
        VB: red
      nameWithType:
        CSharp: LabelNames.red
        VB: LabelNames.red
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.red
        VB: AeLa.EasyFeedback.APIs.LabelNames.red
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: red
        path: ''
        startLine: 1601
      syntax:
        content:
          CSharp: public string red
          VB: Public red As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.purple
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.purple
      language: CSharp
      name:
        CSharp: purple
        VB: purple
      nameWithType:
        CSharp: LabelNames.purple
        VB: LabelNames.purple
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.purple
        VB: AeLa.EasyFeedback.APIs.LabelNames.purple
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: purple
        path: ''
        startLine: 1602
      syntax:
        content:
          CSharp: public string purple
          VB: Public purple As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.blue
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.blue
      language: CSharp
      name:
        CSharp: blue
        VB: blue
      nameWithType:
        CSharp: LabelNames.blue
        VB: LabelNames.blue
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.blue
        VB: AeLa.EasyFeedback.APIs.LabelNames.blue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: blue
        path: ''
        startLine: 1603
      syntax:
        content:
          CSharp: public string blue
          VB: Public blue As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.sky
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.sky
      language: CSharp
      name:
        CSharp: sky
        VB: sky
      nameWithType:
        CSharp: LabelNames.sky
        VB: LabelNames.sky
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.sky
        VB: AeLa.EasyFeedback.APIs.LabelNames.sky
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: sky
        path: ''
        startLine: 1604
      syntax:
        content:
          CSharp: public string sky
          VB: Public sky As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.LabelNames.lime
      commentId: F:AeLa.EasyFeedback.APIs.LabelNames.lime
      language: CSharp
      name:
        CSharp: lime
        VB: lime
      nameWithType:
        CSharp: LabelNames.lime
        VB: LabelNames.lime
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelNames.lime
        VB: AeLa.EasyFeedback.APIs.LabelNames.lime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: lime
        path: ''
        startLine: 1605
      syntax:
        content:
          CSharp: public string lime
          VB: Public lime As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Label
    commentId: T:AeLa.EasyFeedback.APIs.Label
    language: CSharp
    name:
      CSharp: Label
      VB: Label
    nameWithType:
      CSharp: Label
      VB: Label
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Label
      VB: AeLa.EasyFeedback.APIs.Label
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Label
      path: ''
      startLine: 1608
    syntax:
      content:
        CSharp: public struct Label
        VB: Public Structure Label
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.Label.id
      commentId: F:AeLa.EasyFeedback.APIs.Label.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: Label.id
        VB: Label.id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.id
        VB: AeLa.EasyFeedback.APIs.Label.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: id
        path: ''
        startLine: 1611
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.idBoard
      commentId: F:AeLa.EasyFeedback.APIs.Label.idBoard
      language: CSharp
      name:
        CSharp: idBoard
        VB: idBoard
      nameWithType:
        CSharp: Label.idBoard
        VB: Label.idBoard
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.idBoard
        VB: AeLa.EasyFeedback.APIs.Label.idBoard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idBoard
        path: ''
        startLine: 1611
      syntax:
        content:
          CSharp: public string idBoard
          VB: Public idBoard As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.name
      commentId: F:AeLa.EasyFeedback.APIs.Label.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Label.name
        VB: Label.name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.name
        VB: AeLa.EasyFeedback.APIs.Label.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: name
        path: ''
        startLine: 1611
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.color
      commentId: F:AeLa.EasyFeedback.APIs.Label.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: Label.color
        VB: Label.color
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.color
        VB: AeLa.EasyFeedback.APIs.Label.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: color
        path: ''
        startLine: 1611
      syntax:
        content:
          CSharp: public string color
          VB: Public color As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.uses
      commentId: F:AeLa.EasyFeedback.APIs.Label.uses
      language: CSharp
      name:
        CSharp: uses
        VB: uses
      nameWithType:
        CSharp: Label.uses
        VB: Label.uses
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.uses
        VB: AeLa.EasyFeedback.APIs.Label.uses
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: uses
        path: ''
        startLine: 1612
      syntax:
        content:
          CSharp: public int uses
          VB: Public uses As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.order
      commentId: F:AeLa.EasyFeedback.APIs.Label.order
      language: CSharp
      name:
        CSharp: order
        VB: order
      nameWithType:
        CSharp: Label.order
        VB: Label.order
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.order
        VB: AeLa.EasyFeedback.APIs.Label.order
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: order
        path: ''
        startLine: 1612
      syntax:
        content:
          CSharp: public int order
          VB: Public order As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Label.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
      commentId: M:AeLa.EasyFeedback.APIs.Label.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Label(String, String, String, String, Int32, Int32)
        VB: Label(String, String, String, String, Int32, Int32)
      nameWithType:
        CSharp: Label.Label(String, String, String, String, Int32, Int32)
        VB: Label.Label(String, String, String, String, Int32, Int32)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Label.Label(System.String, System.String, System.String, System.String, System.Int32, System.Int32)
        VB: AeLa.EasyFeedback.APIs.Label.Label(System.String, System.String, System.String, System.String, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: .ctor
        path: ''
        startLine: 1614
      syntax:
        content:
          CSharp: public Label(string id = null, string idBoard = null, string name = null, string color = null, int uses = 0, int order = 0)
          VB: Public Sub New(id As String = Nothing, idBoard As String = Nothing, name As String = Nothing, color As String = Nothing, uses As Integer = 0, order As Integer = 0)
        parameters:
        - id: id
          type: System.String
        - id: idBoard
          type: System.String
        - id: name
          type: System.String
        - id: color
          type: System.String
        - id: uses
          type: System.Int32
        - id: order
          type: System.Int32
      overload: AeLa.EasyFeedback.APIs.Label.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.LabelCollection
    commentId: T:AeLa.EasyFeedback.APIs.LabelCollection
    language: CSharp
    name:
      CSharp: LabelCollection
      VB: LabelCollection
    nameWithType:
      CSharp: LabelCollection
      VB: LabelCollection
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.LabelCollection
      VB: AeLa.EasyFeedback.APIs.LabelCollection
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: LabelCollection
      path: ''
      startLine: 1632
    syntax:
      content:
        CSharp: public struct LabelCollection
        VB: Public Structure LabelCollection
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.LabelCollection.labels
      commentId: F:AeLa.EasyFeedback.APIs.LabelCollection.labels
      language: CSharp
      name:
        CSharp: labels
        VB: labels
      nameWithType:
        CSharp: LabelCollection.labels
        VB: LabelCollection.labels
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.LabelCollection.labels
        VB: AeLa.EasyFeedback.APIs.LabelCollection.labels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: labels
        path: ''
        startLine: 1635
      syntax:
        content:
          CSharp: public Label[] labels
          VB: Public labels As Label()
        return:
          type: AeLa.EasyFeedback.APIs.Label[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.List
    commentId: T:AeLa.EasyFeedback.APIs.List
    language: CSharp
    name:
      CSharp: List
      VB: List
    nameWithType:
      CSharp: List
      VB: List
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.List
      VB: AeLa.EasyFeedback.APIs.List
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: List
      path: ''
      startLine: 1638
    syntax:
      content:
        CSharp: public struct List
        VB: Public Structure List
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.List.id
      commentId: F:AeLa.EasyFeedback.APIs.List.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: List.id
        VB: List.id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.id
        VB: AeLa.EasyFeedback.APIs.List.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: id
        path: ''
        startLine: 1641
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.List.name
      commentId: F:AeLa.EasyFeedback.APIs.List.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: List.name
        VB: List.name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.name
        VB: AeLa.EasyFeedback.APIs.List.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: name
        path: ''
        startLine: 1641
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.List.closed
      commentId: F:AeLa.EasyFeedback.APIs.List.closed
      language: CSharp
      name:
        CSharp: closed
        VB: closed
      nameWithType:
        CSharp: List.closed
        VB: List.closed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.closed
        VB: AeLa.EasyFeedback.APIs.List.closed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: closed
        path: ''
        startLine: 1642
      syntax:
        content:
          CSharp: public bool closed
          VB: Public closed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.List.idBoard
      commentId: F:AeLa.EasyFeedback.APIs.List.idBoard
      language: CSharp
      name:
        CSharp: idBoard
        VB: idBoard
      nameWithType:
        CSharp: List.idBoard
        VB: List.idBoard
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.idBoard
        VB: AeLa.EasyFeedback.APIs.List.idBoard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idBoard
        path: ''
        startLine: 1643
      syntax:
        content:
          CSharp: public string idBoard
          VB: Public idBoard As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.List.pos
      commentId: F:AeLa.EasyFeedback.APIs.List.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: List.pos
        VB: List.pos
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.pos
        VB: AeLa.EasyFeedback.APIs.List.pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: pos
        path: ''
        startLine: 1644
      syntax:
        content:
          CSharp: public float pos
          VB: Public pos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.List.subscribed
      commentId: F:AeLa.EasyFeedback.APIs.List.subscribed
      language: CSharp
      name:
        CSharp: subscribed
        VB: subscribed
      nameWithType:
        CSharp: List.subscribed
        VB: List.subscribed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.List.subscribed
        VB: AeLa.EasyFeedback.APIs.List.subscribed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: subscribed
        path: ''
        startLine: 1645
      syntax:
        content:
          CSharp: public bool subscribed
          VB: Public subscribed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Subscribed
    commentId: T:AeLa.EasyFeedback.APIs.Subscribed
    language: CSharp
    name:
      CSharp: Subscribed
      VB: Subscribed
    nameWithType:
      CSharp: Subscribed
      VB: Subscribed
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Subscribed
      VB: AeLa.EasyFeedback.APIs.Subscribed
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Subscribed
      path: ''
      startLine: 1652
    summary: "\nObject for GETting the subscribed value\nTrello has an underscore on value here, annoying\n"
    example: []
    syntax:
      content:
        CSharp: public struct Subscribed
        VB: Public Structure Subscribed
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.Subscribed._value
      commentId: F:AeLa.EasyFeedback.APIs.Subscribed._value
      language: CSharp
      name:
        CSharp: _value
        VB: _value
      nameWithType:
        CSharp: Subscribed._value
        VB: Subscribed._value
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Subscribed._value
        VB: AeLa.EasyFeedback.APIs.Subscribed._value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: _value
        path: ''
        startLine: 1655
      syntax:
        content:
          CSharp: public bool _value
          VB: Public _value As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.ListCollection
    commentId: T:AeLa.EasyFeedback.APIs.ListCollection
    language: CSharp
    name:
      CSharp: ListCollection
      VB: ListCollection
    nameWithType:
      CSharp: ListCollection
      VB: ListCollection
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.ListCollection
      VB: AeLa.EasyFeedback.APIs.ListCollection
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: ListCollection
      path: ''
      startLine: 1659
    syntax:
      content:
        CSharp: public struct ListCollection
        VB: Public Structure ListCollection
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: AeLa.EasyFeedback.APIs.ListCollection.lists
      commentId: F:AeLa.EasyFeedback.APIs.ListCollection.lists
      language: CSharp
      name:
        CSharp: lists
        VB: lists
      nameWithType:
        CSharp: ListCollection.lists
        VB: ListCollection.lists
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.ListCollection.lists
        VB: AeLa.EasyFeedback.APIs.ListCollection.lists
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: lists
        path: ''
        startLine: 1662
      syntax:
        content:
          CSharp: public List[] lists
          VB: Public lists As List()
        return:
          type: AeLa.EasyFeedback.APIs.List[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.PermissionLevel
    commentId: T:AeLa.EasyFeedback.APIs.PermissionLevel
    language: CSharp
    name:
      CSharp: PermissionLevel
      VB: PermissionLevel
    nameWithType:
      CSharp: PermissionLevel
      VB: PermissionLevel
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.PermissionLevel
      VB: AeLa.EasyFeedback.APIs.PermissionLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: PermissionLevel
      path: ''
      startLine: 1665
    syntax:
      content:
        CSharp: public enum PermissionLevel
        VB: Public Enum PermissionLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.APIs.PermissionLevel.org
      commentId: F:AeLa.EasyFeedback.APIs.PermissionLevel.org
      language: CSharp
      name:
        CSharp: org
        VB: org
      nameWithType:
        CSharp: PermissionLevel.org
        VB: PermissionLevel.org
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.PermissionLevel.org
        VB: AeLa.EasyFeedback.APIs.PermissionLevel.org
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: org
        path: ''
        startLine: 1667
      syntax:
        content:
          CSharp: org = 0
          VB: org = 0
        return:
          type: AeLa.EasyFeedback.APIs.PermissionLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.PermissionLevel.private
      commentId: F:AeLa.EasyFeedback.APIs.PermissionLevel.private
      language: CSharp
      name:
        CSharp: private
        VB: private
      nameWithType:
        CSharp: PermissionLevel.private
        VB: PermissionLevel.private
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.PermissionLevel.private
        VB: AeLa.EasyFeedback.APIs.PermissionLevel.private
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: private
        path: ''
        startLine: 1668
      syntax:
        content:
          CSharp: private = 1
          VB: private = 1
        return:
          type: AeLa.EasyFeedback.APIs.PermissionLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.PermissionLevel.public
      commentId: F:AeLa.EasyFeedback.APIs.PermissionLevel.public
      language: CSharp
      name:
        CSharp: public
        VB: public
      nameWithType:
        CSharp: PermissionLevel.public
        VB: PermissionLevel.public
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.PermissionLevel.public
        VB: AeLa.EasyFeedback.APIs.PermissionLevel.public
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: public
        path: ''
        startLine: 1669
      syntax:
        content:
          CSharp: public = 2
          VB: public = 2
        return:
          type: AeLa.EasyFeedback.APIs.PermissionLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.APIs.Invitations
    commentId: T:AeLa.EasyFeedback.APIs.Invitations
    language: CSharp
    name:
      CSharp: Invitations
      VB: Invitations
    nameWithType:
      CSharp: Invitations
      VB: Invitations
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Invitations
      VB: AeLa.EasyFeedback.APIs.Invitations
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Invitations
      path: ''
      startLine: 1672
    syntax:
      content:
        CSharp: public enum Invitations
        VB: Public Enum Invitations
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.APIs.Invitations.admins
      commentId: F:AeLa.EasyFeedback.APIs.Invitations.admins
      language: CSharp
      name:
        CSharp: admins
        VB: admins
      nameWithType:
        CSharp: Invitations.admins
        VB: Invitations.admins
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Invitations.admins
        VB: AeLa.EasyFeedback.APIs.Invitations.admins
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: admins
        path: ''
        startLine: 1674
      syntax:
        content:
          CSharp: admins = 0
          VB: admins = 0
        return:
          type: AeLa.EasyFeedback.APIs.Invitations
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.Invitations.members
      commentId: F:AeLa.EasyFeedback.APIs.Invitations.members
      language: CSharp
      name:
        CSharp: members
        VB: members
      nameWithType:
        CSharp: Invitations.members
        VB: Invitations.members
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Invitations.members
        VB: AeLa.EasyFeedback.APIs.Invitations.members
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: members
        path: ''
        startLine: 1675
      syntax:
        content:
          CSharp: members = 1
          VB: members = 1
        return:
          type: AeLa.EasyFeedback.APIs.Invitations
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.APIs.AccessibilityLevel
    commentId: T:AeLa.EasyFeedback.APIs.AccessibilityLevel
    language: CSharp
    name:
      CSharp: AccessibilityLevel
      VB: AccessibilityLevel
    nameWithType:
      CSharp: AccessibilityLevel
      VB: AccessibilityLevel
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel
      VB: AeLa.EasyFeedback.APIs.AccessibilityLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: AccessibilityLevel
      path: ''
      startLine: 1678
    syntax:
      content:
        CSharp: public enum AccessibilityLevel
        VB: Public Enum AccessibilityLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.APIs.AccessibilityLevel.disabled
      commentId: F:AeLa.EasyFeedback.APIs.AccessibilityLevel.disabled
      language: CSharp
      name:
        CSharp: disabled
        VB: disabled
      nameWithType:
        CSharp: AccessibilityLevel.disabled
        VB: AccessibilityLevel.disabled
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel.disabled
        VB: AeLa.EasyFeedback.APIs.AccessibilityLevel.disabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: disabled
        path: ''
        startLine: 1680
      syntax:
        content:
          CSharp: disabled = 0
          VB: disabled = 0
        return:
          type: AeLa.EasyFeedback.APIs.AccessibilityLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.AccessibilityLevel.members
      commentId: F:AeLa.EasyFeedback.APIs.AccessibilityLevel.members
      language: CSharp
      name:
        CSharp: members
        VB: members
      nameWithType:
        CSharp: AccessibilityLevel.members
        VB: AccessibilityLevel.members
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel.members
        VB: AeLa.EasyFeedback.APIs.AccessibilityLevel.members
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: members
        path: ''
        startLine: 1681
      syntax:
        content:
          CSharp: members = 1
          VB: members = 1
        return:
          type: AeLa.EasyFeedback.APIs.AccessibilityLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.AccessibilityLevel.observers
      commentId: F:AeLa.EasyFeedback.APIs.AccessibilityLevel.observers
      language: CSharp
      name:
        CSharp: observers
        VB: observers
      nameWithType:
        CSharp: AccessibilityLevel.observers
        VB: AccessibilityLevel.observers
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel.observers
        VB: AeLa.EasyFeedback.APIs.AccessibilityLevel.observers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: observers
        path: ''
        startLine: 1682
      syntax:
        content:
          CSharp: observers = 2
          VB: observers = 2
        return:
          type: AeLa.EasyFeedback.APIs.AccessibilityLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.AccessibilityLevel.org
      commentId: F:AeLa.EasyFeedback.APIs.AccessibilityLevel.org
      language: CSharp
      name:
        CSharp: org
        VB: org
      nameWithType:
        CSharp: AccessibilityLevel.org
        VB: AccessibilityLevel.org
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel.org
        VB: AeLa.EasyFeedback.APIs.AccessibilityLevel.org
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: org
        path: ''
        startLine: 1683
      syntax:
        content:
          CSharp: org = 3
          VB: org = 3
        return:
          type: AeLa.EasyFeedback.APIs.AccessibilityLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.AccessibilityLevel.public
      commentId: F:AeLa.EasyFeedback.APIs.AccessibilityLevel.public
      language: CSharp
      name:
        CSharp: public
        VB: public
      nameWithType:
        CSharp: AccessibilityLevel.public
        VB: AccessibilityLevel.public
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AccessibilityLevel.public
        VB: AeLa.EasyFeedback.APIs.AccessibilityLevel.public
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: public
        path: ''
        startLine: 1684
      syntax:
        content:
          CSharp: public = 4
          VB: public = 4
        return:
          type: AeLa.EasyFeedback.APIs.AccessibilityLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.APIs.CardAgeMode
    commentId: T:AeLa.EasyFeedback.APIs.CardAgeMode
    language: CSharp
    name:
      CSharp: CardAgeMode
      VB: CardAgeMode
    nameWithType:
      CSharp: CardAgeMode
      VB: CardAgeMode
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.CardAgeMode
      VB: AeLa.EasyFeedback.APIs.CardAgeMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: CardAgeMode
      path: ''
      startLine: 1687
    syntax:
      content:
        CSharp: public enum CardAgeMode
        VB: Public Enum CardAgeMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.APIs.CardAgeMode.regular
      commentId: F:AeLa.EasyFeedback.APIs.CardAgeMode.regular
      language: CSharp
      name:
        CSharp: regular
        VB: regular
      nameWithType:
        CSharp: CardAgeMode.regular
        VB: CardAgeMode.regular
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardAgeMode.regular
        VB: AeLa.EasyFeedback.APIs.CardAgeMode.regular
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: regular
        path: ''
        startLine: 1689
      syntax:
        content:
          CSharp: regular = 0
          VB: regular = 0
        return:
          type: AeLa.EasyFeedback.APIs.CardAgeMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.CardAgeMode.pirate
      commentId: F:AeLa.EasyFeedback.APIs.CardAgeMode.pirate
      language: CSharp
      name:
        CSharp: pirate
        VB: pirate
      nameWithType:
        CSharp: CardAgeMode.pirate
        VB: CardAgeMode.pirate
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardAgeMode.pirate
        VB: AeLa.EasyFeedback.APIs.CardAgeMode.pirate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: pirate
        path: ''
        startLine: 1690
      syntax:
        content:
          CSharp: pirate = 1
          VB: pirate = 1
        return:
          type: AeLa.EasyFeedback.APIs.CardAgeMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AeLa.EasyFeedback.APIs.AddCardResponse
    commentId: T:AeLa.EasyFeedback.APIs.AddCardResponse
    language: CSharp
    name:
      CSharp: AddCardResponse
      VB: AddCardResponse
    nameWithType:
      CSharp: AddCardResponse
      VB: AddCardResponse
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.AddCardResponse
      VB: AeLa.EasyFeedback.APIs.AddCardResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: AddCardResponse
      path: ''
      startLine: 1693
    syntax:
      content:
        CSharp: public class AddCardResponse
        VB: Public Class AddCardResponse
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.id
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: AddCardResponse.id
        VB: AddCardResponse.id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.id
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: id
        path: ''
        startLine: 1696
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.badges
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.badges
      language: CSharp
      name:
        CSharp: badges
        VB: badges
      nameWithType:
        CSharp: AddCardResponse.badges
        VB: AddCardResponse.badges
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.badges
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.badges
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: badges
        path: ''
        startLine: 1697
      syntax:
        content:
          CSharp: public Badges badges
          VB: Public badges As Badges
        return:
          type: AeLa.EasyFeedback.APIs.Badges
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.checkItemStates
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.checkItemStates
      language: CSharp
      name:
        CSharp: checkItemStates
        VB: checkItemStates
      nameWithType:
        CSharp: AddCardResponse.checkItemStates
        VB: AddCardResponse.checkItemStates
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.checkItemStates
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.checkItemStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: checkItemStates
        path: ''
        startLine: 1698
      syntax:
        content:
          CSharp: public bool[] checkItemStates
          VB: Public checkItemStates As Boolean()
        return:
          type: System.Boolean[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.closed
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.closed
      language: CSharp
      name:
        CSharp: closed
        VB: closed
      nameWithType:
        CSharp: AddCardResponse.closed
        VB: AddCardResponse.closed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.closed
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.closed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: closed
        path: ''
        startLine: 1699
      syntax:
        content:
          CSharp: public bool closed
          VB: Public closed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.dateLastActivity
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.dateLastActivity
      language: CSharp
      name:
        CSharp: dateLastActivity
        VB: dateLastActivity
      nameWithType:
        CSharp: AddCardResponse.dateLastActivity
        VB: AddCardResponse.dateLastActivity
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.dateLastActivity
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.dateLastActivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: dateLastActivity
        path: ''
        startLine: 1700
      syntax:
        content:
          CSharp: public DateTime dateLastActivity
          VB: Public dateLastActivity As DateTime
        return:
          type: DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.desc
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.desc
      language: CSharp
      name:
        CSharp: desc
        VB: desc
      nameWithType:
        CSharp: AddCardResponse.desc
        VB: AddCardResponse.desc
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.desc
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.desc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: desc
        path: ''
        startLine: 1701
      syntax:
        content:
          CSharp: public string desc
          VB: Public desc As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.descData
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.descData
      language: CSharp
      name:
        CSharp: descData
        VB: descData
      nameWithType:
        CSharp: AddCardResponse.descData
        VB: AddCardResponse.descData
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.descData
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.descData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: descData
        path: ''
        startLine: 1702
      syntax:
        content:
          CSharp: public Descdata descData
          VB: Public descData As Descdata
        return:
          type: AeLa.EasyFeedback.APIs.Descdata
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.due
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.due
      language: CSharp
      name:
        CSharp: due
        VB: due
      nameWithType:
        CSharp: AddCardResponse.due
        VB: AddCardResponse.due
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.due
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.due
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: due
        path: ''
        startLine: 1703
      syntax:
        content:
          CSharp: public string due
          VB: Public due As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.dueComplete
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.dueComplete
      language: CSharp
      name:
        CSharp: dueComplete
        VB: dueComplete
      nameWithType:
        CSharp: AddCardResponse.dueComplete
        VB: AddCardResponse.dueComplete
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.dueComplete
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.dueComplete
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: dueComplete
        path: ''
        startLine: 1704
      syntax:
        content:
          CSharp: public bool dueComplete
          VB: Public dueComplete As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.email
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.email
      language: CSharp
      name:
        CSharp: email
        VB: email
      nameWithType:
        CSharp: AddCardResponse.email
        VB: AddCardResponse.email
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.email
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.email
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: email
        path: ''
        startLine: 1705
      syntax:
        content:
          CSharp: public string email
          VB: Public email As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idBoard
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idBoard
      language: CSharp
      name:
        CSharp: idBoard
        VB: idBoard
      nameWithType:
        CSharp: AddCardResponse.idBoard
        VB: AddCardResponse.idBoard
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idBoard
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idBoard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idBoard
        path: ''
        startLine: 1706
      syntax:
        content:
          CSharp: public string idBoard
          VB: Public idBoard As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idChecklists
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idChecklists
      language: CSharp
      name:
        CSharp: idChecklists
        VB: idChecklists
      nameWithType:
        CSharp: AddCardResponse.idChecklists
        VB: AddCardResponse.idChecklists
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idChecklists
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idChecklists
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idChecklists
        path: ''
        startLine: 1707
      syntax:
        content:
          CSharp: public string[] idChecklists
          VB: Public idChecklists As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idLabels
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idLabels
      language: CSharp
      name:
        CSharp: idLabels
        VB: idLabels
      nameWithType:
        CSharp: AddCardResponse.idLabels
        VB: AddCardResponse.idLabels
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idLabels
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idLabels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idLabels
        path: ''
        startLine: 1708
      syntax:
        content:
          CSharp: public string[] idLabels
          VB: Public idLabels As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idList
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idList
      language: CSharp
      name:
        CSharp: idList
        VB: idList
      nameWithType:
        CSharp: AddCardResponse.idList
        VB: AddCardResponse.idList
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idList
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idList
        path: ''
        startLine: 1709
      syntax:
        content:
          CSharp: public string idList
          VB: Public idList As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idMembers
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idMembers
      language: CSharp
      name:
        CSharp: idMembers
        VB: idMembers
      nameWithType:
        CSharp: AddCardResponse.idMembers
        VB: AddCardResponse.idMembers
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idMembers
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idMembers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idMembers
        path: ''
        startLine: 1710
      syntax:
        content:
          CSharp: public string[] idMembers
          VB: Public idMembers As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idShort
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idShort
      language: CSharp
      name:
        CSharp: idShort
        VB: idShort
      nameWithType:
        CSharp: AddCardResponse.idShort
        VB: AddCardResponse.idShort
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idShort
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idShort
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idShort
        path: ''
        startLine: 1711
      syntax:
        content:
          CSharp: public int idShort
          VB: Public idShort As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.idAttachmentCover
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.idAttachmentCover
      language: CSharp
      name:
        CSharp: idAttachmentCover
        VB: idAttachmentCover
      nameWithType:
        CSharp: AddCardResponse.idAttachmentCover
        VB: AddCardResponse.idAttachmentCover
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.idAttachmentCover
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.idAttachmentCover
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idAttachmentCover
        path: ''
        startLine: 1712
      syntax:
        content:
          CSharp: public string idAttachmentCover
          VB: Public idAttachmentCover As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.manualCoverAttachment
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.manualCoverAttachment
      language: CSharp
      name:
        CSharp: manualCoverAttachment
        VB: manualCoverAttachment
      nameWithType:
        CSharp: AddCardResponse.manualCoverAttachment
        VB: AddCardResponse.manualCoverAttachment
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.manualCoverAttachment
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.manualCoverAttachment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: manualCoverAttachment
        path: ''
        startLine: 1713
      syntax:
        content:
          CSharp: public bool manualCoverAttachment
          VB: Public manualCoverAttachment As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.labels
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.labels
      language: CSharp
      name:
        CSharp: labels
        VB: labels
      nameWithType:
        CSharp: AddCardResponse.labels
        VB: AddCardResponse.labels
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.labels
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.labels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: labels
        path: ''
        startLine: 1714
      syntax:
        content:
          CSharp: public CardLabel[] labels
          VB: Public labels As CardLabel()
        return:
          type: AeLa.EasyFeedback.APIs.CardLabel[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.name
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: AddCardResponse.name
        VB: AddCardResponse.name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.name
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: name
        path: ''
        startLine: 1715
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.pos
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: AddCardResponse.pos
        VB: AddCardResponse.pos
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.pos
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: pos
        path: ''
        startLine: 1716
      syntax:
        content:
          CSharp: public int pos
          VB: Public pos As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.shortUrl
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.shortUrl
      language: CSharp
      name:
        CSharp: shortUrl
        VB: shortUrl
      nameWithType:
        CSharp: AddCardResponse.shortUrl
        VB: AddCardResponse.shortUrl
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.shortUrl
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.shortUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: shortUrl
        path: ''
        startLine: 1717
      syntax:
        content:
          CSharp: public string shortUrl
          VB: Public shortUrl As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.url
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: AddCardResponse.url
        VB: AddCardResponse.url
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.url
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: url
        path: ''
        startLine: 1718
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.AddCardResponse.stickers
      commentId: F:AeLa.EasyFeedback.APIs.AddCardResponse.stickers
      language: CSharp
      name:
        CSharp: stickers
        VB: stickers
      nameWithType:
        CSharp: AddCardResponse.stickers
        VB: AddCardResponse.stickers
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.AddCardResponse.stickers
        VB: AeLa.EasyFeedback.APIs.AddCardResponse.stickers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: stickers
        path: ''
        startLine: 1719
      syntax:
        content:
          CSharp: public string[] stickers
          VB: Public stickers As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Badges
    commentId: T:AeLa.EasyFeedback.APIs.Badges
    language: CSharp
    name:
      CSharp: Badges
      VB: Badges
    nameWithType:
      CSharp: Badges
      VB: Badges
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Badges
      VB: AeLa.EasyFeedback.APIs.Badges
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Badges
      path: ''
      startLine: 1722
    syntax:
      content:
        CSharp: public class Badges
        VB: Public Class Badges
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.APIs.Badges.votes
      commentId: F:AeLa.EasyFeedback.APIs.Badges.votes
      language: CSharp
      name:
        CSharp: votes
        VB: votes
      nameWithType:
        CSharp: Badges.votes
        VB: Badges.votes
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.votes
        VB: AeLa.EasyFeedback.APIs.Badges.votes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: votes
        path: ''
        startLine: 1725
      syntax:
        content:
          CSharp: public int votes
          VB: Public votes As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.viewingMemberVoted
      commentId: F:AeLa.EasyFeedback.APIs.Badges.viewingMemberVoted
      language: CSharp
      name:
        CSharp: viewingMemberVoted
        VB: viewingMemberVoted
      nameWithType:
        CSharp: Badges.viewingMemberVoted
        VB: Badges.viewingMemberVoted
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.viewingMemberVoted
        VB: AeLa.EasyFeedback.APIs.Badges.viewingMemberVoted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: viewingMemberVoted
        path: ''
        startLine: 1726
      syntax:
        content:
          CSharp: public bool viewingMemberVoted
          VB: Public viewingMemberVoted As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.subscribed
      commentId: F:AeLa.EasyFeedback.APIs.Badges.subscribed
      language: CSharp
      name:
        CSharp: subscribed
        VB: subscribed
      nameWithType:
        CSharp: Badges.subscribed
        VB: Badges.subscribed
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.subscribed
        VB: AeLa.EasyFeedback.APIs.Badges.subscribed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: subscribed
        path: ''
        startLine: 1727
      syntax:
        content:
          CSharp: public bool subscribed
          VB: Public subscribed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.fogbugz
      commentId: F:AeLa.EasyFeedback.APIs.Badges.fogbugz
      language: CSharp
      name:
        CSharp: fogbugz
        VB: fogbugz
      nameWithType:
        CSharp: Badges.fogbugz
        VB: Badges.fogbugz
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.fogbugz
        VB: AeLa.EasyFeedback.APIs.Badges.fogbugz
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: fogbugz
        path: ''
        startLine: 1728
      syntax:
        content:
          CSharp: public string fogbugz
          VB: Public fogbugz As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.checkItems
      commentId: F:AeLa.EasyFeedback.APIs.Badges.checkItems
      language: CSharp
      name:
        CSharp: checkItems
        VB: checkItems
      nameWithType:
        CSharp: Badges.checkItems
        VB: Badges.checkItems
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.checkItems
        VB: AeLa.EasyFeedback.APIs.Badges.checkItems
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: checkItems
        path: ''
        startLine: 1729
      syntax:
        content:
          CSharp: public int checkItems
          VB: Public checkItems As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.checkItemsChecked
      commentId: F:AeLa.EasyFeedback.APIs.Badges.checkItemsChecked
      language: CSharp
      name:
        CSharp: checkItemsChecked
        VB: checkItemsChecked
      nameWithType:
        CSharp: Badges.checkItemsChecked
        VB: Badges.checkItemsChecked
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.checkItemsChecked
        VB: AeLa.EasyFeedback.APIs.Badges.checkItemsChecked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: checkItemsChecked
        path: ''
        startLine: 1730
      syntax:
        content:
          CSharp: public int checkItemsChecked
          VB: Public checkItemsChecked As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.comments
      commentId: F:AeLa.EasyFeedback.APIs.Badges.comments
      language: CSharp
      name:
        CSharp: comments
        VB: comments
      nameWithType:
        CSharp: Badges.comments
        VB: Badges.comments
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.comments
        VB: AeLa.EasyFeedback.APIs.Badges.comments
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: comments
        path: ''
        startLine: 1731
      syntax:
        content:
          CSharp: public int comments
          VB: Public comments As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.attachments
      commentId: F:AeLa.EasyFeedback.APIs.Badges.attachments
      language: CSharp
      name:
        CSharp: attachments
        VB: attachments
      nameWithType:
        CSharp: Badges.attachments
        VB: Badges.attachments
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.attachments
        VB: AeLa.EasyFeedback.APIs.Badges.attachments
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: attachments
        path: ''
        startLine: 1732
      syntax:
        content:
          CSharp: public int attachments
          VB: Public attachments As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.description
      commentId: F:AeLa.EasyFeedback.APIs.Badges.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: Badges.description
        VB: Badges.description
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.description
        VB: AeLa.EasyFeedback.APIs.Badges.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: description
        path: ''
        startLine: 1733
      syntax:
        content:
          CSharp: public bool description
          VB: Public description As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.due
      commentId: F:AeLa.EasyFeedback.APIs.Badges.due
      language: CSharp
      name:
        CSharp: due
        VB: due
      nameWithType:
        CSharp: Badges.due
        VB: Badges.due
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.due
        VB: AeLa.EasyFeedback.APIs.Badges.due
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: due
        path: ''
        startLine: 1734
      syntax:
        content:
          CSharp: public string due
          VB: Public due As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Badges.dueComplete
      commentId: F:AeLa.EasyFeedback.APIs.Badges.dueComplete
      language: CSharp
      name:
        CSharp: dueComplete
        VB: dueComplete
      nameWithType:
        CSharp: Badges.dueComplete
        VB: Badges.dueComplete
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Badges.dueComplete
        VB: AeLa.EasyFeedback.APIs.Badges.dueComplete
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: dueComplete
        path: ''
        startLine: 1735
      syntax:
        content:
          CSharp: public bool dueComplete
          VB: Public dueComplete As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Descdata
    commentId: T:AeLa.EasyFeedback.APIs.Descdata
    language: CSharp
    name:
      CSharp: Descdata
      VB: Descdata
    nameWithType:
      CSharp: Descdata
      VB: Descdata
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Descdata
      VB: AeLa.EasyFeedback.APIs.Descdata
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Descdata
      path: ''
      startLine: 1738
    syntax:
      content:
        CSharp: public class Descdata
        VB: Public Class Descdata
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.APIs.Descdata.emoji
      commentId: F:AeLa.EasyFeedback.APIs.Descdata.emoji
      language: CSharp
      name:
        CSharp: emoji
        VB: emoji
      nameWithType:
        CSharp: Descdata.emoji
        VB: Descdata.emoji
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Descdata.emoji
        VB: AeLa.EasyFeedback.APIs.Descdata.emoji
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: emoji
        path: ''
        startLine: 1741
      syntax:
        content:
          CSharp: public Emoji emoji
          VB: Public emoji As Emoji
        return:
          type: AeLa.EasyFeedback.APIs.Emoji
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Emoji
    commentId: T:AeLa.EasyFeedback.APIs.Emoji
    language: CSharp
    name:
      CSharp: Emoji
      VB: Emoji
    nameWithType:
      CSharp: Emoji
      VB: Emoji
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Emoji
      VB: AeLa.EasyFeedback.APIs.Emoji
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Emoji
      path: ''
      startLine: 1744
    syntax:
      content:
        CSharp: public class Emoji
        VB: Public Class Emoji
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AeLa.EasyFeedback.APIs.CardLabel
    commentId: T:AeLa.EasyFeedback.APIs.CardLabel
    language: CSharp
    name:
      CSharp: CardLabel
      VB: CardLabel
    nameWithType:
      CSharp: CardLabel
      VB: CardLabel
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.CardLabel
      VB: AeLa.EasyFeedback.APIs.CardLabel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: CardLabel
      path: ''
      startLine: 1749
    syntax:
      content:
        CSharp: public class CardLabel
        VB: Public Class CardLabel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.APIs.CardLabel.id
      commentId: F:AeLa.EasyFeedback.APIs.CardLabel.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: CardLabel.id
        VB: CardLabel.id
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardLabel.id
        VB: AeLa.EasyFeedback.APIs.CardLabel.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: id
        path: ''
        startLine: 1752
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.CardLabel.idBoard
      commentId: F:AeLa.EasyFeedback.APIs.CardLabel.idBoard
      language: CSharp
      name:
        CSharp: idBoard
        VB: idBoard
      nameWithType:
        CSharp: CardLabel.idBoard
        VB: CardLabel.idBoard
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardLabel.idBoard
        VB: AeLa.EasyFeedback.APIs.CardLabel.idBoard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: idBoard
        path: ''
        startLine: 1753
      syntax:
        content:
          CSharp: public string idBoard
          VB: Public idBoard As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.CardLabel.name
      commentId: F:AeLa.EasyFeedback.APIs.CardLabel.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: CardLabel.name
        VB: CardLabel.name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardLabel.name
        VB: AeLa.EasyFeedback.APIs.CardLabel.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: name
        path: ''
        startLine: 1754
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.CardLabel.color
      commentId: F:AeLa.EasyFeedback.APIs.CardLabel.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: CardLabel.color
        VB: CardLabel.color
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardLabel.color
        VB: AeLa.EasyFeedback.APIs.CardLabel.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: color
        path: ''
        startLine: 1755
      syntax:
        content:
          CSharp: public string color
          VB: Public color As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.CardLabel.uses
      commentId: F:AeLa.EasyFeedback.APIs.CardLabel.uses
      language: CSharp
      name:
        CSharp: uses
        VB: uses
      nameWithType:
        CSharp: CardLabel.uses
        VB: CardLabel.uses
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.CardLabel.uses
        VB: AeLa.EasyFeedback.APIs.CardLabel.uses
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: uses
        path: ''
        startLine: 1756
      syntax:
        content:
          CSharp: public int uses
          VB: Public uses As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.APIs.Trello
    commentId: T:AeLa.EasyFeedback.APIs.Trello
    language: CSharp
    name:
      CSharp: Trello
      VB: Trello
    nameWithType:
      CSharp: Trello
      VB: Trello
    qualifiedName:
      CSharp: AeLa.EasyFeedback.APIs.Trello
      VB: AeLa.EasyFeedback.APIs.Trello
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.APIs
    source:
      id: Trello
      path: ''
      startLine: 1771
    syntax:
      content:
        CSharp: public class Trello
        VB: Public Class Trello
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.APIs.Trello.MAX_CHAR_LENGTH
      commentId: F:AeLa.EasyFeedback.APIs.Trello.MAX_CHAR_LENGTH
      language: CSharp
      name:
        CSharp: MAX_CHAR_LENGTH
        VB: MAX_CHAR_LENGTH
      nameWithType:
        CSharp: Trello.MAX_CHAR_LENGTH
        VB: Trello.MAX_CHAR_LENGTH
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.MAX_CHAR_LENGTH
        VB: AeLa.EasyFeedback.APIs.Trello.MAX_CHAR_LENGTH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: MAX_CHAR_LENGTH
        path: ''
        startLine: 1773
      syntax:
        content:
          CSharp: public const int MAX_CHAR_LENGTH = 16384
          VB: Public Const MAX_CHAR_LENGTH As Integer = 16384
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.Trello.CATEGORY_TAG
      commentId: F:AeLa.EasyFeedback.APIs.Trello.CATEGORY_TAG
      language: CSharp
      name:
        CSharp: CATEGORY_TAG
        VB: CATEGORY_TAG
      nameWithType:
        CSharp: Trello.CATEGORY_TAG
        VB: Trello.CATEGORY_TAG
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.CATEGORY_TAG
        VB: AeLa.EasyFeedback.APIs.Trello.CATEGORY_TAG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: CATEGORY_TAG
        path: ''
        startLine: 1774
      syntax:
        content:
          CSharp: public const string CATEGORY_TAG = "(EF)"
          VB: Public Const CATEGORY_TAG As String = "(EF)"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.Trello.ErrorMessage
      commentId: F:AeLa.EasyFeedback.APIs.Trello.ErrorMessage
      language: CSharp
      name:
        CSharp: ErrorMessage
        VB: ErrorMessage
      nameWithType:
        CSharp: Trello.ErrorMessage
        VB: Trello.ErrorMessage
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.ErrorMessage
        VB: AeLa.EasyFeedback.APIs.Trello.ErrorMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: ErrorMessage
        path: ''
        startLine: 1775
      syntax:
        content:
          CSharp: public string ErrorMessage
          VB: Public ErrorMessage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.IsDoneUploading
      commentId: F:AeLa.EasyFeedback.APIs.Trello.IsDoneUploading
      language: CSharp
      name:
        CSharp: IsDoneUploading
        VB: IsDoneUploading
      nameWithType:
        CSharp: Trello.IsDoneUploading
        VB: Trello.IsDoneUploading
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.IsDoneUploading
        VB: AeLa.EasyFeedback.APIs.Trello.IsDoneUploading
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: IsDoneUploading
        path: ''
        startLine: 1776
      syntax:
        content:
          CSharp: public bool IsDoneUploading
          VB: Public IsDoneUploading As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.LastAddCardResponse
      commentId: F:AeLa.EasyFeedback.APIs.Trello.LastAddCardResponse
      language: CSharp
      name:
        CSharp: LastAddCardResponse
        VB: LastAddCardResponse
      nameWithType:
        CSharp: Trello.LastAddCardResponse
        VB: Trello.LastAddCardResponse
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.LastAddCardResponse
        VB: AeLa.EasyFeedback.APIs.Trello.LastAddCardResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: LastAddCardResponse
        path: ''
        startLine: 1777
      syntax:
        content:
          CSharp: public AddCardResponse LastAddCardResponse
          VB: Public LastAddCardResponse As AddCardResponse
        return:
          type: AeLa.EasyFeedback.APIs.AddCardResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.LastRequest
      commentId: F:AeLa.EasyFeedback.APIs.Trello.LastRequest
      language: CSharp
      name:
        CSharp: LastRequest
        VB: LastRequest
      nameWithType:
        CSharp: Trello.LastRequest
        VB: Trello.LastRequest
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.LastRequest
        VB: AeLa.EasyFeedback.APIs.Trello.LastRequest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: LastRequest
        path: ''
        startLine: 1779
      syntax:
        content:
          CSharp: public UnityWebRequest LastRequest
          VB: Public LastRequest As UnityWebRequest
        return:
          type: UnityWebRequest
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.UploadError
      commentId: F:AeLa.EasyFeedback.APIs.Trello.UploadError
      language: CSharp
      name:
        CSharp: UploadError
        VB: UploadError
      nameWithType:
        CSharp: Trello.UploadError
        VB: Trello.UploadError
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.UploadError
        VB: AeLa.EasyFeedback.APIs.Trello.UploadError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: UploadError
        path: ''
        startLine: 1783
      syntax:
        content:
          CSharp: public bool UploadError
          VB: Public UploadError As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.UploadException
      commentId: F:AeLa.EasyFeedback.APIs.Trello.UploadException
      language: CSharp
      name:
        CSharp: UploadException
        VB: UploadException
      nameWithType:
        CSharp: Trello.UploadException
        VB: Trello.UploadException
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.UploadException
        VB: AeLa.EasyFeedback.APIs.Trello.UploadException
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: UploadException
        path: ''
        startLine: 1784
      syntax:
        content:
          CSharp: public Exception UploadException
          VB: Public UploadException As Exception
        return:
          type: Exception
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.AuthURL
      commentId: P:AeLa.EasyFeedback.APIs.Trello.AuthURL
      language: CSharp
      name:
        CSharp: AuthURL
        VB: AuthURL
      nameWithType:
        CSharp: Trello.AuthURL
        VB: Trello.AuthURL
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.AuthURL
        VB: AeLa.EasyFeedback.APIs.Trello.AuthURL
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: AuthURL
        path: ''
        startLine: 1786
      syntax:
        content:
          CSharp: public static string AuthURL { get; }
          VB: Public Shared ReadOnly Property AuthURL As String
        parameters: []
        return:
          type: System.String
      overload: AeLa.EasyFeedback.APIs.Trello.AuthURL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: AeLa.EasyFeedback.APIs.Trello.#ctor(System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.#ctor(System.String)
      language: CSharp
      name:
        CSharp: Trello(String)
        VB: Trello(String)
      nameWithType:
        CSharp: Trello.Trello(String)
        VB: Trello.Trello(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.Trello(System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.Trello(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: .ctor
        path: ''
        startLine: 1797
      syntax:
        content:
          CSharp: public Trello(string token)
          VB: Public Sub New(token As String)
        parameters:
        - id: token
          type: System.String
      overload: AeLa.EasyFeedback.APIs.Trello.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetURI(System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetURI(System.String)
      language: CSharp
      name:
        CSharp: GetURI(String)
        VB: GetURI(String)
      nameWithType:
        CSharp: Trello.GetURI(String)
        VB: Trello.GetURI(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetURI(System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.GetURI(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetURI
        path: ''
        startLine: 1808
      summary: "\nReturns a fully formed and authenticated request URI for the Trello API path\nprovided\n"
      example: []
      syntax:
        content:
          CSharp: public string GetURI(string apiPath)
          VB: Public Function GetURI(apiPath As String) As String
        parameters:
        - id: apiPath
          type: System.String
          description: The Trello API endpoint path (starting with /)
        return:
          type: System.String
          description: ''
      overload: AeLa.EasyFeedback.APIs.Trello.GetURI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.IsValidToken(System.String,System.Boolean)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.IsValidToken(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: IsValidToken(String, Boolean)
        VB: IsValidToken(String, Boolean)
      nameWithType:
        CSharp: Trello.IsValidToken(String, Boolean)
        VB: Trello.IsValidToken(String, Boolean)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.IsValidToken(System.String, System.Boolean)
        VB: AeLa.EasyFeedback.APIs.Trello.IsValidToken(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: IsValidToken
        path: ''
        startLine: 1819
      summary: "\nChecks if a token is valid\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsValidToken(string token, bool silent = false)
          VB: Public Shared Function IsValidToken(token As String, silent As Boolean = False) As Boolean
        parameters:
        - id: token
          type: System.String
        - id: silent
          type: System.Boolean
        return:
          type: System.Boolean
      overload: AeLa.EasyFeedback.APIs.Trello.IsValidToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.APIs.Trello.AddCard(System.String,System.String,IEnumerable{AeLa.EasyFeedback.APIs.Label},System.String,System.Byte[])
      commentId: M:AeLa.EasyFeedback.APIs.Trello.AddCard(System.String,System.String,IEnumerable{AeLa.EasyFeedback.APIs.Label},System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: AddCard(String, String, IEnumerable<Label>, String, Byte[])
        VB: AddCard(String, String, IEnumerable(Of Label), String, Byte())
      nameWithType:
        CSharp: Trello.AddCard(String, String, IEnumerable<Label>, String, Byte[])
        VB: Trello.AddCard(String, String, IEnumerable(Of Label), String, Byte())
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.AddCard(System.String, System.String, IEnumerable<AeLa.EasyFeedback.APIs.Label>, System.String, System.Byte[])
        VB: AeLa.EasyFeedback.APIs.Trello.AddCard(System.String, System.String, IEnumerable(Of AeLa.EasyFeedback.APIs.Label), System.String, System.Byte())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: AddCard
        path: ''
        startLine: 1857
      summary: "\nAdds a card to a board\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator AddCard(string name, string description, IEnumerable<Label> labels, string list, byte[] fileSource = null)
          VB: Public Function AddCard(name As String, description As String, labels As IEnumerable(Of Label), list As String, fileSource As Byte() = Nothing) As IEnumerator
        parameters:
        - id: name
          type: System.String
          description: Title of the card
        - id: description
          type: System.String
          description: Description of the card
        - id: labels
          type: IEnumerable{AeLa.EasyFeedback.APIs.Label}
          description: Any labels on the card
        - id: list
          type: System.String
          description: The list the card belongs to
        - id: fileSource
          type: System.Byte[]
          description: File data to attach to the card
        return:
          type: IEnumerator
      overload: AeLa.EasyFeedback.APIs.Trello.AddCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync(System.String,System.Byte[],System.String,System.String,System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync(System.String,System.Byte[],System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AddAttachmentAsync(String, Byte[], String, String, String)
        VB: AddAttachmentAsync(String, Byte(), String, String, String)
      nameWithType:
        CSharp: Trello.AddAttachmentAsync(String, Byte[], String, String, String)
        VB: Trello.AddAttachmentAsync(String, Byte(), String, String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync(System.String, System.Byte[], System.String, System.String, System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync(System.String, System.Byte(), System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: AddAttachmentAsync
        path: ''
        startLine: 1902
      syntax:
        content:
          CSharp: public IEnumerator AddAttachmentAsync(string cardID, byte[] file = null, string url = null, string name = null, string mimeType = null)
          VB: Public Function AddAttachmentAsync(cardID As String, file As Byte() = Nothing, url As String = Nothing, name As String = Nothing, mimeType As String = Nothing) As IEnumerator
        parameters:
        - id: cardID
          type: System.String
        - id: file
          type: System.Byte[]
        - id: url
          type: System.String
        - id: name
          type: System.String
        - id: mimeType
          type: System.String
        return:
          type: IEnumerator
      overload: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync(System.String,Action{AeLa.EasyFeedback.APIs.Label[]})
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync(System.String,Action{AeLa.EasyFeedback.APIs.Label[]})
      language: CSharp
      name:
        CSharp: GetLabelsAsync(String, Action<Label[]>)
        VB: GetLabelsAsync(String, Action(Of Label()))
      nameWithType:
        CSharp: Trello.GetLabelsAsync(String, Action<Label[]>)
        VB: Trello.GetLabelsAsync(String, Action(Of Label()))
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync(System.String, Action<AeLa.EasyFeedback.APIs.Label[]>)
        VB: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync(System.String, Action(Of AeLa.EasyFeedback.APIs.Label()))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetLabelsAsync
        path: ''
        startLine: 1939
      syntax:
        content:
          CSharp: public IEnumerator GetLabelsAsync(string boardID, Action<Label[]> onFinished)
          VB: Public Function GetLabelsAsync(boardID As String, onFinished As Action(Of Label())) As IEnumerator
        parameters:
        - id: boardID
          type: System.String
        - id: onFinished
          type: Action{AeLa.EasyFeedback.APIs.Label[]}
        return:
          type: IEnumerator
      overload: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetListsAsync(System.String,Action{AeLa.EasyFeedback.APIs.List[]})
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetListsAsync(System.String,Action{AeLa.EasyFeedback.APIs.List[]})
      language: CSharp
      name:
        CSharp: GetListsAsync(String, Action<List[]>)
        VB: GetListsAsync(String, Action(Of List()))
      nameWithType:
        CSharp: Trello.GetListsAsync(String, Action<List[]>)
        VB: Trello.GetListsAsync(String, Action(Of List()))
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetListsAsync(System.String, Action<AeLa.EasyFeedback.APIs.List[]>)
        VB: AeLa.EasyFeedback.APIs.Trello.GetListsAsync(System.String, Action(Of AeLa.EasyFeedback.APIs.List()))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetListsAsync
        path: ''
        startLine: 1964
      syntax:
        content:
          CSharp: public IEnumerator GetListsAsync(string boardID, Action<List[]> onFinished)
          VB: Public Function GetListsAsync(boardID As String, onFinished As Action(Of List())) As IEnumerator
        parameters:
        - id: boardID
          type: System.String
        - id: onFinished
          type: Action{AeLa.EasyFeedback.APIs.List[]}
        return:
          type: IEnumerator
      overload: AeLa.EasyFeedback.APIs.Trello.GetListsAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetLists(System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetLists(System.String)
      language: CSharp
      name:
        CSharp: GetLists(String)
        VB: GetLists(String)
      nameWithType:
        CSharp: Trello.GetLists(String)
        VB: Trello.GetLists(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetLists(System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.GetLists(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetLists
        path: ''
        startLine: 1996
      summary: "\nEditor-safe method for getting the lists on a board\n"
      example: []
      syntax:
        content:
          CSharp: public List[] GetLists(string boardID)
          VB: Public Function GetLists(boardID As String) As List()
        parameters:
        - id: boardID
          type: System.String
          description: ''
        return:
          type: AeLa.EasyFeedback.APIs.List[]
          description: ''
      overload: AeLa.EasyFeedback.APIs.Trello.GetLists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.AddBoard(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Nullable{AeLa.EasyFeedback.APIs.Prefs})
      commentId: M:AeLa.EasyFeedback.APIs.Trello.AddBoard(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Nullable{AeLa.EasyFeedback.APIs.Prefs})
      language: CSharp
      name:
        CSharp: AddBoard(String, Boolean, Boolean, String, String, String, String, String, Nullable<Prefs>)
        VB: AddBoard(String, Boolean, Boolean, String, String, String, String, String, Nullable(Of Prefs))
      nameWithType:
        CSharp: Trello.AddBoard(String, Boolean, Boolean, String, String, String, String, String, Nullable<Prefs>)
        VB: Trello.AddBoard(String, Boolean, Boolean, String, String, String, String, String, Nullable(Of Prefs))
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.AddBoard(System.String, System.Boolean, System.Boolean, System.String, System.String, System.String, System.String, System.String, System.Nullable<AeLa.EasyFeedback.APIs.Prefs>)
        VB: AeLa.EasyFeedback.APIs.Trello.AddBoard(System.String, System.Boolean, System.Boolean, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of AeLa.EasyFeedback.APIs.Prefs))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: AddBoard
        path: ''
        startLine: 2018
      summary: "\nEditor-safe method for adding a board\n"
      example: []
      syntax:
        content:
          CSharp: public Board AddBoard(string name, bool defaultLabels = true, bool defaultLists = true, string desc = null, string idOrganization = null, string idBoardSource = null, string keepFromSource = "all", string powerUps = "all", Prefs? prefs = null)
          VB: Public Function AddBoard(name As String, defaultLabels As Boolean = True, defaultLists As Boolean = True, desc As String = Nothing, idOrganization As String = Nothing, idBoardSource As String = Nothing, keepFromSource As String = "all", powerUps As String = "all", prefs As Prefs? = Nothing) As Board
        parameters:
        - id: name
          type: System.String
        - id: defaultLabels
          type: System.Boolean
        - id: defaultLists
          type: System.Boolean
        - id: desc
          type: System.String
        - id: idOrganization
          type: System.String
        - id: idBoardSource
          type: System.String
        - id: keepFromSource
          type: System.String
        - id: powerUps
          type: System.String
        - id: prefs
          type: System.Nullable{AeLa.EasyFeedback.APIs.Prefs}
        return:
          type: AeLa.EasyFeedback.APIs.Board
      overload: AeLa.EasyFeedback.APIs.Trello.AddBoard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync(Action{AeLa.EasyFeedback.APIs.Board[]})
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync(Action{AeLa.EasyFeedback.APIs.Board[]})
      language: CSharp
      name:
        CSharp: GetBoardsAsync(Action<Board[]>)
        VB: GetBoardsAsync(Action(Of Board()))
      nameWithType:
        CSharp: Trello.GetBoardsAsync(Action<Board[]>)
        VB: Trello.GetBoardsAsync(Action(Of Board()))
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync(Action<AeLa.EasyFeedback.APIs.Board[]>)
        VB: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync(Action(Of AeLa.EasyFeedback.APIs.Board()))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetBoardsAsync
        path: ''
        startLine: 2105
      syntax:
        content:
          CSharp: public IEnumerator GetBoardsAsync(Action<Board[]> onFinished)
          VB: Public Function GetBoardsAsync(onFinished As Action(Of Board())) As IEnumerator
        parameters:
        - id: onFinished
          type: Action{AeLa.EasyFeedback.APIs.Board[]}
        return:
          type: IEnumerator
      overload: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetBoards
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetBoards
      language: CSharp
      name:
        CSharp: GetBoards()
        VB: GetBoards()
      nameWithType:
        CSharp: Trello.GetBoards()
        VB: Trello.GetBoards()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetBoards()
        VB: AeLa.EasyFeedback.APIs.Trello.GetBoards()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetBoards
        path: ''
        startLine: 2131
      summary: "\nEditor-safe method for getting the boards on the authorized Trello account\n"
      example: []
      syntax:
        content:
          CSharp: public Board[] GetBoards()
          VB: Public Function GetBoards As Board()
        return:
          type: AeLa.EasyFeedback.APIs.Board[]
      overload: AeLa.EasyFeedback.APIs.Trello.GetBoards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetLabels(System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetLabels(System.String)
      language: CSharp
      name:
        CSharp: GetLabels(String)
        VB: GetLabels(String)
      nameWithType:
        CSharp: Trello.GetLabels(String)
        VB: Trello.GetLabels(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetLabels(System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.GetLabels(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetLabels
        path: ''
        startLine: 2157
      summary: "\nEditor-safe method for getting labels from a board\n"
      example: []
      syntax:
        content:
          CSharp: public Label[] GetLabels(string boardID)
          VB: Public Function GetLabels(boardID As String) As Label()
        parameters:
        - id: boardID
          type: System.String
        return:
          type: AeLa.EasyFeedback.APIs.Label[]
      overload: AeLa.EasyFeedback.APIs.Trello.GetLabels*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.GetSubscribed(System.String)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.GetSubscribed(System.String)
      language: CSharp
      name:
        CSharp: GetSubscribed(String)
        VB: GetSubscribed(String)
      nameWithType:
        CSharp: Trello.GetSubscribed(String)
        VB: Trello.GetSubscribed(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.GetSubscribed(System.String)
        VB: AeLa.EasyFeedback.APIs.Trello.GetSubscribed(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: GetSubscribed
        path: ''
        startLine: 2181
      summary: "\nReturns whether or not the authenticated user is subscribed to a board\n"
      example: []
      syntax:
        content:
          CSharp: public bool GetSubscribed(string boardID)
          VB: Public Function GetSubscribed(boardID As String) As Boolean
        parameters:
        - id: boardID
          type: System.String
          description: The board
        return:
          type: System.Boolean
          description: Whether or not the authenticated user is subscribed to the board
      overload: AeLa.EasyFeedback.APIs.Trello.GetSubscribed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.PutSubscribed(System.String,System.Boolean)
      commentId: M:AeLa.EasyFeedback.APIs.Trello.PutSubscribed(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: PutSubscribed(String, Boolean)
        VB: PutSubscribed(String, Boolean)
      nameWithType:
        CSharp: Trello.PutSubscribed(String, Boolean)
        VB: Trello.PutSubscribed(String, Boolean)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.PutSubscribed(System.String, System.Boolean)
        VB: AeLa.EasyFeedback.APIs.Trello.PutSubscribed(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: PutSubscribed
        path: ''
        startLine: 2203
      summary: "\nSets a user&apos;s subscribed state for a board\n"
      example: []
      syntax:
        content:
          CSharp: public void PutSubscribed(string boardID, bool value)
          VB: Public Sub PutSubscribed(boardID As String, value As Boolean)
        parameters:
        - id: boardID
          type: System.String
          description: The board
        - id: value
          type: System.Boolean
          description: The subscribed state
      overload: AeLa.EasyFeedback.APIs.Trello.PutSubscribed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.APIs.Trello.TEMPLATE_BOARD_ID
      commentId: F:AeLa.EasyFeedback.APIs.Trello.TEMPLATE_BOARD_ID
      language: CSharp
      name:
        CSharp: TEMPLATE_BOARD_ID
        VB: TEMPLATE_BOARD_ID
      nameWithType:
        CSharp: Trello.TEMPLATE_BOARD_ID
        VB: Trello.TEMPLATE_BOARD_ID
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.TEMPLATE_BOARD_ID
        VB: AeLa.EasyFeedback.APIs.Trello.TEMPLATE_BOARD_ID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: TEMPLATE_BOARD_ID
        path: ''
        startLine: 2217
      syntax:
        content:
          CSharp: public const string TEMPLATE_BOARD_ID = "589d1b02a4856195b7cc31c9"
          VB: Public Const TEMPLATE_BOARD_ID As String = "589d1b02a4856195b7cc31c9"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.Trello.APP_KEY
      commentId: F:AeLa.EasyFeedback.APIs.Trello.APP_KEY
      language: CSharp
      name:
        CSharp: APP_KEY
        VB: APP_KEY
      nameWithType:
        CSharp: Trello.APP_KEY
        VB: Trello.APP_KEY
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.APP_KEY
        VB: AeLa.EasyFeedback.APIs.Trello.APP_KEY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: APP_KEY
        path: ''
        startLine: 2218
      syntax:
        content:
          CSharp: public const string APP_KEY = "9babe077311b8a24fddaebb73de1df6a"
          VB: Public Const APP_KEY As String = "9babe077311b8a24fddaebb73de1df6a"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.APIs.Trello.API_URI
      commentId: F:AeLa.EasyFeedback.APIs.Trello.API_URI
      language: CSharp
      name:
        CSharp: API_URI
        VB: API_URI
      nameWithType:
        CSharp: Trello.API_URI
        VB: Trello.API_URI
      qualifiedName:
        CSharp: AeLa.EasyFeedback.APIs.Trello.API_URI
        VB: AeLa.EasyFeedback.APIs.Trello.API_URI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.APIs
      source:
        id: API_URI
        path: ''
        startLine: 2219
      syntax:
        content:
          CSharp: public const string API_URI = "https://trello.com/1"
          VB: Public Const API_URI As String = "https://trello.com/1"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: AeLa.EasyFeedback.FormElements
  commentId: N:AeLa.EasyFeedback.FormElements
  language: CSharp
  name:
    CSharp: AeLa.EasyFeedback.FormElements
    VB: AeLa.EasyFeedback.FormElements
  nameWithType:
    CSharp: AeLa.EasyFeedback.FormElements
    VB: AeLa.EasyFeedback.FormElements
  qualifiedName:
    CSharp: AeLa.EasyFeedback.FormElements
    VB: AeLa.EasyFeedback.FormElements
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AeLa.EasyFeedback.FormElements.PriorityDropdown
    commentId: T:AeLa.EasyFeedback.FormElements.PriorityDropdown
    language: CSharp
    name:
      CSharp: PriorityDropdown
      VB: PriorityDropdown
    nameWithType:
      CSharp: PriorityDropdown
      VB: PriorityDropdown
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FormElements.PriorityDropdown
      VB: AeLa.EasyFeedback.FormElements.PriorityDropdown
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.FormElements
    source:
      id: PriorityDropdown
      path: ''
      startLine: 2763
    syntax:
      content:
        CSharp: 'public class PriorityDropdown : FormElement'
        VB: >-
          Public Class PriorityDropdown

              Inherits FormElement
    inheritance:
    - System.Object
    - AeLa.EasyFeedback.FormElement
    inheritedMembers:
    - AeLa.EasyFeedback.FormElement.Form
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake
      commentId: M:AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PriorityDropdown.Awake()
        VB: PriorityDropdown.Awake()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake()
        VB: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: Awake
        path: ''
        startLine: 2768
      syntax:
        content:
          CSharp: public override void Awake()
          VB: Public Overrides Sub Awake
      overload: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake*
      overridden: AeLa.EasyFeedback.FormElement.Awake
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed
      commentId: M:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed
      language: CSharp
      name:
        CSharp: FormClosed()
        VB: FormClosed()
      nameWithType:
        CSharp: PriorityDropdown.FormClosed()
        VB: PriorityDropdown.FormClosed()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed()
        VB: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormClosed
        path: ''
        startLine: 2783
      syntax:
        content:
          CSharp: protected override void FormClosed()
          VB: Protected Overrides Sub FormClosed
      overload: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed*
      overridden: AeLa.EasyFeedback.FormElement.FormClosed
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened
      commentId: M:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened
      language: CSharp
      name:
        CSharp: FormOpened()
        VB: FormOpened()
      nameWithType:
        CSharp: PriorityDropdown.FormOpened()
        VB: PriorityDropdown.FormOpened()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened()
        VB: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormOpened
        path: ''
        startLine: 2787
      syntax:
        content:
          CSharp: protected override void FormOpened()
          VB: Protected Overrides Sub FormOpened
      overload: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened*
      overridden: AeLa.EasyFeedback.FormElement.FormOpened
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted
      commentId: M:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted
      language: CSharp
      name:
        CSharp: FormSubmitted()
        VB: FormSubmitted()
      nameWithType:
        CSharp: PriorityDropdown.FormSubmitted()
        VB: PriorityDropdown.FormSubmitted()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted()
        VB: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormSubmitted
        path: ''
        startLine: 2791
      syntax:
        content:
          CSharp: protected override void FormSubmitted()
          VB: Protected Overrides Sub FormSubmitted
      overload: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted*
      overridden: AeLa.EasyFeedback.FormElement.FormSubmitted
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: AeLa.EasyFeedback.FormElements.CategoryDropdown
    commentId: T:AeLa.EasyFeedback.FormElements.CategoryDropdown
    language: CSharp
    name:
      CSharp: CategoryDropdown
      VB: CategoryDropdown
    nameWithType:
      CSharp: CategoryDropdown
      VB: CategoryDropdown
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FormElements.CategoryDropdown
      VB: AeLa.EasyFeedback.FormElements.CategoryDropdown
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.FormElements
    source:
      id: CategoryDropdown
      path: ''
      startLine: 2805
    syntax:
      content:
        CSharp: 'public class CategoryDropdown : FormElement'
        VB: >-
          Public Class CategoryDropdown

              Inherits FormElement
    inheritance:
    - System.Object
    - AeLa.EasyFeedback.FormElement
    inheritedMembers:
    - AeLa.EasyFeedback.FormElement.Form
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake
      commentId: M:AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: CategoryDropdown.Awake()
        VB: CategoryDropdown.Awake()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake()
        VB: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: Awake
        path: ''
        startLine: 2809
      syntax:
        content:
          CSharp: public override void Awake()
          VB: Public Overrides Sub Awake
      overload: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake*
      overridden: AeLa.EasyFeedback.FormElement.Awake
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed
      commentId: M:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed
      language: CSharp
      name:
        CSharp: FormClosed()
        VB: FormClosed()
      nameWithType:
        CSharp: CategoryDropdown.FormClosed()
        VB: CategoryDropdown.FormClosed()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed()
        VB: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormClosed
        path: ''
        startLine: 2824
      syntax:
        content:
          CSharp: protected override void FormClosed()
          VB: Protected Overrides Sub FormClosed
      overload: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed*
      overridden: AeLa.EasyFeedback.FormElement.FormClosed
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened
      commentId: M:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened
      language: CSharp
      name:
        CSharp: FormOpened()
        VB: FormOpened()
      nameWithType:
        CSharp: CategoryDropdown.FormOpened()
        VB: CategoryDropdown.FormOpened()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened()
        VB: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormOpened
        path: ''
        startLine: 2828
      syntax:
        content:
          CSharp: protected override void FormOpened()
          VB: Protected Overrides Sub FormOpened
      overload: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened*
      overridden: AeLa.EasyFeedback.FormElement.FormOpened
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted
      commentId: M:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted
      language: CSharp
      name:
        CSharp: FormSubmitted()
        VB: FormSubmitted()
      nameWithType:
        CSharp: CategoryDropdown.FormSubmitted()
        VB: CategoryDropdown.FormSubmitted()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted()
        VB: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormSubmitted
        path: ''
        startLine: 2832
      syntax:
        content:
          CSharp: protected override void FormSubmitted()
          VB: Protected Overrides Sub FormSubmitted
      overload: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted*
      overridden: AeLa.EasyFeedback.FormElement.FormSubmitted
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: AeLa.EasyFeedback.FormElements.ReportTitle
    commentId: T:AeLa.EasyFeedback.FormElements.ReportTitle
    language: CSharp
    name:
      CSharp: ReportTitle
      VB: ReportTitle
    nameWithType:
      CSharp: ReportTitle
      VB: ReportTitle
    qualifiedName:
      CSharp: AeLa.EasyFeedback.FormElements.ReportTitle
      VB: AeLa.EasyFeedback.FormElements.ReportTitle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.FormElements
    source:
      id: ReportTitle
      path: ''
      startLine: 2901
    syntax:
      content:
        CSharp: 'public class ReportTitle : FormElement'
        VB: >-
          Public Class ReportTitle

              Inherits FormElement
    inheritance:
    - System.Object
    - AeLa.EasyFeedback.FormElement
    inheritedMembers:
    - AeLa.EasyFeedback.FormElement.Form
    - AeLa.EasyFeedback.FormElement.Awake
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed
      commentId: M:AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed
      language: CSharp
      name:
        CSharp: FormClosed()
        VB: FormClosed()
      nameWithType:
        CSharp: ReportTitle.FormClosed()
        VB: ReportTitle.FormClosed()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed()
        VB: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormClosed
        path: ''
        startLine: 2903
      syntax:
        content:
          CSharp: protected override void FormClosed()
          VB: Protected Overrides Sub FormClosed
      overload: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed*
      overridden: AeLa.EasyFeedback.FormElement.FormClosed
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened
      commentId: M:AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened
      language: CSharp
      name:
        CSharp: FormOpened()
        VB: FormOpened()
      nameWithType:
        CSharp: ReportTitle.FormOpened()
        VB: ReportTitle.FormOpened()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened()
        VB: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormOpened
        path: ''
        startLine: 2907
      syntax:
        content:
          CSharp: protected override void FormOpened()
          VB: Protected Overrides Sub FormOpened
      overload: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened*
      overridden: AeLa.EasyFeedback.FormElement.FormOpened
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted
      commentId: M:AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted
      language: CSharp
      name:
        CSharp: FormSubmitted()
        VB: FormSubmitted()
      nameWithType:
        CSharp: ReportTitle.FormSubmitted()
        VB: ReportTitle.FormSubmitted()
      qualifiedName:
        CSharp: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted()
        VB: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.FormElements
      source:
        id: FormSubmitted
        path: ''
        startLine: 2911
      syntax:
        content:
          CSharp: protected override void FormSubmitted()
          VB: Protected Overrides Sub FormSubmitted
      overload: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted*
      overridden: AeLa.EasyFeedback.FormElement.FormSubmitted
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: AeLa.EasyFeedback.Utility
  commentId: N:AeLa.EasyFeedback.Utility
  language: CSharp
  name:
    CSharp: AeLa.EasyFeedback.Utility
    VB: AeLa.EasyFeedback.Utility
  nameWithType:
    CSharp: AeLa.EasyFeedback.Utility
    VB: AeLa.EasyFeedback.Utility
  qualifiedName:
    CSharp: AeLa.EasyFeedback.Utility
    VB: AeLa.EasyFeedback.Utility
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AeLa.EasyFeedback.Utility.FileAttachment
    commentId: T:AeLa.EasyFeedback.Utility.FileAttachment
    language: CSharp
    name:
      CSharp: FileAttachment
      VB: FileAttachment
    nameWithType:
      CSharp: FileAttachment
      VB: FileAttachment
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.FileAttachment
      VB: AeLa.EasyFeedback.Utility.FileAttachment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: FileAttachment
      path: ''
      startLine: 3250
    syntax:
      content:
        CSharp: public class FileAttachment
        VB: Public Class FileAttachment
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.Utility.FileAttachment.Name
      commentId: P:AeLa.EasyFeedback.Utility.FileAttachment.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: FileAttachment.Name
        VB: FileAttachment.Name
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.Name
        VB: AeLa.EasyFeedback.Utility.FileAttachment.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Name
        path: ''
        startLine: 3260
      summary: "\nThe name of the file attachment (0 to 256 characters).\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.FileAttachment.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.FileAttachment.Data
      commentId: P:AeLa.EasyFeedback.Utility.FileAttachment.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: FileAttachment.Data
        VB: FileAttachment.Data
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.Data
        VB: AeLa.EasyFeedback.Utility.FileAttachment.Data
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Data
        path: ''
        startLine: 3275
      summary: "\nAttached file data\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] Data { get; set; }
          VB: Public Property Data As Byte()
        parameters: []
        return:
          type: System.Byte[]
      overload: AeLa.EasyFeedback.Utility.FileAttachment.Data*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.FileAttachment.MimeType
      commentId: P:AeLa.EasyFeedback.Utility.FileAttachment.MimeType
      language: CSharp
      name:
        CSharp: MimeType
        VB: MimeType
      nameWithType:
        CSharp: FileAttachment.MimeType
        VB: FileAttachment.MimeType
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.MimeType
        VB: AeLa.EasyFeedback.Utility.FileAttachment.MimeType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: MimeType
        path: ''
        startLine: 3284
      summary: "\nThe MIME type for this file\n"
      example: []
      syntax:
        content:
          CSharp: public string MimeType { get; set; }
          VB: Public Property MimeType As String
        parameters: []
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.FileAttachment.MimeType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.Byte[],System.String)
      commentId: M:AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: FileAttachment(String, Byte[], String)
        VB: FileAttachment(String, Byte(), String)
      nameWithType:
        CSharp: FileAttachment.FileAttachment(String, Byte[], String)
        VB: FileAttachment.FileAttachment(String, Byte(), String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.Byte[], System.String)
        VB: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.Byte(), System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: .ctor
        path: ''
        startLine: 3296
      summary: "\nCreates a new instance of the FileAttachment object\n"
      example: []
      syntax:
        content:
          CSharp: public FileAttachment(string name, byte[] data, string mimeType = null)
          VB: Public Sub New(name As String, data As Byte(), mimeType As String = Nothing)
        parameters:
        - id: name
          type: System.String
          description: The name of the attachment
        - id: data
          type: System.Byte[]
          description: The file data
        - id: mimeType
          type: System.String
          description: The MIME type of the file
      overload: AeLa.EasyFeedback.Utility.FileAttachment.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: FileAttachment(String, String)
        VB: FileAttachment(String, String)
      nameWithType:
        CSharp: FileAttachment.FileAttachment(String, String)
        VB: FileAttachment.FileAttachment(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.String)
        VB: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: .ctor
        path: ''
        startLine: 3308
      summary: "\nCreates a new instance of the FileAttachment object\n"
      example: []
      syntax:
        content:
          CSharp: public FileAttachment(string filePath, string mimeType = null)
          VB: Public Sub New(filePath As String, mimeType As String = Nothing)
        parameters:
        - id: filePath
          type: System.String
          description: The path to the file
        - id: mimeType
          type: System.String
          description: The MIME type of the file
      overload: AeLa.EasyFeedback.Utility.FileAttachment.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Utility.FileAttachment.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: FileAttachment(String, String, String)
        VB: FileAttachment(String, String, String)
      nameWithType:
        CSharp: FileAttachment.FileAttachment(String, String, String)
        VB: FileAttachment.FileAttachment(String, String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.String, System.String)
        VB: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: .ctor
        path: ''
        startLine: 3321
      summary: "\nCreates a new instance of the FileAttachment object\n"
      example: []
      syntax:
        content:
          CSharp: public FileAttachment(string name, string filePath, string mimeType = null)
          VB: Public Sub New(name As String, filePath As String, mimeType As String = Nothing)
        parameters:
        - id: name
          type: System.String
          description: The name of the attachment
        - id: filePath
          type: System.String
          description: The path to the file
        - id: mimeType
          type: System.String
          description: The MIME type of the file
      overload: AeLa.EasyFeedback.Utility.FileAttachment.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.Utility.TabNext
    commentId: T:AeLa.EasyFeedback.Utility.TabNext
    language: CSharp
    name:
      CSharp: TabNext
      VB: TabNext
    nameWithType:
      CSharp: TabNext
      VB: TabNext
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.TabNext
      VB: AeLa.EasyFeedback.Utility.TabNext
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: TabNext
      path: ''
      startLine: 3337
    syntax:
      content:
        CSharp: 'public class TabNext : MonoBehaviour'
        VB: >-
          Public Class TabNext

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.Utility.TabNext.Next
      commentId: F:AeLa.EasyFeedback.Utility.TabNext.Next
      language: CSharp
      name:
        CSharp: Next
        VB: Next
      nameWithType:
        CSharp: TabNext.Next
        VB: TabNext.Next
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.TabNext.Next
        VB: AeLa.EasyFeedback.Utility.TabNext.Next
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Next
        path: ''
        startLine: 3339
      syntax:
        content:
          CSharp: public Selectable Next
          VB: Public Next As Selectable
        return:
          type: Selectable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.TabNext.Previous
      commentId: F:AeLa.EasyFeedback.Utility.TabNext.Previous
      language: CSharp
      name:
        CSharp: Previous
        VB: Previous
      nameWithType:
        CSharp: TabNext.Previous
        VB: TabNext.Previous
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.TabNext.Previous
        VB: AeLa.EasyFeedback.Utility.TabNext.Previous
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Previous
        path: ''
        startLine: 3340
      syntax:
        content:
          CSharp: public Selectable Previous
          VB: Public Previous As Selectable
        return:
          type: Selectable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
    commentId: T:AeLa.EasyFeedback.Utility.SetSelectedOnOpen
    language: CSharp
    name:
      CSharp: SetSelectedOnOpen
      VB: SetSelectedOnOpen
    nameWithType:
      CSharp: SetSelectedOnOpen
      VB: SetSelectedOnOpen
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
      VB: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: SetSelectedOnOpen
      path: ''
      startLine: 3406
    syntax:
      content:
        CSharp: 'public class SetSelectedOnOpen : MonoBehaviour'
        VB: >-
          Public Class SetSelectedOnOpen

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: AeLa.EasyFeedback.Utility.SetVersionText
    commentId: T:AeLa.EasyFeedback.Utility.SetVersionText
    language: CSharp
    name:
      CSharp: SetVersionText
      VB: SetVersionText
    nameWithType:
      CSharp: SetVersionText
      VB: SetVersionText
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.SetVersionText
      VB: AeLa.EasyFeedback.Utility.SetVersionText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: SetVersionText
      path: ''
      startLine: 3458
    syntax:
      content:
        CSharp: 'public class SetVersionText : MonoBehaviour'
        VB: >-
          Public Class SetVersionText

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AeLa.EasyFeedback.Utility.SetVersionText.VersionNumber
      commentId: F:AeLa.EasyFeedback.Utility.SetVersionText.VersionNumber
      language: CSharp
      name:
        CSharp: VersionNumber
        VB: VersionNumber
      nameWithType:
        CSharp: SetVersionText.VersionNumber
        VB: SetVersionText.VersionNumber
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.SetVersionText.VersionNumber
        VB: AeLa.EasyFeedback.Utility.SetVersionText.VersionNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: VersionNumber
        path: ''
        startLine: 3460
      syntax:
        content:
          CSharp: public string VersionNumber
          VB: Public VersionNumber As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.SetVersionText.Prefix
      commentId: F:AeLa.EasyFeedback.Utility.SetVersionText.Prefix
      language: CSharp
      name:
        CSharp: Prefix
        VB: Prefix
      nameWithType:
        CSharp: SetVersionText.Prefix
        VB: SetVersionText.Prefix
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.SetVersionText.Prefix
        VB: AeLa.EasyFeedback.Utility.SetVersionText.Prefix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Prefix
        path: ''
        startLine: 3461
      syntax:
        content:
          CSharp: public string Prefix
          VB: Public Prefix As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AeLa.EasyFeedback.Utility.SetVersionText.Suffix
      commentId: F:AeLa.EasyFeedback.Utility.SetVersionText.Suffix
      language: CSharp
      name:
        CSharp: Suffix
        VB: Suffix
      nameWithType:
        CSharp: SetVersionText.Suffix
        VB: SetVersionText.Suffix
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.SetVersionText.Suffix
        VB: AeLa.EasyFeedback.Utility.SetVersionText.Suffix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Suffix
        path: ''
        startLine: 3461
      syntax:
        content:
          CSharp: public string Suffix
          VB: Public Suffix As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AeLa.EasyFeedback.Utility.Markdown
    commentId: T:AeLa.EasyFeedback.Utility.Markdown
    language: CSharp
    name:
      CSharp: Markdown
      VB: Markdown
    nameWithType:
      CSharp: Markdown
      VB: Markdown
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.Markdown
      VB: AeLa.EasyFeedback.Utility.Markdown
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: Markdown
      path: ''
      startLine: 3516
    syntax:
      content:
        CSharp: public static class Markdown
        VB: Public Module Markdown
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AeLa.EasyFeedback.Utility.Markdown.HR
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HR
      language: CSharp
      name:
        CSharp: HR
        VB: HR
      nameWithType:
        CSharp: Markdown.HR
        VB: Markdown.HR
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HR
        VB: AeLa.EasyFeedback.Utility.Markdown.HR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: HR
        path: ''
        startLine: 3561
      summary: "\nCreates a horizontal rule or line\n"
      example: []
      syntax:
        content:
          CSharp: public const string HR = "---"
          VB: Public Const HR As String = "---"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.LINE_BREAK
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.LINE_BREAK
      language: CSharp
      name:
        CSharp: LINE_BREAK
        VB: LINE_BREAK
      nameWithType:
        CSharp: Markdown.LINE_BREAK
        VB: Markdown.LINE_BREAK
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.LINE_BREAK
        VB: AeLa.EasyFeedback.Utility.Markdown.LINE_BREAK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: LINE_BREAK
        path: ''
        startLine: 3566
      summary: "\nCreates a new paragraph\n"
      example: []
      syntax:
        content:
          CSharp: public const string LINE_BREAK = "\n\n"
          VB: Public Const LINE_BREAK As String = vbLf & vbLf
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.Header(System.String,AeLa.EasyFeedback.Utility.Markdown.HeaderLevel)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Header(System.String,AeLa.EasyFeedback.Utility.Markdown.HeaderLevel)
      language: CSharp
      name:
        CSharp: Header(String, Markdown.HeaderLevel)
        VB: Header(String, Markdown.HeaderLevel)
      nameWithType:
        CSharp: Markdown.Header(String, Markdown.HeaderLevel)
        VB: Markdown.Header(String, Markdown.HeaderLevel)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Header(System.String, AeLa.EasyFeedback.Utility.Markdown.HeaderLevel)
        VB: AeLa.EasyFeedback.Utility.Markdown.Header(System.String, AeLa.EasyFeedback.Utility.Markdown.HeaderLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Header
        path: ''
        startLine: 3575
      summary: "\nCreates a header from the specified text, with the specified level\n"
      example: []
      syntax:
        content:
          CSharp: public static string Header(string text, Markdown.HeaderLevel level = Markdown.HeaderLevel.H1)
          VB: Public Shared Function Header(text As String, level As Markdown.HeaderLevel = Markdown.HeaderLevel.H1) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        - id: level
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
          description: The header level
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Header*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H1(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H1(System.String)
      language: CSharp
      name:
        CSharp: H1(String)
        VB: H1(String)
      nameWithType:
        CSharp: Markdown.H1(String)
        VB: Markdown.H1(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H1(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H1(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H1
        path: ''
        startLine: 3598
      summary: "\nCreates a first-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H1(string text)
          VB: Public Shared Function H1(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H1*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H2(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H2(System.String)
      language: CSharp
      name:
        CSharp: H2(String)
        VB: H2(String)
      nameWithType:
        CSharp: Markdown.H2(String)
        VB: Markdown.H2(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H2(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H2(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H2
        path: ''
        startLine: 3604
      summary: "\nCreates a second-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H2(string text)
          VB: Public Shared Function H2(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H2*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H3(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H3(System.String)
      language: CSharp
      name:
        CSharp: H3(String)
        VB: H3(String)
      nameWithType:
        CSharp: Markdown.H3(String)
        VB: Markdown.H3(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H3(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H3(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H3
        path: ''
        startLine: 3610
      summary: "\nCreates a third-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H3(string text)
          VB: Public Shared Function H3(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H4(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H4(System.String)
      language: CSharp
      name:
        CSharp: H4(String)
        VB: H4(String)
      nameWithType:
        CSharp: Markdown.H4(String)
        VB: Markdown.H4(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H4(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H4(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H4
        path: ''
        startLine: 3616
      summary: "\nCreates a fourth-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H4(string text)
          VB: Public Shared Function H4(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H4*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H5(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H5(System.String)
      language: CSharp
      name:
        CSharp: H5(String)
        VB: H5(String)
      nameWithType:
        CSharp: Markdown.H5(String)
        VB: Markdown.H5(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H5(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H5(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H5
        path: ''
        startLine: 3622
      summary: "\nCreates a fifth-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H5(string text)
          VB: Public Shared Function H5(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H5*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.H6(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.H6(System.String)
      language: CSharp
      name:
        CSharp: H6(String)
        VB: H6(String)
      nameWithType:
        CSharp: Markdown.H6(String)
        VB: Markdown.H6(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.H6(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.H6(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H6
        path: ''
        startLine: 3628
      summary: "\nCreates a sixth-level header from the specified text\n"
      example: []
      syntax:
        content:
          CSharp: public static string H6(string text)
          VB: Public Shared Function H6(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The header text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.H6*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Em(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Em(System.String)
      language: CSharp
      name:
        CSharp: Em(String)
        VB: Em(String)
      nameWithType:
        CSharp: Markdown.Em(String)
        VB: Markdown.Em(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Em(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Em(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Em
        path: ''
        startLine: 3634
      summary: "\nFormats the text with emphasis/italics\n"
      example: []
      syntax:
        content:
          CSharp: public static string Em(string text)
          VB: Public Shared Function Em(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The text to be emphasized
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Em*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Strong(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Strong(System.String)
      language: CSharp
      name:
        CSharp: Strong(String)
        VB: Strong(String)
      nameWithType:
        CSharp: Markdown.Strong(String)
        VB: Markdown.Strong(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Strong(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Strong(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Strong
        path: ''
        startLine: 3640
      summary: "\nEmboldens the text\n"
      example: []
      syntax:
        content:
          CSharp: public static string Strong(string text)
          VB: Public Shared Function Strong(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The text to be emboldened
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Strong*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Strike(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Strike(System.String)
      language: CSharp
      name:
        CSharp: Strike(String)
        VB: Strike(String)
      nameWithType:
        CSharp: Markdown.Strike(String)
        VB: Markdown.Strike(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Strike(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Strike(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Strike
        path: ''
        startLine: 3646
      summary: "\nStrikes through the text\n"
      example: []
      syntax:
        content:
          CSharp: public static string Strike(string text)
          VB: Public Shared Function Strike(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Strike*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.UnorderedList(System.String[])
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.UnorderedList(System.String[])
      language: CSharp
      name:
        CSharp: UnorderedList(String[])
        VB: UnorderedList(String())
      nameWithType:
        CSharp: Markdown.UnorderedList(String[])
        VB: Markdown.UnorderedList(String())
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.UnorderedList(System.String[])
        VB: AeLa.EasyFeedback.Utility.Markdown.UnorderedList(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: UnorderedList
        path: ''
        startLine: 3652
      summary: "\nCreates an unordered (bulleted) list from an array of items\n"
      example: []
      syntax:
        content:
          CSharp: public static string UnorderedList(string[] items)
          VB: Public Shared Function UnorderedList(items As String()) As String
        parameters:
        - id: items
          type: System.String[]
          description: The items of the list
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.UnorderedList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.OrderedList(System.String[])
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.OrderedList(System.String[])
      language: CSharp
      name:
        CSharp: OrderedList(String[])
        VB: OrderedList(String())
      nameWithType:
        CSharp: Markdown.OrderedList(String[])
        VB: Markdown.OrderedList(String())
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.OrderedList(System.String[])
        VB: AeLa.EasyFeedback.Utility.Markdown.OrderedList(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: OrderedList
        path: ''
        startLine: 3667
      summary: "\nCreates an ordered (numbered) list from an array of items\n"
      example: []
      syntax:
        content:
          CSharp: public static string OrderedList(string[] items)
          VB: Public Shared Function OrderedList(items As String()) As String
        parameters:
        - id: items
          type: System.String[]
          description: The items of the list
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.OrderedList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Hyperlink(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Hyperlink(System.String,System.String)
      language: CSharp
      name:
        CSharp: Hyperlink(String, String)
        VB: Hyperlink(String, String)
      nameWithType:
        CSharp: Markdown.Hyperlink(String, String)
        VB: Markdown.Hyperlink(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Hyperlink(System.String, System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Hyperlink(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Hyperlink
        path: ''
        startLine: 3683
      summary: "\nCreates an inline link\n"
      example: []
      syntax:
        content:
          CSharp: public static string Hyperlink(string text, string url)
          VB: Public Shared Function Hyperlink(text As String, url As String) As String
        parameters:
        - id: text
          type: System.String
          description: The link text
        - id: url
          type: System.String
          description: The link url
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Hyperlink*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Image(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Image(System.String,System.String)
      language: CSharp
      name:
        CSharp: Image(String, String)
        VB: Image(String, String)
      nameWithType:
        CSharp: Markdown.Image(String, String)
        VB: Markdown.Image(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Image(System.String, System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Image(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Image
        path: ''
        startLine: 3691
      summary: "\nCreates an inline image\n"
      example: []
      syntax:
        content:
          CSharp: public static string Image(string url, string alt = "")
          VB: Public Shared Function Image(url As String, alt As String = "") As String
        parameters:
        - id: url
          type: System.String
          description: The url of the image
        - id: alt
          type: System.String
          description: The alt-text for the image
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Image*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Code(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Code(System.String)
      language: CSharp
      name:
        CSharp: Code(String)
        VB: Code(String)
      nameWithType:
        CSharp: Markdown.Code(String)
        VB: Markdown.Code(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Code(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Code(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Code
        path: ''
        startLine: 3698
      summary: "\nCreates an inline span of preformatted text\n"
      example: []
      syntax:
        content:
          CSharp: public static string Code(string text)
          VB: Public Shared Function Code(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Code*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.CodeBlock(System.String,System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.CodeBlock(System.String,System.String)
      language: CSharp
      name:
        CSharp: CodeBlock(String, String)
        VB: CodeBlock(String, String)
      nameWithType:
        CSharp: Markdown.CodeBlock(String, String)
        VB: Markdown.CodeBlock(String, String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.CodeBlock(System.String, System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.CodeBlock(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: CodeBlock
        path: ''
        startLine: 3706
      summary: "\nCreates a block of preformatted text\n"
      example: []
      syntax:
        content:
          CSharp: public static string CodeBlock(string text, string language = "")
          VB: Public Shared Function CodeBlock(text As String, language As String = "") As String
        parameters:
        - id: text
          type: System.String
          description: The text
        - id: language
          type: System.String
          description: The language for syntax highlighting (where supported)
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.CodeBlock*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AeLa.EasyFeedback.Utility.Markdown.Blockquote(System.String)
      commentId: M:AeLa.EasyFeedback.Utility.Markdown.Blockquote(System.String)
      language: CSharp
      name:
        CSharp: Blockquote(String)
        VB: Blockquote(String)
      nameWithType:
        CSharp: Markdown.Blockquote(String)
        VB: Markdown.Blockquote(String)
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.Blockquote(System.String)
        VB: AeLa.EasyFeedback.Utility.Markdown.Blockquote(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: Blockquote
        path: ''
        startLine: 3713
      summary: "\nCreates a block of quoted text\n"
      example: []
      syntax:
        content:
          CSharp: public static string Blockquote(string text)
          VB: Public Shared Function Blockquote(text As String) As String
        parameters:
        - id: text
          type: System.String
          description: The text
        return:
          type: System.String
      overload: AeLa.EasyFeedback.Utility.Markdown.Blockquote*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
    commentId: T:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
    language: CSharp
    name:
      CSharp: Markdown.HeaderLevel
      VB: Markdown.HeaderLevel
    nameWithType:
      CSharp: Markdown.HeaderLevel
      VB: Markdown.HeaderLevel
    qualifiedName:
      CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: AeLa.EasyFeedback.Utility
    source:
      id: HeaderLevel
      path: ''
      startLine: 3715
    syntax:
      content:
        CSharp: public enum HeaderLevel
        VB: Public Enum HeaderLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H1
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H1
      language: CSharp
      name:
        CSharp: H1
        VB: H1
      nameWithType:
        CSharp: Markdown.HeaderLevel.H1
        VB: Markdown.HeaderLevel.H1
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H1
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H1
        path: ''
        startLine: 3717
      syntax:
        content:
          CSharp: H1 = 0
          VB: H1 = 0
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H2
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H2
      language: CSharp
      name:
        CSharp: H2
        VB: H2
      nameWithType:
        CSharp: Markdown.HeaderLevel.H2
        VB: Markdown.HeaderLevel.H2
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H2
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H2
        path: ''
        startLine: 3718
      syntax:
        content:
          CSharp: H2 = 1
          VB: H2 = 1
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H3
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H3
      language: CSharp
      name:
        CSharp: H3
        VB: H3
      nameWithType:
        CSharp: Markdown.HeaderLevel.H3
        VB: Markdown.HeaderLevel.H3
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H3
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H3
        path: ''
        startLine: 3719
      syntax:
        content:
          CSharp: H3 = 2
          VB: H3 = 2
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H4
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H4
      language: CSharp
      name:
        CSharp: H4
        VB: H4
      nameWithType:
        CSharp: Markdown.HeaderLevel.H4
        VB: Markdown.HeaderLevel.H4
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H4
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H4
        path: ''
        startLine: 3720
      syntax:
        content:
          CSharp: H4 = 3
          VB: H4 = 3
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H5
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H5
      language: CSharp
      name:
        CSharp: H5
        VB: H5
      nameWithType:
        CSharp: Markdown.HeaderLevel.H5
        VB: Markdown.HeaderLevel.H5
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H5
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H5
        path: ''
        startLine: 3721
      syntax:
        content:
          CSharp: H5 = 4
          VB: H5 = 4
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H6
      commentId: F:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H6
      language: CSharp
      name:
        CSharp: H6
        VB: H6
      nameWithType:
        CSharp: Markdown.HeaderLevel.H6
        VB: Markdown.HeaderLevel.H6
      qualifiedName:
        CSharp: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H6
        VB: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel.H6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AeLa.EasyFeedback.Utility
      source:
        id: H6
        path: ''
        startLine: 3722
      syntax:
        content:
          CSharp: H6 = 5
          VB: H6 = 5
        return:
          type: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
references:
  AeLa.EasyFeedback:
    name:
      CSharp:
      - name: AeLa.EasyFeedback
        nameWithType: AeLa.EasyFeedback
        qualifiedName: AeLa.EasyFeedback
      VB:
      - name: AeLa.EasyFeedback
        nameWithType: AeLa.EasyFeedback
        qualifiedName: AeLa.EasyFeedback
    isDefinition: true
    commentId: N:AeLa.EasyFeedback
  AeLa.EasyFeedback.EFConfig:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.EFConfig
        name: EFConfig
        nameWithType: EFConfig
        qualifiedName: AeLa.EasyFeedback.EFConfig
      VB:
      - id: AeLa.EasyFeedback.EFConfig
        name: EFConfig
        nameWithType: EFConfig
        qualifiedName: AeLa.EasyFeedback.EFConfig
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.EFConfig
  KeyCode:
    name:
      CSharp:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      VB:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
    isDefinition: true
    commentId: '!:KeyCode'
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Transform'
  UnityEvent:
    name:
      CSharp:
      - id: UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
  AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
        name: FeedbackForm.SubmissionMessageEvent
        nameWithType: FeedbackForm.SubmissionMessageEvent
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
        name: FeedbackForm.SubmissionMessageEvent
        nameWithType: FeedbackForm.SubmissionMessageEvent
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.FeedbackForm.SubmissionMessageEvent
  AeLa.EasyFeedback.Report:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report
        name: Report
        nameWithType: Report
        qualifiedName: AeLa.EasyFeedback.Report
      VB:
      - id: AeLa.EasyFeedback.Report
        name: Report
        nameWithType: Report
        qualifiedName: AeLa.EasyFeedback.Report
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.Report
  AeLa.EasyFeedback.FeedbackForm.IsOpen*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.IsOpen*
        name: IsOpen
        nameWithType: FeedbackForm.IsOpen
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.IsOpen
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.IsOpen*
        name: IsOpen
        nameWithType: FeedbackForm.IsOpen
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.IsOpen
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.IsOpen
  AeLa.EasyFeedback.FeedbackForm.Awake*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.Awake*
        name: Awake
        nameWithType: FeedbackForm.Awake
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Awake
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.Awake*
        name: Awake
        nameWithType: FeedbackForm.Awake
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Awake
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.Awake
  AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI*
        name: InitTrelloAPI
        nameWithType: FeedbackForm.InitTrelloAPI
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI*
        name: InitTrelloAPI
        nameWithType: FeedbackForm.InitTrelloAPI
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.InitTrelloAPI
  AeLa.EasyFeedback.FeedbackForm.Show*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.Show*
        name: Show
        nameWithType: FeedbackForm.Show
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Show
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.Show*
        name: Show
        nameWithType: FeedbackForm.Show
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Show
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.Show
  AeLa.EasyFeedback.FeedbackForm.Submit*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.Submit*
        name: Submit
        nameWithType: FeedbackForm.Submit
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Submit
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.Submit*
        name: Submit
        nameWithType: FeedbackForm.Submit
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Submit
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.Submit
  AeLa.EasyFeedback.FeedbackForm.DisableForm*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.DisableForm*
        name: DisableForm
        nameWithType: FeedbackForm.DisableForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.DisableForm
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.DisableForm*
        name: DisableForm
        nameWithType: FeedbackForm.DisableForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.DisableForm
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.DisableForm
  AeLa.EasyFeedback.FeedbackForm.EnableForm*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.EnableForm*
        name: EnableForm
        nameWithType: FeedbackForm.EnableForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.EnableForm
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.EnableForm*
        name: EnableForm
        nameWithType: FeedbackForm.EnableForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.EnableForm
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.EnableForm
  AeLa.EasyFeedback.FeedbackForm.Hide*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm.Hide*
        name: Hide
        nameWithType: FeedbackForm.Hide
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Hide
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm.Hide*
        name: Hide
        nameWithType: FeedbackForm.Hide
        qualifiedName: AeLa.EasyFeedback.FeedbackForm.Hide
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FeedbackForm.Hide
  AeLa.EasyFeedback.FeedbackForm:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackForm
        name: FeedbackForm
        nameWithType: FeedbackForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm
      VB:
      - id: AeLa.EasyFeedback.FeedbackForm
        name: FeedbackForm
        nameWithType: FeedbackForm
        qualifiedName: AeLa.EasyFeedback.FeedbackForm
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.FeedbackForm
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  AeLa.EasyFeedback.ReportSection.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection.#ctor*
        name: ReportSection
        nameWithType: ReportSection.ReportSection
        qualifiedName: AeLa.EasyFeedback.ReportSection.ReportSection
      VB:
      - id: AeLa.EasyFeedback.ReportSection.#ctor*
        name: ReportSection
        nameWithType: ReportSection.ReportSection
        qualifiedName: AeLa.EasyFeedback.ReportSection.ReportSection
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.ReportSection.#ctor
  AeLa.EasyFeedback.ReportSection.Append*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection.Append*
        name: Append
        nameWithType: ReportSection.Append
        qualifiedName: AeLa.EasyFeedback.ReportSection.Append
      VB:
      - id: AeLa.EasyFeedback.ReportSection.Append*
        name: Append
        nameWithType: ReportSection.Append
        qualifiedName: AeLa.EasyFeedback.ReportSection.Append
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.ReportSection.Append
  AeLa.EasyFeedback.ReportSection.AppendLine*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection.AppendLine*
        name: AppendLine
        nameWithType: ReportSection.AppendLine
        qualifiedName: AeLa.EasyFeedback.ReportSection.AppendLine
      VB:
      - id: AeLa.EasyFeedback.ReportSection.AppendLine*
        name: AppendLine
        nameWithType: ReportSection.AppendLine
        qualifiedName: AeLa.EasyFeedback.ReportSection.AppendLine
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.ReportSection.AppendLine
  AeLa.EasyFeedback.ReportSection.SetText*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection.SetText*
        name: SetText
        nameWithType: ReportSection.SetText
        qualifiedName: AeLa.EasyFeedback.ReportSection.SetText
      VB:
      - id: AeLa.EasyFeedback.ReportSection.SetText*
        name: SetText
        nameWithType: ReportSection.SetText
        qualifiedName: AeLa.EasyFeedback.ReportSection.SetText
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.ReportSection.SetText
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  AeLa.EasyFeedback.ReportSection.ToString*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection.ToString*
        name: ToString
        nameWithType: ReportSection.ToString
        qualifiedName: AeLa.EasyFeedback.ReportSection.ToString
      VB:
      - id: AeLa.EasyFeedback.ReportSection.ToString*
        name: ToString
        nameWithType: ReportSection.ToString
        qualifiedName: AeLa.EasyFeedback.ReportSection.ToString
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.ReportSection.ToString
  AeLa.EasyFeedback.ReportSection:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.ReportSection
        name: ReportSection
        nameWithType: ReportSection
        qualifiedName: AeLa.EasyFeedback.ReportSection
      VB:
      - id: AeLa.EasyFeedback.ReportSection
        name: ReportSection
        nameWithType: ReportSection
        qualifiedName: AeLa.EasyFeedback.ReportSection
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.ReportSection
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{Label}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Label}'
  List:
    name:
      CSharp:
      - id: List
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      VB:
      - id: List
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
    isDefinition: true
    commentId: '!:List'
  List{FileAttachment}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: FileAttachment
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: FileAttachment
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{FileAttachment}'
  AeLa.EasyFeedback.Report.Attachments*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.Attachments*
        name: Attachments
        nameWithType: Report.Attachments
        qualifiedName: AeLa.EasyFeedback.Report.Attachments
      VB:
      - id: AeLa.EasyFeedback.Report.Attachments*
        name: Attachments
        nameWithType: Report.Attachments
        qualifiedName: AeLa.EasyFeedback.Report.Attachments
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.Attachments
  AeLa.EasyFeedback.Report.Item*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.Item*
        name: Item
        nameWithType: Report.Item
        qualifiedName: AeLa.EasyFeedback.Report.Item
      VB:
      - id: AeLa.EasyFeedback.Report.Item*
        name: Item
        nameWithType: Report.Item
        qualifiedName: AeLa.EasyFeedback.Report.Item
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.Item
  AeLa.EasyFeedback.Report.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.#ctor*
        name: Report
        nameWithType: Report.Report
        qualifiedName: AeLa.EasyFeedback.Report.Report
      VB:
      - id: AeLa.EasyFeedback.Report.#ctor*
        name: Report
        nameWithType: Report.Report
        qualifiedName: AeLa.EasyFeedback.Report.Report
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.#ctor
  AeLa.EasyFeedback.Report.AddSection*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.AddSection*
        name: AddSection
        nameWithType: Report.AddSection
        qualifiedName: AeLa.EasyFeedback.Report.AddSection
      VB:
      - id: AeLa.EasyFeedback.Report.AddSection*
        name: AddSection
        nameWithType: Report.AddSection
        qualifiedName: AeLa.EasyFeedback.Report.AddSection
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.AddSection
  AeLa.EasyFeedback.Report.RemoveSection*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.RemoveSection*
        name: RemoveSection
        nameWithType: Report.RemoveSection
        qualifiedName: AeLa.EasyFeedback.Report.RemoveSection
      VB:
      - id: AeLa.EasyFeedback.Report.RemoveSection*
        name: RemoveSection
        nameWithType: Report.RemoveSection
        qualifiedName: AeLa.EasyFeedback.Report.RemoveSection
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.RemoveSection
  AeLa.EasyFeedback.Report.HasSection*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.HasSection*
        name: HasSection
        nameWithType: Report.HasSection
        qualifiedName: AeLa.EasyFeedback.Report.HasSection
      VB:
      - id: AeLa.EasyFeedback.Report.HasSection*
        name: HasSection
        nameWithType: Report.HasSection
        qualifiedName: AeLa.EasyFeedback.Report.HasSection
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.HasSection
  AeLa.EasyFeedback.Report.ToString*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.ToString*
        name: ToString
        nameWithType: Report.ToString
        qualifiedName: AeLa.EasyFeedback.Report.ToString
      VB:
      - id: AeLa.EasyFeedback.Report.ToString*
        name: ToString
        nameWithType: Report.ToString
        qualifiedName: AeLa.EasyFeedback.Report.ToString
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.ToString
  AeLa.EasyFeedback.Report.GetLocalFileText*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.GetLocalFileText*
        name: GetLocalFileText
        nameWithType: Report.GetLocalFileText
        qualifiedName: AeLa.EasyFeedback.Report.GetLocalFileText
      VB:
      - id: AeLa.EasyFeedback.Report.GetLocalFileText*
        name: GetLocalFileText
        nameWithType: Report.GetLocalFileText
        qualifiedName: AeLa.EasyFeedback.Report.GetLocalFileText
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.GetLocalFileText
  FileAttachment:
    name:
      CSharp:
      - id: FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: FileAttachment
        isExternal: true
      VB:
      - id: FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: FileAttachment
        isExternal: true
    isDefinition: true
    commentId: '!:FileAttachment'
  AeLa.EasyFeedback.Report.AttachFile*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.AttachFile*
        name: AttachFile
        nameWithType: Report.AttachFile
        qualifiedName: AeLa.EasyFeedback.Report.AttachFile
      VB:
      - id: AeLa.EasyFeedback.Report.AttachFile*
        name: AttachFile
        nameWithType: Report.AttachFile
        qualifiedName: AeLa.EasyFeedback.Report.AttachFile
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.AttachFile
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Label:
    name:
      CSharp:
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
      VB:
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
    isDefinition: true
  AeLa.EasyFeedback.Report.AddLabel*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.AddLabel*
        name: AddLabel
        nameWithType: Report.AddLabel
        qualifiedName: AeLa.EasyFeedback.Report.AddLabel
      VB:
      - id: AeLa.EasyFeedback.Report.AddLabel*
        name: AddLabel
        nameWithType: Report.AddLabel
        qualifiedName: AeLa.EasyFeedback.Report.AddLabel
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.AddLabel
  AeLa.EasyFeedback.Report.HasLabel*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Report.HasLabel*
        name: HasLabel
        nameWithType: Report.HasLabel
        qualifiedName: AeLa.EasyFeedback.Report.HasLabel
      VB:
      - id: AeLa.EasyFeedback.Report.HasLabel*
        name: HasLabel
        nameWithType: Report.HasLabel
        qualifiedName: AeLa.EasyFeedback.Report.HasLabel
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Report.HasLabel
  AeLa.EasyFeedback.FormElement:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement
        name: FormElement
        nameWithType: FormElement
        qualifiedName: AeLa.EasyFeedback.FormElement
      VB:
      - id: AeLa.EasyFeedback.FormElement
        name: FormElement
        nameWithType: FormElement
        qualifiedName: AeLa.EasyFeedback.FormElement
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.FormElement
  AeLa.EasyFeedback.FormElement.Form:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.Form
        name: Form
        nameWithType: FormElement.Form
        qualifiedName: AeLa.EasyFeedback.FormElement.Form
      VB:
      - id: AeLa.EasyFeedback.FormElement.Form
        name: Form
        nameWithType: FormElement.Form
        qualifiedName: AeLa.EasyFeedback.FormElement.Form
    isDefinition: true
    parent: AeLa.EasyFeedback.FormElement
    commentId: F:AeLa.EasyFeedback.FormElement.Form
  AeLa.EasyFeedback.FormElement.FormOpened:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormOpened
        name: FormOpened
        nameWithType: FormElement.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElement.FormOpened
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormOpened
        name: FormOpened
        nameWithType: FormElement.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElement.FormOpened
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AeLa.EasyFeedback.FormElement
    commentId: M:AeLa.EasyFeedback.FormElement.FormOpened
  AeLa.EasyFeedback.FormElement.FormSubmitted:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormSubmitted
        name: FormSubmitted
        nameWithType: FormElement.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElement.FormSubmitted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormSubmitted
        name: FormSubmitted
        nameWithType: FormElement.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElement.FormSubmitted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AeLa.EasyFeedback.FormElement
    commentId: M:AeLa.EasyFeedback.FormElement.FormSubmitted
  AeLa.EasyFeedback.FormElement.FormClosed:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormClosed
        name: FormClosed
        nameWithType: FormElement.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElement.FormClosed
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormClosed
        name: FormClosed
        nameWithType: FormElement.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElement.FormClosed
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AeLa.EasyFeedback.FormElement
    commentId: M:AeLa.EasyFeedback.FormElement.FormClosed
  AeLa.EasyFeedback.FormElement.Awake:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.Awake
        name: Awake
        nameWithType: FormElement.Awake
        qualifiedName: AeLa.EasyFeedback.FormElement.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AeLa.EasyFeedback.FormElement.Awake
        name: Awake
        nameWithType: FormElement.Awake
        qualifiedName: AeLa.EasyFeedback.FormElement.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AeLa.EasyFeedback.FormElement
    commentId: M:AeLa.EasyFeedback.FormElement.Awake
  AeLa.EasyFeedback.FormField:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormField
        name: FormField
        nameWithType: FormField
        qualifiedName: AeLa.EasyFeedback.FormField
      VB:
      - id: AeLa.EasyFeedback.FormField
        name: FormField
        nameWithType: FormField
        qualifiedName: AeLa.EasyFeedback.FormField
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.FormField
  AeLa.EasyFeedback.FeedbackText:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackText
        name: FeedbackText
        nameWithType: FeedbackText
        qualifiedName: AeLa.EasyFeedback.FeedbackText
      VB:
      - id: AeLa.EasyFeedback.FeedbackText
        name: FeedbackText
        nameWithType: FeedbackText
        qualifiedName: AeLa.EasyFeedback.FeedbackText
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.FeedbackText
  AeLa.EasyFeedback.FormElement.FormOpened*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormOpened*
        name: FormOpened
        nameWithType: FormElement.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElement.FormOpened
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormOpened*
        name: FormOpened
        nameWithType: FormElement.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElement.FormOpened
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElement.FormOpened
  AeLa.EasyFeedback.FormElement.FormSubmitted*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormSubmitted*
        name: FormSubmitted
        nameWithType: FormElement.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElement.FormSubmitted
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormSubmitted*
        name: FormSubmitted
        nameWithType: FormElement.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElement.FormSubmitted
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElement.FormSubmitted
  AeLa.EasyFeedback.FormElement.FormClosed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.FormClosed*
        name: FormClosed
        nameWithType: FormElement.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElement.FormClosed
      VB:
      - id: AeLa.EasyFeedback.FormElement.FormClosed*
        name: FormClosed
        nameWithType: FormElement.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElement.FormClosed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElement.FormClosed
  AeLa.EasyFeedback.FormElement.Awake*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElement.Awake*
        name: Awake
        nameWithType: FormElement.Awake
        qualifiedName: AeLa.EasyFeedback.FormElement.Awake
      VB:
      - id: AeLa.EasyFeedback.FormElement.Awake*
        name: Awake
        nameWithType: FormElement.Awake
        qualifiedName: AeLa.EasyFeedback.FormElement.Awake
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElement.Awake
  AeLa.EasyFeedback.FeedbackBoard:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FeedbackBoard
        name: FeedbackBoard
        nameWithType: FeedbackBoard
        qualifiedName: AeLa.EasyFeedback.FeedbackBoard
      VB:
      - id: AeLa.EasyFeedback.FeedbackBoard
        name: FeedbackBoard
        nameWithType: FeedbackBoard
        qualifiedName: AeLa.EasyFeedback.FeedbackBoard
    isDefinition: true
    parent: AeLa.EasyFeedback
    commentId: T:AeLa.EasyFeedback.FeedbackBoard
  AeLa.EasyFeedback.EFConfig.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.EFConfig.#ctor*
        name: EFConfig
        nameWithType: EFConfig.EFConfig
        qualifiedName: AeLa.EasyFeedback.EFConfig.EFConfig
      VB:
      - id: AeLa.EasyFeedback.EFConfig.#ctor*
        name: EFConfig
        nameWithType: EFConfig.EFConfig
        qualifiedName: AeLa.EasyFeedback.EFConfig.EFConfig
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.EFConfig.#ctor
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Label[]:
    name:
      CSharp:
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Label
        name: Label
        nameWithType: Label
        qualifiedName: Label
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String):
    commentId: M:AeLa.EasyFeedback.UI.Toaster.Toaster.Toast(System.String)
  AeLa.EasyFeedback.UI.Toaster:
    name:
      CSharp:
      - name: AeLa.EasyFeedback.UI.Toaster
        nameWithType: AeLa.EasyFeedback.UI.Toaster
        qualifiedName: AeLa.EasyFeedback.UI.Toaster
      VB:
      - name: AeLa.EasyFeedback.UI.Toaster
        nameWithType: AeLa.EasyFeedback.UI.Toaster
        qualifiedName: AeLa.EasyFeedback.UI.Toaster
    isDefinition: true
    commentId: N:AeLa.EasyFeedback.UI.Toaster
  AeLa.EasyFeedback.UI.Toaster.Toast:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast
        name: Toast
        nameWithType: Toast
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast
        name: Toast
        nameWithType: Toast
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast
    isDefinition: true
    parent: AeLa.EasyFeedback.UI.Toaster
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toast
  AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
        name: Toaster.ToastAnchor
        nameWithType: Toaster.ToastAnchor
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
        name: Toaster.ToastAnchor
        nameWithType: Toaster.ToastAnchor
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
    isDefinition: true
    parent: AeLa.EasyFeedback.UI.Toaster
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster.ToastAnchor
  AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
        name: Toaster.PopoutDirection
        nameWithType: Toaster.PopoutDirection
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
        name: Toaster.PopoutDirection
        nameWithType: Toaster.PopoutDirection
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
    isDefinition: true
    parent: AeLa.EasyFeedback.UI.Toaster
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster.PopoutDirection
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  AeLa.EasyFeedback.UI.Toaster.Toaster.Toast*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast*
        name: Toast
        nameWithType: Toaster.Toast
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast*
        name: Toast
        nameWithType: Toaster.Toast
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster.Toast
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.UI.Toaster.Toaster.Toast
  AeLa.EasyFeedback.UI.Toaster.Toaster:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster
        name: Toaster
        nameWithType: Toaster
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toaster
        name: Toaster
        nameWithType: Toaster
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toaster
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.UI.Toaster.Toaster
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
    commentId: '!:GameObject'
  AeLa.EasyFeedback.UI.Toaster.Toast.Message*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast.Message*
        name: Message
        nameWithType: Toast.Message
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast.Message
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast.Message*
        name: Message
        nameWithType: Toast.Message
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast.Message
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.UI.Toaster.Toast.Message
  RectTransform:
    name:
      CSharp:
      - id: RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
    commentId: '!:RectTransform'
  AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform*
        name: RectTransform
        nameWithType: Toast.RectTransform
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
      VB:
      - id: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform*
        name: RectTransform
        nameWithType: Toast.RectTransform
        qualifiedName: AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.UI.Toaster.Toast.RectTransform
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  AeLa.EasyFeedback.APIs:
    name:
      CSharp:
      - name: AeLa.EasyFeedback.APIs
        nameWithType: AeLa.EasyFeedback.APIs
        qualifiedName: AeLa.EasyFeedback.APIs
      VB:
      - name: AeLa.EasyFeedback.APIs
        nameWithType: AeLa.EasyFeedback.APIs
        qualifiedName: AeLa.EasyFeedback.APIs
    isDefinition: true
    commentId: N:AeLa.EasyFeedback.APIs
  AeLa.EasyFeedback.APIs.Prefs:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Prefs
        name: Prefs
        nameWithType: Prefs
        qualifiedName: AeLa.EasyFeedback.APIs.Prefs
      VB:
      - id: AeLa.EasyFeedback.APIs.Prefs
        name: Prefs
        nameWithType: Prefs
        qualifiedName: AeLa.EasyFeedback.APIs.Prefs
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Prefs
  AeLa.EasyFeedback.APIs.LabelNames:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.LabelNames
        name: LabelNames
        nameWithType: LabelNames
        qualifiedName: AeLa.EasyFeedback.APIs.LabelNames
      VB:
      - id: AeLa.EasyFeedback.APIs.LabelNames
        name: LabelNames
        nameWithType: LabelNames
        qualifiedName: AeLa.EasyFeedback.APIs.LabelNames
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.LabelNames
  AeLa.EasyFeedback.APIs.Board:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
      VB:
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Board
  AeLa.EasyFeedback.APIs.Board[]:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AeLa.EasyFeedback.APIs.BoardCollection:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.BoardCollection
        name: BoardCollection
        nameWithType: BoardCollection
        qualifiedName: AeLa.EasyFeedback.APIs.BoardCollection
      VB:
      - id: AeLa.EasyFeedback.APIs.BoardCollection
        name: BoardCollection
        nameWithType: BoardCollection
        qualifiedName: AeLa.EasyFeedback.APIs.BoardCollection
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.BoardCollection
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Boolean}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Boolean}
  System.Nullable{AeLa.EasyFeedback.APIs.CardAgeMode}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.CardAgeMode
        name: CardAgeMode
        nameWithType: CardAgeMode
        qualifiedName: AeLa.EasyFeedback.APIs.CardAgeMode
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.CardAgeMode
        name: CardAgeMode
        nameWithType: CardAgeMode
        qualifiedName: AeLa.EasyFeedback.APIs.CardAgeMode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{AeLa.EasyFeedback.APIs.CardAgeMode}
  System.Nullable{AeLa.EasyFeedback.APIs.Invitations}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.Invitations
        name: Invitations
        nameWithType: Invitations
        qualifiedName: AeLa.EasyFeedback.APIs.Invitations
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.Invitations
        name: Invitations
        nameWithType: Invitations
        qualifiedName: AeLa.EasyFeedback.APIs.Invitations
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{AeLa.EasyFeedback.APIs.Invitations}
  System.Nullable{AeLa.EasyFeedback.APIs.PermissionLevel}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.PermissionLevel
        name: PermissionLevel
        nameWithType: PermissionLevel
        qualifiedName: AeLa.EasyFeedback.APIs.PermissionLevel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.PermissionLevel
        name: PermissionLevel
        nameWithType: PermissionLevel
        qualifiedName: AeLa.EasyFeedback.APIs.PermissionLevel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{AeLa.EasyFeedback.APIs.PermissionLevel}
  System.Nullable{AeLa.EasyFeedback.APIs.AccessibilityLevel}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.AccessibilityLevel
        name: AccessibilityLevel
        nameWithType: AccessibilityLevel
        qualifiedName: AeLa.EasyFeedback.APIs.AccessibilityLevel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.AccessibilityLevel
        name: AccessibilityLevel
        nameWithType: AccessibilityLevel
        qualifiedName: AeLa.EasyFeedback.APIs.AccessibilityLevel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{AeLa.EasyFeedback.APIs.AccessibilityLevel}
  AeLa.EasyFeedback.APIs.Label.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Label.#ctor*
        name: Label
        nameWithType: Label.Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label.Label
      VB:
      - id: AeLa.EasyFeedback.APIs.Label.#ctor*
        name: Label
        nameWithType: Label.Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label.Label
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Label.#ctor
  AeLa.EasyFeedback.APIs.Label:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      VB:
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.Label
  AeLa.EasyFeedback.APIs.Label[]:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AeLa.EasyFeedback.APIs.LabelCollection:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.LabelCollection
        name: LabelCollection
        nameWithType: LabelCollection
        qualifiedName: AeLa.EasyFeedback.APIs.LabelCollection
      VB:
      - id: AeLa.EasyFeedback.APIs.LabelCollection
        name: LabelCollection
        nameWithType: LabelCollection
        qualifiedName: AeLa.EasyFeedback.APIs.LabelCollection
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.LabelCollection
  AeLa.EasyFeedback.APIs.List:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
      VB:
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.List
  AeLa.EasyFeedback.APIs.Subscribed:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Subscribed
        name: Subscribed
        nameWithType: Subscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Subscribed
      VB:
      - id: AeLa.EasyFeedback.APIs.Subscribed
        name: Subscribed
        nameWithType: Subscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Subscribed
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.Subscribed
  AeLa.EasyFeedback.APIs.List[]:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AeLa.EasyFeedback.APIs.ListCollection:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.ListCollection
        name: ListCollection
        nameWithType: ListCollection
        qualifiedName: AeLa.EasyFeedback.APIs.ListCollection
      VB:
      - id: AeLa.EasyFeedback.APIs.ListCollection
        name: ListCollection
        nameWithType: ListCollection
        qualifiedName: AeLa.EasyFeedback.APIs.ListCollection
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.ListCollection
  AeLa.EasyFeedback.APIs.PermissionLevel:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.PermissionLevel
        name: PermissionLevel
        nameWithType: PermissionLevel
        qualifiedName: AeLa.EasyFeedback.APIs.PermissionLevel
      VB:
      - id: AeLa.EasyFeedback.APIs.PermissionLevel
        name: PermissionLevel
        nameWithType: PermissionLevel
        qualifiedName: AeLa.EasyFeedback.APIs.PermissionLevel
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.PermissionLevel
  AeLa.EasyFeedback.APIs.Invitations:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Invitations
        name: Invitations
        nameWithType: Invitations
        qualifiedName: AeLa.EasyFeedback.APIs.Invitations
      VB:
      - id: AeLa.EasyFeedback.APIs.Invitations
        name: Invitations
        nameWithType: Invitations
        qualifiedName: AeLa.EasyFeedback.APIs.Invitations
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Invitations
  AeLa.EasyFeedback.APIs.AccessibilityLevel:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.AccessibilityLevel
        name: AccessibilityLevel
        nameWithType: AccessibilityLevel
        qualifiedName: AeLa.EasyFeedback.APIs.AccessibilityLevel
      VB:
      - id: AeLa.EasyFeedback.APIs.AccessibilityLevel
        name: AccessibilityLevel
        nameWithType: AccessibilityLevel
        qualifiedName: AeLa.EasyFeedback.APIs.AccessibilityLevel
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.AccessibilityLevel
  AeLa.EasyFeedback.APIs.CardAgeMode:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.CardAgeMode
        name: CardAgeMode
        nameWithType: CardAgeMode
        qualifiedName: AeLa.EasyFeedback.APIs.CardAgeMode
      VB:
      - id: AeLa.EasyFeedback.APIs.CardAgeMode
        name: CardAgeMode
        nameWithType: CardAgeMode
        qualifiedName: AeLa.EasyFeedback.APIs.CardAgeMode
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.CardAgeMode
  AeLa.EasyFeedback.APIs.Badges:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Badges
        name: Badges
        nameWithType: Badges
        qualifiedName: AeLa.EasyFeedback.APIs.Badges
      VB:
      - id: AeLa.EasyFeedback.APIs.Badges
        name: Badges
        nameWithType: Badges
        qualifiedName: AeLa.EasyFeedback.APIs.Badges
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Badges
  System.Boolean[]:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  DateTime:
    name:
      CSharp:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      VB:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
    isDefinition: true
    commentId: '!:DateTime'
  AeLa.EasyFeedback.APIs.Descdata:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Descdata
        name: Descdata
        nameWithType: Descdata
        qualifiedName: AeLa.EasyFeedback.APIs.Descdata
      VB:
      - id: AeLa.EasyFeedback.APIs.Descdata
        name: Descdata
        nameWithType: Descdata
        qualifiedName: AeLa.EasyFeedback.APIs.Descdata
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Descdata
  AeLa.EasyFeedback.APIs.CardLabel[]:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.CardLabel
        name: CardLabel
        nameWithType: CardLabel
        qualifiedName: AeLa.EasyFeedback.APIs.CardLabel
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: AeLa.EasyFeedback.APIs.CardLabel
        name: CardLabel
        nameWithType: CardLabel
        qualifiedName: AeLa.EasyFeedback.APIs.CardLabel
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AeLa.EasyFeedback.APIs.AddCardResponse:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.AddCardResponse
        name: AddCardResponse
        nameWithType: AddCardResponse
        qualifiedName: AeLa.EasyFeedback.APIs.AddCardResponse
      VB:
      - id: AeLa.EasyFeedback.APIs.AddCardResponse
        name: AddCardResponse
        nameWithType: AddCardResponse
        qualifiedName: AeLa.EasyFeedback.APIs.AddCardResponse
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.AddCardResponse
  AeLa.EasyFeedback.APIs.Emoji:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Emoji
        name: Emoji
        nameWithType: Emoji
        qualifiedName: AeLa.EasyFeedback.APIs.Emoji
      VB:
      - id: AeLa.EasyFeedback.APIs.Emoji
        name: Emoji
        nameWithType: Emoji
        qualifiedName: AeLa.EasyFeedback.APIs.Emoji
    isDefinition: true
    parent: AeLa.EasyFeedback.APIs
    commentId: T:AeLa.EasyFeedback.APIs.Emoji
  AeLa.EasyFeedback.APIs.CardLabel:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.CardLabel
        name: CardLabel
        nameWithType: CardLabel
        qualifiedName: AeLa.EasyFeedback.APIs.CardLabel
      VB:
      - id: AeLa.EasyFeedback.APIs.CardLabel
        name: CardLabel
        nameWithType: CardLabel
        qualifiedName: AeLa.EasyFeedback.APIs.CardLabel
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.CardLabel
  UnityWebRequest:
    name:
      CSharp:
      - id: UnityWebRequest
        name: UnityWebRequest
        nameWithType: UnityWebRequest
        qualifiedName: UnityWebRequest
        isExternal: true
      VB:
      - id: UnityWebRequest
        name: UnityWebRequest
        nameWithType: UnityWebRequest
        qualifiedName: UnityWebRequest
        isExternal: true
    isDefinition: true
    commentId: '!:UnityWebRequest'
  Exception:
    name:
      CSharp:
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      VB:
      - id: Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
    isDefinition: true
    commentId: '!:Exception'
  AeLa.EasyFeedback.APIs.Trello.AuthURL*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.AuthURL*
        name: AuthURL
        nameWithType: Trello.AuthURL
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AuthURL
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.AuthURL*
        name: AuthURL
        nameWithType: Trello.AuthURL
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AuthURL
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.AuthURL
  AeLa.EasyFeedback.APIs.Trello.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.#ctor*
        name: Trello
        nameWithType: Trello.Trello
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.Trello
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.#ctor*
        name: Trello
        nameWithType: Trello.Trello
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.Trello
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.#ctor
  AeLa.EasyFeedback.APIs.Trello.GetURI*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetURI*
        name: GetURI
        nameWithType: Trello.GetURI
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetURI
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetURI*
        name: GetURI
        nameWithType: Trello.GetURI
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetURI
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetURI
  AeLa.EasyFeedback.APIs.Trello.IsValidToken*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.IsValidToken*
        name: IsValidToken
        nameWithType: Trello.IsValidToken
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.IsValidToken
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.IsValidToken*
        name: IsValidToken
        nameWithType: Trello.IsValidToken
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.IsValidToken
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.IsValidToken
  IEnumerator:
    name:
      CSharp:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      VB:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
    isDefinition: true
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEnumerable`1'
  IEnumerable{AeLa.EasyFeedback.APIs.Label}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{AeLa.EasyFeedback.APIs.Label}'
  AeLa.EasyFeedback.APIs.Trello.AddCard*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.AddCard*
        name: AddCard
        nameWithType: Trello.AddCard
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddCard
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.AddCard*
        name: AddCard
        nameWithType: Trello.AddCard
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddCard
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.AddCard
  AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync*
        name: AddAttachmentAsync
        nameWithType: Trello.AddAttachmentAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync*
        name: AddAttachmentAsync
        nameWithType: Trello.AddAttachmentAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.AddAttachmentAsync
  Action`1:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Action{AeLa.EasyFeedback.APIs.Label[]}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.Label
        name: Label
        nameWithType: Label
        qualifiedName: AeLa.EasyFeedback.APIs.Label
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{AeLa.EasyFeedback.APIs.Label[]}'
  AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync*
        name: GetLabelsAsync
        nameWithType: Trello.GetLabelsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync*
        name: GetLabelsAsync
        nameWithType: Trello.GetLabelsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetLabelsAsync
  Action{AeLa.EasyFeedback.APIs.List[]}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.List
        name: List
        nameWithType: List
        qualifiedName: AeLa.EasyFeedback.APIs.List
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{AeLa.EasyFeedback.APIs.List[]}'
  AeLa.EasyFeedback.APIs.Trello.GetListsAsync*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetListsAsync*
        name: GetListsAsync
        nameWithType: Trello.GetListsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetListsAsync
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetListsAsync*
        name: GetListsAsync
        nameWithType: Trello.GetListsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetListsAsync
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetListsAsync
  AeLa.EasyFeedback.APIs.Trello.GetLists*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLists*
        name: GetLists
        nameWithType: Trello.GetLists
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLists
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLists*
        name: GetLists
        nameWithType: Trello.GetLists
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLists
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetLists
  System.Nullable{AeLa.EasyFeedback.APIs.Prefs}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.Prefs
        name: Prefs
        nameWithType: Prefs
        qualifiedName: AeLa.EasyFeedback.APIs.Prefs
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.Prefs
        name: Prefs
        nameWithType: Prefs
        qualifiedName: AeLa.EasyFeedback.APIs.Prefs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{AeLa.EasyFeedback.APIs.Prefs}
  AeLa.EasyFeedback.APIs.Trello.AddBoard*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.AddBoard*
        name: AddBoard
        nameWithType: Trello.AddBoard
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddBoard
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.AddBoard*
        name: AddBoard
        nameWithType: Trello.AddBoard
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.AddBoard
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.AddBoard
  Action{AeLa.EasyFeedback.APIs.Board[]}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AeLa.EasyFeedback.APIs.Board
        name: Board
        nameWithType: Board
        qualifiedName: AeLa.EasyFeedback.APIs.Board
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{AeLa.EasyFeedback.APIs.Board[]}'
  AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync*
        name: GetBoardsAsync
        nameWithType: Trello.GetBoardsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync*
        name: GetBoardsAsync
        nameWithType: Trello.GetBoardsAsync
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetBoardsAsync
  AeLa.EasyFeedback.APIs.Trello.GetBoards*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetBoards*
        name: GetBoards
        nameWithType: Trello.GetBoards
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetBoards
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetBoards*
        name: GetBoards
        nameWithType: Trello.GetBoards
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetBoards
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetBoards
  AeLa.EasyFeedback.APIs.Trello.GetLabels*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLabels*
        name: GetLabels
        nameWithType: Trello.GetLabels
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLabels
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetLabels*
        name: GetLabels
        nameWithType: Trello.GetLabels
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetLabels
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetLabels
  AeLa.EasyFeedback.APIs.Trello.GetSubscribed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.GetSubscribed*
        name: GetSubscribed
        nameWithType: Trello.GetSubscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetSubscribed
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.GetSubscribed*
        name: GetSubscribed
        nameWithType: Trello.GetSubscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.GetSubscribed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.GetSubscribed
  AeLa.EasyFeedback.APIs.Trello.PutSubscribed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello.PutSubscribed*
        name: PutSubscribed
        nameWithType: Trello.PutSubscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.PutSubscribed
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello.PutSubscribed*
        name: PutSubscribed
        nameWithType: Trello.PutSubscribed
        qualifiedName: AeLa.EasyFeedback.APIs.Trello.PutSubscribed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.APIs.Trello.PutSubscribed
  AeLa.EasyFeedback.APIs.Trello:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.APIs.Trello
        name: Trello
        nameWithType: Trello
        qualifiedName: AeLa.EasyFeedback.APIs.Trello
      VB:
      - id: AeLa.EasyFeedback.APIs.Trello
        name: Trello
        nameWithType: Trello
        qualifiedName: AeLa.EasyFeedback.APIs.Trello
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.APIs.Trello
  AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake*
        name: Awake
        nameWithType: PriorityDropdown.Awake
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake
      VB:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake*
        name: Awake
        nameWithType: PriorityDropdown.Awake
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.PriorityDropdown.Awake
  AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed*
        name: FormClosed
        nameWithType: PriorityDropdown.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed
      VB:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed*
        name: FormClosed
        nameWithType: PriorityDropdown.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormClosed
  AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened*
        name: FormOpened
        nameWithType: PriorityDropdown.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened
      VB:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened*
        name: FormOpened
        nameWithType: PriorityDropdown.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormOpened
  AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted*
        name: FormSubmitted
        nameWithType: PriorityDropdown.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted
      VB:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted*
        name: FormSubmitted
        nameWithType: PriorityDropdown.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.PriorityDropdown.FormSubmitted
  AeLa.EasyFeedback.FormElements.PriorityDropdown:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown
        name: PriorityDropdown
        nameWithType: PriorityDropdown
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown
      VB:
      - id: AeLa.EasyFeedback.FormElements.PriorityDropdown
        name: PriorityDropdown
        nameWithType: PriorityDropdown
        qualifiedName: AeLa.EasyFeedback.FormElements.PriorityDropdown
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.FormElements.PriorityDropdown
  AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake*
        name: Awake
        nameWithType: CategoryDropdown.Awake
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake
      VB:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake*
        name: Awake
        nameWithType: CategoryDropdown.Awake
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.CategoryDropdown.Awake
  AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed*
        name: FormClosed
        nameWithType: CategoryDropdown.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed
      VB:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed*
        name: FormClosed
        nameWithType: CategoryDropdown.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormClosed
  AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened*
        name: FormOpened
        nameWithType: CategoryDropdown.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened
      VB:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened*
        name: FormOpened
        nameWithType: CategoryDropdown.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormOpened
  AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted*
        name: FormSubmitted
        nameWithType: CategoryDropdown.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted
      VB:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted*
        name: FormSubmitted
        nameWithType: CategoryDropdown.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.CategoryDropdown.FormSubmitted
  AeLa.EasyFeedback.FormElements.CategoryDropdown:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown
        name: CategoryDropdown
        nameWithType: CategoryDropdown
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown
      VB:
      - id: AeLa.EasyFeedback.FormElements.CategoryDropdown
        name: CategoryDropdown
        nameWithType: CategoryDropdown
        qualifiedName: AeLa.EasyFeedback.FormElements.CategoryDropdown
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.FormElements.CategoryDropdown
  AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed*
        name: FormClosed
        nameWithType: ReportTitle.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed
      VB:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed*
        name: FormClosed
        nameWithType: ReportTitle.FormClosed
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.ReportTitle.FormClosed
  AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened*
        name: FormOpened
        nameWithType: ReportTitle.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened
      VB:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened*
        name: FormOpened
        nameWithType: ReportTitle.FormOpened
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.ReportTitle.FormOpened
  AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted*
        name: FormSubmitted
        nameWithType: ReportTitle.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted
      VB:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted*
        name: FormSubmitted
        nameWithType: ReportTitle.FormSubmitted
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.FormElements.ReportTitle.FormSubmitted
  AeLa.EasyFeedback.FormElements.ReportTitle:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle
        name: ReportTitle
        nameWithType: ReportTitle
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle
      VB:
      - id: AeLa.EasyFeedback.FormElements.ReportTitle
        name: ReportTitle
        nameWithType: ReportTitle
        qualifiedName: AeLa.EasyFeedback.FormElements.ReportTitle
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.FormElements.ReportTitle
  AeLa.EasyFeedback.FormElements:
    name:
      CSharp:
      - name: AeLa.EasyFeedback.FormElements
        nameWithType: AeLa.EasyFeedback.FormElements
        qualifiedName: AeLa.EasyFeedback.FormElements
      VB:
      - name: AeLa.EasyFeedback.FormElements
        nameWithType: AeLa.EasyFeedback.FormElements
        qualifiedName: AeLa.EasyFeedback.FormElements
    isDefinition: true
    commentId: N:AeLa.EasyFeedback.FormElements
  AeLa.EasyFeedback.Utility.FileAttachment.Name*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.Name*
        name: Name
        nameWithType: FileAttachment.Name
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.Name
      VB:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.Name*
        name: Name
        nameWithType: FileAttachment.Name
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.Name
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.FileAttachment.Name
  AeLa.EasyFeedback.Utility.FileAttachment.Data*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.Data*
        name: Data
        nameWithType: FileAttachment.Data
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.Data
      VB:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.Data*
        name: Data
        nameWithType: FileAttachment.Data
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.Data
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.FileAttachment.Data
  AeLa.EasyFeedback.Utility.FileAttachment.MimeType*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.MimeType*
        name: MimeType
        nameWithType: FileAttachment.MimeType
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.MimeType
      VB:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.MimeType*
        name: MimeType
        nameWithType: FileAttachment.MimeType
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.MimeType
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.FileAttachment.MimeType
  AeLa.EasyFeedback.Utility.FileAttachment.#ctor*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.#ctor*
        name: FileAttachment
        nameWithType: FileAttachment.FileAttachment
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment
      VB:
      - id: AeLa.EasyFeedback.Utility.FileAttachment.#ctor*
        name: FileAttachment
        nameWithType: FileAttachment.FileAttachment
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment.FileAttachment
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.FileAttachment.#ctor
  AeLa.EasyFeedback.Utility.FileAttachment:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment
      VB:
      - id: AeLa.EasyFeedback.Utility.FileAttachment
        name: FileAttachment
        nameWithType: FileAttachment
        qualifiedName: AeLa.EasyFeedback.Utility.FileAttachment
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.Utility.FileAttachment
  Selectable:
    name:
      CSharp:
      - id: Selectable
        name: Selectable
        nameWithType: Selectable
        qualifiedName: Selectable
        isExternal: true
      VB:
      - id: Selectable
        name: Selectable
        nameWithType: Selectable
        qualifiedName: Selectable
        isExternal: true
    isDefinition: true
  AeLa.EasyFeedback.Utility.TabNext:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.TabNext
        name: TabNext
        nameWithType: TabNext
        qualifiedName: AeLa.EasyFeedback.Utility.TabNext
      VB:
      - id: AeLa.EasyFeedback.Utility.TabNext
        name: TabNext
        nameWithType: TabNext
        qualifiedName: AeLa.EasyFeedback.Utility.TabNext
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.Utility.TabNext
  AeLa.EasyFeedback.Utility.SetSelectedOnOpen:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
        name: SetSelectedOnOpen
        nameWithType: SetSelectedOnOpen
        qualifiedName: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
      VB:
      - id: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
        name: SetSelectedOnOpen
        nameWithType: SetSelectedOnOpen
        qualifiedName: AeLa.EasyFeedback.Utility.SetSelectedOnOpen
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.Utility.SetSelectedOnOpen
  AeLa.EasyFeedback.Utility.SetVersionText:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.SetVersionText
        name: SetVersionText
        nameWithType: SetVersionText
        qualifiedName: AeLa.EasyFeedback.Utility.SetVersionText
      VB:
      - id: AeLa.EasyFeedback.Utility.SetVersionText
        name: SetVersionText
        nameWithType: SetVersionText
        qualifiedName: AeLa.EasyFeedback.Utility.SetVersionText
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.Utility.SetVersionText
  AeLa.EasyFeedback.Utility:
    name:
      CSharp:
      - name: AeLa.EasyFeedback.Utility
        nameWithType: AeLa.EasyFeedback.Utility
        qualifiedName: AeLa.EasyFeedback.Utility
      VB:
      - name: AeLa.EasyFeedback.Utility
        nameWithType: AeLa.EasyFeedback.Utility
        qualifiedName: AeLa.EasyFeedback.Utility
    isDefinition: true
    commentId: N:AeLa.EasyFeedback.Utility
  AeLa.EasyFeedback.Utility.Markdown.HeaderLevel:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
        name: Markdown.HeaderLevel
        nameWithType: Markdown.HeaderLevel
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
        name: Markdown.HeaderLevel
        nameWithType: Markdown.HeaderLevel
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
    isDefinition: true
    parent: AeLa.EasyFeedback.Utility
    commentId: T:AeLa.EasyFeedback.Utility.Markdown.HeaderLevel
  AeLa.EasyFeedback.Utility.Markdown.Header*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Header*
        name: Header
        nameWithType: Markdown.Header
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Header
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Header*
        name: Header
        nameWithType: Markdown.Header
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Header
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Header
  AeLa.EasyFeedback.Utility.Markdown.H1*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H1*
        name: H1
        nameWithType: Markdown.H1
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H1
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H1*
        name: H1
        nameWithType: Markdown.H1
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H1
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H1
  AeLa.EasyFeedback.Utility.Markdown.H2*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H2*
        name: H2
        nameWithType: Markdown.H2
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H2
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H2*
        name: H2
        nameWithType: Markdown.H2
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H2
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H2
  AeLa.EasyFeedback.Utility.Markdown.H3*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H3*
        name: H3
        nameWithType: Markdown.H3
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H3
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H3*
        name: H3
        nameWithType: Markdown.H3
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H3
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H3
  AeLa.EasyFeedback.Utility.Markdown.H4*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H4*
        name: H4
        nameWithType: Markdown.H4
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H4
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H4*
        name: H4
        nameWithType: Markdown.H4
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H4
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H4
  AeLa.EasyFeedback.Utility.Markdown.H5*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H5*
        name: H5
        nameWithType: Markdown.H5
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H5
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H5*
        name: H5
        nameWithType: Markdown.H5
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H5
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H5
  AeLa.EasyFeedback.Utility.Markdown.H6*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.H6*
        name: H6
        nameWithType: Markdown.H6
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H6
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.H6*
        name: H6
        nameWithType: Markdown.H6
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.H6
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.H6
  AeLa.EasyFeedback.Utility.Markdown.Em*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Em*
        name: Em
        nameWithType: Markdown.Em
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Em
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Em*
        name: Em
        nameWithType: Markdown.Em
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Em
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Em
  AeLa.EasyFeedback.Utility.Markdown.Strong*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Strong*
        name: Strong
        nameWithType: Markdown.Strong
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Strong
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Strong*
        name: Strong
        nameWithType: Markdown.Strong
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Strong
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Strong
  AeLa.EasyFeedback.Utility.Markdown.Strike*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Strike*
        name: Strike
        nameWithType: Markdown.Strike
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Strike
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Strike*
        name: Strike
        nameWithType: Markdown.Strike
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Strike
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Strike
  AeLa.EasyFeedback.Utility.Markdown.UnorderedList*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.UnorderedList*
        name: UnorderedList
        nameWithType: Markdown.UnorderedList
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.UnorderedList
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.UnorderedList*
        name: UnorderedList
        nameWithType: Markdown.UnorderedList
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.UnorderedList
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.UnorderedList
  AeLa.EasyFeedback.Utility.Markdown.OrderedList*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.OrderedList*
        name: OrderedList
        nameWithType: Markdown.OrderedList
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.OrderedList
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.OrderedList*
        name: OrderedList
        nameWithType: Markdown.OrderedList
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.OrderedList
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.OrderedList
  AeLa.EasyFeedback.Utility.Markdown.Hyperlink*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Hyperlink*
        name: Hyperlink
        nameWithType: Markdown.Hyperlink
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Hyperlink
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Hyperlink*
        name: Hyperlink
        nameWithType: Markdown.Hyperlink
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Hyperlink
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Hyperlink
  AeLa.EasyFeedback.Utility.Markdown.Image*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Image*
        name: Image
        nameWithType: Markdown.Image
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Image
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Image*
        name: Image
        nameWithType: Markdown.Image
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Image
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Image
  AeLa.EasyFeedback.Utility.Markdown.Code*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Code*
        name: Code
        nameWithType: Markdown.Code
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Code
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Code*
        name: Code
        nameWithType: Markdown.Code
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Code
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Code
  AeLa.EasyFeedback.Utility.Markdown.CodeBlock*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.CodeBlock*
        name: CodeBlock
        nameWithType: Markdown.CodeBlock
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.CodeBlock
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.CodeBlock*
        name: CodeBlock
        nameWithType: Markdown.CodeBlock
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.CodeBlock
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.CodeBlock
  AeLa.EasyFeedback.Utility.Markdown.Blockquote*:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown.Blockquote*
        name: Blockquote
        nameWithType: Markdown.Blockquote
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Blockquote
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown.Blockquote*
        name: Blockquote
        nameWithType: Markdown.Blockquote
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown.Blockquote
    isDefinition: true
    commentId: Overload:AeLa.EasyFeedback.Utility.Markdown.Blockquote
  AeLa.EasyFeedback.Utility.Markdown:
    name:
      CSharp:
      - id: AeLa.EasyFeedback.Utility.Markdown
        name: Markdown
        nameWithType: Markdown
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown
      VB:
      - id: AeLa.EasyFeedback.Utility.Markdown
        name: Markdown
        nameWithType: Markdown
        qualifiedName: AeLa.EasyFeedback.Utility.Markdown
    isDefinition: true
    commentId: T:AeLa.EasyFeedback.Utility.Markdown
